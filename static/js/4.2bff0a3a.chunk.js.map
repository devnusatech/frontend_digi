{"version":3,"sources":["assets/images/landing/features/Exchange.svg","assets/images/landing/features/Types.svg","assets/images/landing/features/Customize.svg","assets/images/landing/features/Security.svg","assets/images/landing/features/Community.svg","assets/images/landing/features/API.svg","screens/ChangeForgottenPasswordScreen/index.tsx","mobile/screens/ChangeForgottenPasswordScreen/index.tsx","screens/ConfirmScreen/index.tsx","mobile/screens/ConfirmScreen/index.tsx","screens/EmailVerification/index.tsx","mobile/screens/EmailVerificationScreen/index.tsx","screens/ForgotPassword/index.tsx","mobile/screens/ForgotPassword/index.tsx","mobile/screens/Orders/index.tsx","mobile/screens/Landing/index.tsx","mobile/screens/Profile/index.tsx","mobile/screens/ProfileAccountActivity/index.tsx","mobile/assets/images/AddIcon.tsx","mobile/screens/ProfileApiKeys/index.tsx","screens/ProfileTwoFactorAuthScreen/index.tsx","mobile/screens/ProfileAuth/index.tsx","mobile/screens/ProfileChangePassword/index.tsx","mobile/assets/images/CheckIcon.tsx","mobile/screens/ProfileColorTheme/index.tsx","mobile/screens/ProfileLanguage/index.tsx","mobile/screens/ProfileVerificationScreen/index.tsx","mobile/components/HistoryTable/Rowitem.tsx","mobile/components/HistoryTable/index.tsx","mobile/screens/WalletsHistory/index.tsx","mobile/screens/SelectedWalletScreen/index.tsx","screens/SignInScreen/index.tsx","mobile/screens/SignInScreen/index.tsx","screens/SignUpScreen/index.tsx","mobile/screens/SignUpScreen/index.tsx","mobile/screens/Trading/index.tsx","mobile/screens/WalletDeposit/index.tsx","mobile/screens/WalletsScreen/index.tsx","mobile/screens/WalletWithdraw/index.tsx","screens/History/index.tsx","screens/LandingScreen/index.tsx","screens/MagicLinkScreen/index.tsx","screens/OrdersTabScreen/index.tsx","screens/ProfileScreen/index.tsx","screens/TradingScreen/index.tsx","screens/VerificationScreen/index.tsx","containers/Wallets/EstimatedValue/index.tsx","containers/Wallets/FailIcon.tsx","containers/Wallets/SucceedIcon.tsx","containers/Wallets/History.tsx","screens/WalletsScreen/index.tsx","screens/WalletOverview/index.tsx","screens/WalletMargin/index.tsx","screens/Withdrawal/index.tsx","screens/WalletFIatAndSpot/index.tsx","screens/WalletDetails/index.tsx","screens/WalletTrade/index.tsx","screens/RestrictedScreen/index.tsx","assets/images/BackgroundMaintenance.tsx","screens/MaintenanceScreen/index.tsx","screens/Auth/Login/index.tsx","screens/Auth/Register/index.tsx","screens/Auth/ForgotPassword/index.tsx","screens/Auth/ChangeForgotPassword/index.tsx","screens/Auth/EmailVerification/index.tsx","screens/Auth/RegisterKu/index.tsx","screens/Profile/index.tsx","screens/Referrals/index.tsx","screens/ApiKeys/index.tsx","screens/SessionsHistory/index.tsx","screens/TwoFA/index.tsx","screens/ChangePassword/index.tsx","screens/BuyCrypto/index.tsx","screens/SellCrypto/index.tsx","screens/Activity/index.tsx","screens/Market/index.tsx","screens/LearnCrypto/index.tsx","screens/Trading/index.tsx","screens/TradingChart/configs/api.ts","screens/TradingChart/configs/config.ts","screens/TradingChart/configs/timezones.ts","screens/TradingChart/configs/index.tsx","screens/TradingChart/index.tsx","screens/Transfer/index.tsx","screens/Deposit/index.tsx","screens/Notifications/index.tsx","screens/Contact/index.tsx","screens/Beneficiaries/index.tsx","screens/WithdrawalStep/index.tsx","screens/WalletFinance/index.tsx","screens/WalletOrder/index.tsx","screens/Exchange/index.tsx","screens/Geetest/index.tsx","hooks/useInitGT4.ts","routes/PrivateRoute.tsx","routes/PublicRoute.tsx","screens/ApiDocs/index.tsx","routes/Layout/index.tsx"],"names":["module","exports","ChangeForgottenPasswordComponent","props","handleSendNewPassword","payload","confirmToken","state","changeForgotPasswordFetch","reset_password_token","setDocumentTitle","history","this","token","URLSearchParams","location","search","get","lang","setState","changeLanguage","toLowerCase","next","changeForgotPassword","push","isMobileDevice","configs","currentPasswordEntropy","className","handleChangePassword","title","intl","formatMessage","id","fetchCurrentPasswordEntropy","hideOldPassword","React","ChangeForgottenPasswordScreen","compose","injectIntl","withRouter","connect","selectChangeForgotPasswordSuccess","selectMobileDeviceState","selectCurrentPasswordEntropy","selectConfigs","dispatch","credentials","entropyPasswordFetch","ChangeForgottenPasswordMobileScreen","useHistory","useIntl","isOpen","onClose","ConfirmComponent","renderVerificationStep","step","handleGetVerificationStep","labels","getVerificationStep","handleCheckUserLabels","pendingLabelExists","Boolean","find","label","kycSteps","includes","key","value","scope","passedSteps","filter","length","isSidebarOpen","labelFetch","toggleSidebar","prevProps","JSON","stringify","LogoIcon","CrossIcon","onClick","e","ConfirmScreen","selectSidebarState","selectLabelData","ConfirmMobileScreen","useSelector","Modal","goBack","Subheader","backTitle","onGoBack","mapDispatchToProps","emailVerificationFetch","resetCaptchaState","EmailVerificationScreen","emailVerificationLoading","selectSendEmailVerificationLoading","i18n","selectCurrentLanguage","error","selectSendEmailVerificationError","success","selectSendEmailVerificationSuccess","captcha_response","selectCaptchaResponse","reCaptchaSuccess","selectRecaptchaSuccess","geetestCaptchaSuccess","selectGeetestCaptchaSuccess","user","selectUserInfo","useState","minutes","setMinutes","seconds","setSeconds","useEffect","myInterval","setInterval","clearInterval","text","button","descLinkTo","linkTo","linkToTxt","subTitle","isNumberInput","onChangeOTP","otp","console","log","captcha_type","email","disabled","match","EMAIL_REGEX","disableButton","EmailVerificationMobileScreen","ForgotPasswordComponent","renderCaptcha","forgotPassword","handleFocusEmail","emailFocused","handleInputEmail","validateForm","emailError","ERROR_INVALID_EMAIL","handleComeBack","handleEnterPress","event","preventDefault","onKeyPress","OnSubmit","emailLabel","buttonLabel","message","handleFieldFocus","handleReturnBack","captchaType","ForgotPasswordScreen","selectForgotPasswordSuccess","selectForgotPasswordError","ForgotPasswordMobileScreen","onBack","OrdersMobileScreen","ProfileMobileScreen","useDispatch","currentLanguage","currentTheme","selectCurrentColorTheme","mainLinks","titleKey","route","children","level","ChevronIcon","enable2fa","settingsLinks","getLanguageName","additionalLinks","copy","alertPush","type","window","document","origin","uid","readOnly","links","ProfileAccountActivityMobileScreen","currentPage","setCurrentPage","page","selectUserActivityCurrentPage","userActivity","selectUserActivity","firstElemIndex","selectUserActivityFirstElemIndex","lastElemIndex","selectUserActivityLastElemIndex","nextPageExists","selectUserActivityNextPageExists","useUserActivityFetch","limit","map","item","index","onClickPrevPage","Number","onClickNextPage","AddIcon","width","height","viewBox","fill","d","ProfileApiKeysMobileScreen","itemToUpdate","setItemToUpdate","currentPageIndex","setPageIndex","currentAction","setCurrentAction","show2FAModal","setShow2FAModal","showCreatedApiKeyModal","setShowCreatedApiKeyModal","apiKeys","selectApiKeys","apiKeysModal","selectApiKeysModal","action","selectApiKeysFirstElemIndex","selectApiKeysLastElemIndex","selectApiKeysNextPageExists","useApiKeysFetch","handleSetApiKeyProcess","actionToSet","apiKeys2FAModal","active","apiKey","handleUpdateKey","handleDeleteKey","showModal","closeCreatedApiKeyModal","handleToggle2FA","code2FA","shouldFetch","totp_code","apiKeyCreateFetch","handleCreateApiKey","apiKeyUpdateFetch","handleUpdateApiKey","kid","apiKeyDeleteFetch","handleDeleteApiKey","undefined","ToggleTwoFactorAuthComponent","otpCode","translate","doCopy","fetchSuccess","renderToggle2fa","barcode","qrUrl","secretMatch","secret","submitHandler","handleEnable2fa","handleDisable2fa","CloseIcon","target","rel","href","renderTwoFactorAuthQR","renderSecret","handleChangeInput","handleOtpCodeChange","inputValue","placeholder","defaultLabel","Button","size","variant","block","src","alt","fieldId","get2faAction","toggle2fa","code","enable","handleNavigateToProfile","routingState","back","generateQR","ProfileTwoFactorAuthScreen","selectTwoFactorAuthQR","selectTwoFactorAuthBarcode","selectTwoFactorAuthSuccess","generate2faQRFetch","toggle2faFetch","ProfileAuthMobileScreen","setShowModal","handleNavigateTo2fa","ProfileTwoFactorAuth","is2faEnabled","navigateTo2fa","ProfileChangePasswordMobileScreen","changePasswordFetch","CheckIcon","xmlns","stroke","strokeWidth","COLOR_THEMES","ProfileThemeMobileScreen","currentColorTheme","colorTheme","listItemClassName","classnames","changeColorTheme","handleChangeColorTheme","ProfileLanguageMobileScreen","isLoggedIn","selectUserLoggedIn","languages","language","data","parse","changeUserDataFetch","handleChangeLanguage","ProfileVerificationMobileScreen","ProfileVerification","RowItem","Decimal","fixed","amount","currency","localeDate","createdAt","HistoryTable","selectCurrentPage","list","selectHistory","wallets","selectWallets","currencies","selectCurrencies","selectFirstElemIndex","selectLastElemIndex","selectNextPageExists","useWalletsFetch","useCurrenciesFetch","useHistoryFetch","mapRows","row","tableData","w","DEFAULT_CCY_PRECISION","sort","a","b","created_at","price","volume","confirmations","itemCurrency","cur","blockchainCurrency","networks","blockchain_cur","blockchain_key","minConfirmations","min_confirmations","tx","succeed","failed","accepted","collected","canceled","rejected","processing","prepared","submitted","skipped","formatTxState","retrieveData","WalletsHistory","useParams","currentTabIndex","setCurrentTabIndex","TabPanel","panels","content","onCurrentTabChange","SelectedWalletMobileScreen","wallet","name","SignIn","password","passwordError","passwordFocused","error2fa","codeFocused","renderSignInForm","loading","emailPlaceholder","passwordPlaceholder","labelSignIn","labelSignUp","passwordLabel","receiveConfirmationLabel","forgotPasswordLabel","isLoading","onForgotPassword","onSignUp","handleSignUp","onSignIn","handleSignIn","handleChangeFocusField","isFormValid","refreshError","changeEmail","handleChangeEmailValue","changePassword","handleChangePasswordValue","render2FA","onSubmit","handle2FASignIn","handleChangeOtpCode","handle2faFocus","handleClose2fa","handleClose","captchaLogin","signIn","otp_code","field","prev","ERROR_EMPTY_PASSWORD","signInRequire2FA","require2fa","signInError","signUpRequireVerification","requireVerification","nextProps","requireEmailVerification","require2FA","cx","SignInScreen","alert","selectAlertState","selectSignInError","selectUserFetching","selectSignInRequire2FA","selectSignUpRequireVerification","SignInMobileScreen","SignUp","username","confirmPassword","refId","hasConfirmed","confirmationError","usernameFocused","confirmPasswordFocused","refIdFocused","typingTimeout","passwordErrorFirstSolved","passwordErrorSecondSolved","passwordErrorThirdSolved","passwordPopUp","myRef","passwordWrapper","signUpError","handleOutsideClick","wrapperElement","current","contains","handleCheckboxClick","handleChangeUsername","replace","handleChangeEmail","passwordErrorFirstSolution","passwordErrorSecondSolution","passwordErrorThirdSolution","clearTimeout","setTimeout","handleChangeConfirmPassword","handleChangeRefId","handleFocusUsername","handleFocusPassword","handleFocusConfirmPassword","handleFocusRefId","isUsernameEnabled","refid","signUp","renderModalHeader","renderModalBody","renderModalFooter","closeModal","extractRefID","url","handleValidateForm","isEmailValid","isPasswordValid","PASSWORD_REGEX","ERROR_PASSWORD_CONFIRMATION","ERROR_INVALID_PASSWORD","localReferralCode","localStorage","getItem","referralCode","setItem","addEventListener","removeEventListener","confirmPasswordLabel","referalCodeLabel","termsMessage","clickCheckBox","minPasswordEntropy","password_min_entropy","show","header","footer","SignUpScreen","selectSignUpError","SignUpMobileScreen","TradingScreenMobile","useMarketsFetch","useMarketsTickersFetch","useDepthFetch","WalletDeposit","DEFAULT_WALLET","WalletsMobileScreen","useDocumentTitle","c","defaultWallet","balance","address","fee","WalletWithdraw","History","tab","tabMapping","handleMakeRequest","resetHistory","renderTabs","HistoryElement","fetchMarkets","fetchWallets","onTabChange","HistoryScreen","marketsFetch","walletsFetch","fetchHistory","FeaturesExchangeIcon","require","FeaturesTypesIcon","FeaturesCustomizeIcon","FeaturesSecurityIcon","FeaturesCommunityIcon","FeaturesAPIIcon","Landing","toggleColorTheme","to","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","srcSet","illusCard12","illusCard11","illusCard22","illusCard21","illusCard32","illusCard31","icLogoLight","illusNews12","illusNews11","renderPopular","renderNews","renderMain","LandingScreen","MagicLinkScreen","sendAccessToken","whitelink_token","Spinner","animation","MagicLink","selectBlocklistAccessLoading","selectBlocklistAccessSuccess","Orders","resetOrdersHistory","OrdersElement","handleCancelAll","ordersCancelAll","cancelAll","optionalHead","OrdersTabScreen","selectOrdersHistory","ordersCancelAllFetch","ProfileComponent","ProfileAuthDetails","ReferralProgram","ProfileAccountActivity","WidthProvider","Responsive","breakpoints","lg","md","sm","xs","xxs","cols","ReactGridLayout","TradingWrapper","orderComponentResized","orderBookComponentResized","layouts","handleResize","handeDrag","i","render","child","draggableHandle","rowHeight","onLayoutChange","margin","onResize","onDrag","Trading","setMarketFromUrlIfExists","markets","urlMarket","getUrlPart","pathname","market","setCurrentMarket","setTradingTitle","tickers","tickerPrice","last","format","price_precision","layout","oldItem","newItem","elem","y","currentMarket","incrementalOrderBook","depthFetch","setCurrentPrice","marketFromUrl","split","rgl","data-react-toolbox","Verification","selectCurrentMarket","selectMarkets","selectGridLayoutState","selectMarketTickers","saveLayouts","VerificationScreen","isEmailVerified","selectEmailVerified","verification","verificationFetch","EstimatedValueContainer","renderSecondaryCurrencyValuation","estimatedValue","estimatedValueSecondary","estimateUnitValue","VALUATION_SECONDARY_CURRENCY","VALUATION_PRIMARY_CURRENCY","formatWithSeparators","toUpperCase","fetchCurrencies","fetchTickers","estimateValue","EstimatedValue","userLoggedIn","currenciesFetch","marketsTickersFetch","FailIcon","strokeLinecap","SucceedIcon","strokeLinejoin","WalletTable","getHeaders","thousSep","headers","WalletHistory","fetching","selectHistoryLoading","params","WalletsComponent","description","onActiveIndexChange","activeIndex","toggleSubmitModal","withdrawSubmitModal","withdrawDone","toggleConfirmModal","total","beneficiary","defaultBeneficiary","withdrawConfirmModal","handleWithdraw","selectedWalletIndex","withdrawRequest","beneficiary_id","String","walletsWithdrawCcy","handleOnCopy","handleGenerateAddress","deposit_address","fetchAddress","renderDeposit","isAccountActivated","currencyItem","deposit_enabled","setTab","blurCryptoClassName","copiableTextFieldText","copyButtonText","network","renderWithdraw","walletsError","withdrawal_enabled","renderWithdrawContent","withdrawProps","twoFactorAuthRequired","isTwoFactorAuthRequired","withdrawAmountLabel","withdraw2faLabel","withdrawFeeLabel","withdrawTotalLabel","withdrawButtonLabel","isOtpDisabled","redirectToEnable2fa","onWalletSelectionChange","nextWalletIndex","findIndex","fetchBeneficiaries","currency_id","setMobileWalletUi","clearWallets","beneficiariesActivateSuccess","beneficiariesDeleteSuccess","withdrawSuccess","beneficiariesAddSuccess","selectedCurrency","historyList","mobileWalletChosen","walletsLoading","filteredWallets","formattedWallets","iconUrl","confirmationAddress","selectedWalletPrecision","walletItems","_","ModalWithdrawSubmit","ModalWithdrawConfirmation","rid","onDismiss","precision","showWithdraw","selectWalletsLoading","selectWithdrawSuccess","selectMobileWalletUi","selectBeneficiariesActivateSuccess","selectBeneficiariesDeleteSuccess","selectBeneficiariesCreateSuccess","beneficiariesFetch","walletsAddressFetch","walletsWithdrawCcyFetch","walletsData","WalletOverviewFC","memo","isOpenPortal","setIsOpen","q","setQ","checked","setChecked","balances","arrayFilter","locked","handleShowPortal","renderTableWallets","useMemo","style","transition","onChange","autoFocus","SearchIcon","htmlFor","close","WalletOverview","WalletMarginFC","a1","a2","combineWallets","base_unit","amount_precision","Object","keys","reduce","acc","curr","toString","clipPath","WalletMargin","marketLoading","selectMarketsLoading","marketTickers","WithdrawalFC","theme","beneficiaries","beneficiariesLoading","beneficiariesCreateLoading","beneficiariesCreateSuccess","beneficiariesActivateLoading","beneficiariesDeleteLoading","beneficiariesResendLoading","memberLevels","withdrawLimits","withdrawLimit","fecthWallets","fetchMemberLevel","createBeneficiary","activateBeneficiary","updateBeneficiary","deleteBeneficiary","resendBeneficiary","withdrawCcy","withdrawLimitFetch","userWallets","useModal","isShow","toggle","stepActive","setStepActive","walletActive","setWalletActive","networkActive","setNetworkActive","searchMarket","setSearchMarket","pin","setPin","selectedNetwork","setSelectedNetwork","listNetwork","setListNetwork","coinAddressValid","setCoinAddressValid","setId","modalDelete","setModalDelete","modalConfirm","setModalConfirm","modalConfirmWD","setModalConfirmWD","isOpenBeneficiary","setIsOpenBeneficiary","showModalSuccessPurchased","setShowModalSuccessPurchased","useForm","accountName","accountNumber","bank","destinationTag","setField","setNewField","amountError","mainRef","useRef","resetField","scrollTo","offsetTop","fetchBeneficiary","validateCoinAddressFormat","handleShowBeneficiary","handleShowModalConfirm","handleConfirmActivate","handleShowModalConfirmWD","handleSetShowModalSuccessPurchased","filteredBeneficiary","handleToStepInfo","withdrawLimited","kyc_level","withdrawFee","withdraw_fee","withdrawMinAmount","min_withdraw_amount","withdrawLimit24H","limit_24_hour","last_24_hours","withdrawLimit1M","limit_1_month","last_1_month","handleChangeAmount","convertedValue","cleanPositiveFloatInput","precisionRegExp","parseFloat","toFixed","handleChangeOtp","handleShowModalDelete","isDisbaledWithdraw","tax","renderAsset","icon","userWallet","withdraw","minimum_level","handleToStepBeneficiary","xlinkHref","renderCurrencyIcon","colSpan","renderBeneficiary","protocol","rounded","fontDM","isActive","isWithFull","truncateMiddle","renderWithdrawInfo","withError","info","parentClassName","maxLength","isRipple","handleCreateBeneficiary","payloadCoin","payloadFiat","full_name","account_number","bank_name","bank_swift_code","intermediary_bank_name","intermediary_bank_swift_code","renderIconCopied","copyToClipboard","toast","getCurrencies","some","symbol","valid","validate","renderModalBeneficiary","objectKey","lists","onChangeAlt","withLoading","handleActivate","withBreadcrumbs","display","ref","animationDuration","renderContentDeleted","rightAlt","Withdrawal","selectBeneficiariesCreate","selectBeneficiaries","selectBeneficiariesFetchLoading","selectBeneficiariesCreateLoading","selectBeneficiariesActivateLoading","selectBeneficiariesDeleteLoading","selectBeneficiariesResendPinLoading","selectMemberLevels","selectWithdrawLimits","selectWithdrawLimit","memberLevelsFetch","beneficiariesCreate","beneficiariesDataUpdate","beneficiariesActivate","beneficiariesDelete","beneficiariesResendPin","WalletFIatAndSpotFC","formatedWallets","WalletFIatAndSpot","WalletDetailsFC","sliderRef","useMarket","marketsData","handleRedirectToTrading","status","friendsMarket","klinesData","kline","change","price_change_percent","join","maintainAspectRatio","gradientOpacityTop","gradientOpacityBottom","scrollAmount","clientWidth","Math","scrollBy","top","left","behavior","hiddenCategory","WalletDetails","WalletTrade","Restricted","RestrictedScreen","selectPlatformAccessStatus","BackgroundMaintenance","opacity","Maintenance","MaintenanceScreen","LoginClass","geetestCaptchaRef","modalTitle","modalButton","captchaLoading","resetEmail","createRef","prevState","snapshot","Component","Login","selectSignInLoading","selectCaptchaDataObjectLoading","RegisterClass","usernameError","handleResetEmail","isReCaptchaSuccess","isGeetestCaptchaSuccess","onRegister","onLogin","focusUsername","focusEmail","focusPassword","focusConfirmPassword","focusRefId","usernameLabel","refIdLabel","confirmPasswordError","Register","selectSignUpLoading","ForgotPassword","handleRenderInputNewPass","ChangeForgotPassword","forgotPasswordRequested","forgotPasswordChanged","selectChangeForgotPasswordLoading","fetchForgotPassword","isRendered","handleResendGenerateCode","handleChangeRendered","withSubTitleOneOfBold","handleChangeOTP","confirm_password","isDisabled","useShowGeetestCaptcha","EmailVerification","emailVerified","setCode","initialSeconds","setInitialSeconds","handleVerification","RegisterKu","register","extractRefId","handleChangeRefid","USERNAME_REGEXP","USERNAME_REGEX","EMAIL_REGEXP","PASSWORD_REGEXP","Profile","passwordChangeSuccess","selectChangePasswordSuccess","old_password","new_password","clearPasswordChangeError","changePasswordError","profiles","referralLink","renderIconCheck","first_name","color","Referrals","referrals","setReferrals","setIsLoading","axios","res","handleCopy","reff","reff_active","lableClassName","reff_list","tier","ApiKeys","dataLoaded","selectApiKeysDataLoaded","selectApiKeysLoading","modal","pageIndex","selectApiKeysPageIndex","toggleApiKeys2FAModal","apiKeysFetch","createApiKey","updateApiKey","deleteApiKey","setOtpCode","renderOnClick","handleCreateKey","handleCreateSuccess","icLeft","algorithm","updated_at","shift","handleUpdateAPIKey","handleDestroyAPIKey","imgLock2","imgLock","body","SessionsHistory","selectUserActivityLoading","selectTotalNumber","pageCount","selectUserActivityPageCount","getUserActivity","result","user_ip","user_agent","getResultOfUserAction","getUserAgent","TwoFA","ChangePassword","changePasswordLoading","selectChangePasswordLoading","defaultTicker","high","open","low","BuyCryptoFC","userData","coinActive","setCoinActive","currentBidUnitsList","quote_unit","currentBidUnitMarkets","formattedMarkets","combineMarkets","avg_price","no","renderCoin","icon_url","stopPropagation","StarIcon","renderEnterAmount","allowLeadingZeros","thousandSeparator","renderPaymentInfo","renderConfirmOrder","BuyCrypto","SellCryptoFC","SellCrypto","Activity","Market","otherMarkets","currentBidUnit","setCurrentBidUnit","handleToSetFavorites","useNewsFetch","newsLoadig","news","more","setMore","illusMarket2","illusMarket","slice","isFav","curency_data","uuid","feature_image","classNameParent","meta_title","slug","LearnCrypto","learnCategory","setLearnCategory","illusDiscover","illusReleases2","illusReleases","illusReleases22","illusReleases21","illusReleases32","illusReleases31","print","x","apply","makeHistoryUrl","resolution","from","period","time_from","getTimestampPeriod","time_to","endPoint","buildQueryString","isFinexEnabled","finexUrl","tradeUrl","resolutionToSeconds","r","parseInt","isNaN","config","supports_timescale_marks","supports_time","supported_resolutions","dataFeedObject","tradingChart","dataFeed","onReady","cb","searchSymbols","userInput","exchange","symbolType","onResultReadyCallback","symbols","m","ticker","currency_code","resolveSymbol","symbolName","onSymbolResolvedCallback","onResolveErrorCallback","symbolStub","session","timezone","minmov","pricescale","pow","has_intraday","intraday_multipliers","volume_precision","data_status","getTimescaleMarks","symbolInfo","onDataCallback","range","tvWidget","activeChart","getVisibleRange","store","klineUpdateTimeRange","klineUpdatePeriod","getBars","onHistoryCallback","onErrorCallback","firstDataRequest","then","noData","bars","klineArrayToObject","catch","subscribeBars","onRealtimeCallback","subscribeUID","onResetCacheNeededCallback","marketId","currentKlineSubscription","periodString","periodMinutesToString","subscribeKline","unsubscribeBars","unSubscribeKline","widgetParams","interval","DEFAULT_TRADING_VIEW_INTERVAL","containerId","customWidgetParams","widgetOptions","allow_symbol_change","autosize","calendar","client_id","custom_css_url","debug","details","disabled_features","enable_publishing","enabled_features","fullscreen","hide_side_toolbar","hotlist","library_path","popup_height","popup_width","show_popup_button","studies_overrides","timeframe","user_id","withdateranges","customWidgetOptions","zonesDST","60","180","240","360","420","600","zonesSTD","0","120","300","480","getTradingChartTimezone","offset","zone","TradingChartComponent","datafeed","setChart","currentTimeOffset","Date","getTimezoneOffset","clockPeriod","stdTimezoneOffset","periodStringToMinutes","disabledFeatures","defaultWidgetOptions","container_id","locale","languageIncluded","widget","previousRange","previousResolution","onChartReady","setSymbol","setVisibleRange","setResolution","updateChart","handleRebuildChart","remove","chartRebuild","TradingChart","selectChartRebuildState","selectKline","rangerSubscribeKlineMarket","rangerUnsubscribeKlineMarket","Transfer","detailUserLoading","selectDetailUserLoading","detailUserData","selectDetailUserData","detailUserError","selectDetailUserIsError","transferLoading","selectTransferLoading","transferSuccess","selectTransferIsSuccess","transferError","selectTransferIsError","transfer","transferCreate","getDetailUser","detailUserCreate","username_or_uid","insufficientBalance","selected","setSelected","isOpenConfirm","setIsOpenConfirm","isOpenSuccess","setIsOpenSuccess","query","setQuery","asset","setAsset","filteredCurrencies","myWallet","handleShowConfirm","renderModalDetail","iconClassName","handleGetDetailUser","Label","Input","displayValue","as","Fragment","leave","leaveFrom","leaveTo","afterLeave","Options","Option","imgAvatar","right","List","DepositFC","generateAddressLoading","walletLoading","generateAdress","searchCurrency","setSearchCurrency","assets","setAssets","formatedWallet","currencyActive","depositAddress","deposit_addresses","loadingFetchGenerate","useCallback","blockchainKey","depositEnabled","renderAddressAvailable","dimensions","renderAddressSkeleton","isHeightFull","renderButtonGenerated","enter","enterFrom","enterTo","min_deposit_amount","Deposit","selectGenerateAddressLoading","Notifications","isSecurity","isWallet","isTrade","isDeposit","isTransfer","isWithdraw","isNews","notifications","setNotifications","markAllAsRead","setMarkAllAsRead","unSelectAll","filteredNotifications","onChecked","id_notif","truncateEnd","detail","date","read","icRight","Contact","accordionItems","illusContact2","illusContact","people","unavailable","Beneficiaries","resendPinBeneficiary","filteredWalletCoin","isShow2","setIsShow2","modalType","selectedAsset","setSelectedAsset","searchAsset","setSearchAsset","setForm","setNewForm","toggle2","networkType","pop","renderTableBeneficiaries","withSearch","zIndexBackdrop","zIndexContent","onFocus","select","handleStep","renderAssetStep","nextStep","handleStepStep","transformOrigin","useStep","currentStep","prevStep","goToStep","WithdrawalStep","WalletFinance","WalletOrder","currentTab","setCurrentTab","showExport","setShowExport","handleShowExport","csvData","fileName","Exchange","useBeneficiaries","fetchLoading","blockchain_name","Geetest","buttonRef","gt3Ref","response","setResponse","GT4Init","initGeetest4","captchaId","product","onError","err","msg","handlerForBind","captchaObj","isReady","removeElement","showCaptcha","onSuccess","getValidate","reset","onFail","useInitGT4","setGeetestCaptchaSuccess","PrivateRoute","component","isLogged","rest","PublicRoute","ApiDocs","useDocumentationFetch","documentation","selectDocumentationData","version","contact","license","LayoutComponent","timer","walletsFetchInterval","getLastAction","setLastAction","lastAction","initListener","eventsListen","now","initInterval","checkSession","sessionCheckInterval","minutesUntilAutoLogout","handleChangeExpSessionModalState","logout","handleSubmitExpSessionModal","handleRenderExpiredSessionModal","isShownExpSessionModal","handleApplyCustomization","customization","rootElement","documentElement","parsedSettings","settings","theme_colors","setProperty","toggleChartRebuild","platformAccessStatus","rangerState","fetchConfigs","fetchSonic","userFetch","connected","rangerConnect","withAuth","userLoading","walletsReset","configsLoading","path","exact","showLanding","ScreenMobile","Layout","selectConfigsLoading","configsSuccess","selectConfigsSuccess","selectCustomizationData","selectRanger","configsFetch","sonicFetch","fetchCustomization","customizationFetch","logoutFetch","rangerConnectFetch"],"mappings":"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","file":"static/js/4.2bff0a3a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Exchange.a4a267d3.svg\";","module.exports = __webpack_public_path__ + \"static/media/Types.3870e8d1.svg\";","module.exports = __webpack_public_path__ + \"static/media/Customize.845e237e.svg\";","module.exports = __webpack_public_path__ + \"static/media/Security.b8b37cf8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Community.83b55cf7.svg\";","module.exports = __webpack_public_path__ + \"static/media/API.0bad9cd3.svg\";","import * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport {\n  connect,\n  MapDispatchToPropsFunction,\n  MapStateToProps,\n} from 'react-redux';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { ChangePassword } from '../../components';\nimport { setDocumentTitle } from '../../helpers';\nimport {\n    changeForgotPasswordFetch,\n    changeLanguage,\n    Configs,\n    entropyPasswordFetch,\n    RootState, selectChangeForgotPasswordSuccess,\n    selectConfigs,\n    selectCurrentPasswordEntropy,\n    selectMobileDeviceState,\n} from '../../modules';\n\ninterface ChangeForgottenPasswordState {\n    confirmToken: string;\n}\n\ninterface ReduxProps {\n    changeForgotPassword?: boolean;\n    isMobileDevice: boolean;\n    configs: Configs;\n    currentPasswordEntropy: number;\n}\n\ninterface DispatchProps {\n    changeForgotPasswordFetch: typeof changeForgotPasswordFetch;\n    changeLanguage: typeof changeLanguage;\n    fetchCurrentPasswordEntropy: typeof entropyPasswordFetch;\n}\n\ninterface HistoryProps {\n    history: {\n        location: {\n            search: string;\n        };\n    };\n}\n\ntype Props = RouterProps & DispatchProps & HistoryProps & ReduxProps & IntlProps;\n\nclass ChangeForgottenPasswordComponent extends React.Component<Props, ChangeForgottenPasswordState> {\n    constructor(props: Props) {\n        super(props);\n\n        this.state = {\n            confirmToken: '',\n        };\n    }\n\n    public componentDidMount() {\n        setDocumentTitle('Change forgotten password');\n        const { history } = this.props;\n        const token = new URLSearchParams(history.location.search).get('reset_token');\n        const lang = new URLSearchParams(history.location.search).get('lang');\n        if (token) {\n            this.setState({\n                confirmToken: token,\n            });\n        }\n        if (lang) {\n            this.props.changeLanguage(lang.toLowerCase());\n        }\n    }\n\n    public componentWillReceiveProps(next: Props) {\n        if (next.changeForgotPassword && (!this.props.changeForgotPassword)) {\n            this.props.history.push('/login');\n        }\n    }\n\n    public render() {\n        const { isMobileDevice, configs, currentPasswordEntropy } = this.props;\n\n        return (\n            <div className=\"pg-change-forgotten-password-screen\">\n                <div className=\"pg-change-forgotten-password-screen__container\">\n                    <ChangePassword\n                        handleChangePassword={this.handleSendNewPassword}\n                        title={!isMobileDevice && this.props.intl.formatMessage({id: 'page.header.signIn.resetPassword.title'})}\n                        configs={configs}\n                        currentPasswordEntropy={currentPasswordEntropy}\n                        fetchCurrentPasswordEntropy={this.props.fetchCurrentPasswordEntropy}\n                        hideOldPassword={true}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    private handleSendNewPassword = payload => {\n        const { confirmToken } = this.state;\n        this.props.changeForgotPasswordFetch({\n            ...payload,\n            reset_password_token: confirmToken,\n        });\n    };\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n    changeForgotPassword: selectChangeForgotPasswordSuccess(state),\n    isMobileDevice: selectMobileDeviceState(state),\n    currentPasswordEntropy: selectCurrentPasswordEntropy(state),\n    configs: selectConfigs(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        changeForgotPasswordFetch: credentials => dispatch(changeForgotPasswordFetch(credentials)),\n        changeLanguage: lang => dispatch(changeLanguage(lang)),\n        fetchCurrentPasswordEntropy: payload => dispatch(entropyPasswordFetch(payload)),\n    });\n\nexport const ChangeForgottenPasswordScreen = compose(\n    injectIntl,\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps),\n)(ChangeForgottenPasswordComponent) as React.ComponentClass;\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router';\nimport { ChangeForgottenPasswordScreen } from '../../../screens/ChangeForgottenPasswordScreen';\nimport { Modal } from '../../components';\n\n\nconst ChangeForgottenPasswordMobileScreen: React.FC = () => {\n    const history = useHistory();\n    const intl = useIntl();\n\n    return <div>\n        <Modal\n            isOpen={true}\n            onClose={() => history.push('/trading')}\n            title={intl.formatMessage({ id: 'page.header.signIn.resetPassword.title' })}>\n            <ChangeForgottenPasswordScreen/>\n        </Modal>\n    </div>;\n};\n\nexport {\n    ChangeForgottenPasswordMobileScreen,\n};\n","import * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { kycSteps } from '../../api';\nimport { CrossIcon } from '../../assets/images/kyc/CrossIcon';\nimport { LogoIcon } from '../../assets/images/LogoIcon';\nimport { Address, Documents, Identity, Phone } from '../../containers';\nimport { getVerificationStep, setDocumentTitle } from '../../helpers';\nimport {\n    Label,\n    labelFetch,\n    RootState,\n    selectLabelData,\n    selectSidebarState,\n    toggleSidebar,\n} from '../../modules';\n\ninterface ReduxProps {\n    isSidebarOpen: boolean;\n    labels: Label[];\n}\n\ninterface DispatchProps {\n    labelFetch: typeof labelFetch;\n    toggleSidebar: typeof toggleSidebar;\n}\n\ntype Props = ReduxProps & DispatchProps & RouterProps & IntlProps;\n\nclass ConfirmComponent extends React.Component<Props> {\n    public componentDidMount() {\n        const { labels, isSidebarOpen } = this.props;\n        setDocumentTitle('Confirm');\n        this.props.labelFetch();\n\n        if (labels.length) {\n            this.handleCheckUserLabels(labels);\n        }\n\n        isSidebarOpen && this.props.toggleSidebar(false);\n    }\n\n    public componentDidUpdate(prevProps: Props) {\n        const { labels } = this.props;\n\n        if (labels.length && JSON.stringify(labels) !== JSON.stringify(prevProps.labels)) {\n            this.handleCheckUserLabels(labels);\n        }\n    }\n\n    public renderVerificationStep = (step: string) => {\n        switch (step) {\n            case 'phone':    return <Phone />;\n            case 'profile':  return <Identity />;\n            case 'document': return <Documents />;\n            case 'address':  return <Address />;\n            default: return 'Something went wrong';\n        }\n    };\n\n    public render() {\n        const { history } = this.props;\n        const step = this.handleGetVerificationStep();\n\n        return (\n            <div className=\"pg-container pg-confirm\">\n                <div className=\"pg-confirm__logo\">\n                    <LogoIcon />\n                </div>\n                <h3 className=\"pg-confirm__title\">\n                    <FormattedMessage id={`page.confirm.title.${step}`} />\n                    <CrossIcon\n                        className=\"pg-confirm__title__icon\"\n                        onClick={e => history.push('/profile')}\n                    />\n                </h3>\n                <div className=\"pg-confirm__content\">\n                    {this.renderVerificationStep(step)}\n                </div>\n            </div>\n        );\n    }\n\n    private handleGetVerificationStep = (): string => {\n        const { labels } = this.props;\n\n        return getVerificationStep(labels);\n    };\n\n    private handleCheckUserLabels = (labels: Label[]) => {\n        const pendingLabelExists = Boolean(labels.find(label => kycSteps().includes(label.key) && ['pending', 'drafted', 'submitted'].includes(label.value) && label.scope === 'private'));\n        const passedSteps = kycSteps().filter((step: string) => labels.find(label => step === label.key && label.value === 'verified' && label.scope === 'private'));\n\n        if (pendingLabelExists || (kycSteps().length === passedSteps.length)) {\n            this.props.history.push('/profile');\n        }\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    isSidebarOpen: selectSidebarState(state),\n    labels: selectLabelData(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    labelFetch: () => dispatch(labelFetch()),\n    toggleSidebar: (payload) => dispatch(toggleSidebar(payload)),\n});\n\nexport const ConfirmScreen = compose(\n    injectIntl,\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps),\n)(ConfirmComponent) as any; // tslint:disable-line\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { getVerificationStep } from '../../../helpers';\nimport { selectLabelData } from '../../../modules/user/kyc/label';\nimport { ConfirmScreen } from '../../../screens/ConfirmScreen';\nimport { Modal } from '../../components/Modal';\nimport { Subheader } from '../../components/Subheader';\n\nconst ConfirmMobileScreen: React.FC = () => {\n    const intl = useIntl();\n    const history = useHistory();\n    const labels = useSelector(selectLabelData) ;\n    const step = getVerificationStep(labels);\n\n    if (step === 'phone') {\n        return (\n            <div className=\"cr-mobile-confirm\">\n                <div className=\"cr-mobile-confirm__phone\">\n                    <Modal\n                        isOpen\n                        onClose={() => history.goBack()}\n                        title={intl.formatMessage({id: 'page.body.profile.header.account.profile.phone.unverified.title'})}>\n                        <ConfirmScreen/>\n                    </Modal>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"cr-mobile-confirm\">\n            <div className=\"cr-mobile-confirm__identity\">\n                <Subheader\n                    title={intl.formatMessage({ id: `page.mobile.confirm.${step}` })}\n                    backTitle={intl.formatMessage({ id: 'page.mobile.confirm.back' })}\n                    onGoBack={() => history.goBack()}\n                />\n                <ConfirmScreen/>\n            </div>\n        </div>\n    );\n};\n\nexport {\n    ConfirmMobileScreen,\n};\n","import { History } from 'history';\nimport React, { FunctionComponent, useEffect, useState } from 'react';\n// import { Button, Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { LayoutAuth, InputOtp } from 'components';\nimport { EMAIL_REGEX, setDocumentTitle } from 'helpers';\nimport {\n   Configs,\n   emailVerificationFetch,\n   GeetestCaptchaResponse,\n   GeetestCaptchaV4Response,\n   resetCaptchaState,\n   RootState,\n   selectCaptchaResponse,\n   selectConfigs,\n   selectCurrentLanguage,\n   selectGeetestCaptchaSuccess,\n   selectMobileDeviceState,\n   selectRecaptchaSuccess,\n   selectSendEmailVerificationError,\n   selectSendEmailVerificationLoading,\n   selectSendEmailVerificationSuccess,\n   selectUserInfo,\n   User,\n} from 'modules';\nimport { CommonError } from 'modules/types';\n\ninterface OwnProps {\n   history: History;\n   location: {\n      state: {\n         email: string;\n      };\n   };\n   success: boolean;\n   error?: CommonError;\n}\n\ninterface DispatchProps {\n   emailVerificationFetch: typeof emailVerificationFetch;\n   resetCaptchaState: typeof resetCaptchaState;\n}\n\ninterface ReduxProps {\n   emailVerificationLoading: boolean;\n   isMobileDevice: boolean;\n   configs: Configs;\n   captcha_response?: string | GeetestCaptchaResponse | GeetestCaptchaV4Response;\n   reCaptchaSuccess: boolean;\n   geetestCaptchaSuccess: boolean;\n   user: User;\n}\n\ntype Props = DispatchProps & ReduxProps & OwnProps & IntlProps;\n\nconst EmailVerificationComponentOld = (props: Props) => {\n   const initialMinute = 0, initialSeconds = 3;\n   const [minutes, setMinutes] = useState(initialMinute);\n   const [seconds, setSeconds] = useState(initialSeconds);\n   useEffect(() => {\n      let myInterval = setInterval(() => {\n         if (seconds > 0) {\n            setSeconds(seconds - 1);\n         }\n         if (seconds === 0) {\n            if (minutes === 0) {\n               clearInterval(myInterval)\n            } else {\n               setMinutes(minutes - 1);\n               setSeconds(59);\n            }\n         }\n      }, 1000)\n      return () => {\n         clearInterval(myInterval);\n      };\n   });\n\n   // <>\n   //       {seconds !== 0 && minutes === 0 && seconds === 0\n   //          ? null\n   //          : <h1> {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</h1>\n   //       }\n   //    </>\n\n   useEffect(() => {\n      setDocumentTitle('Email verification');\n      if (!props.location.state) {\n         props.history.push('/login');\n      }\n   }, []);\n\n   // const translate = (id: string) => props.intl.formatMessage({ id });\n\n   // const renderCaptcha = () => {\n   //    const { error, success } = props;\n   //    return <Captcha error={error} success={success} />;\n   // };\n\n   const handleClick = () => {\n      const { configs, captcha_response } = props;\n      switch (configs.captcha_type) {\n         case 'recaptcha':\n         case 'geetest':\n            props.emailVerificationFetch({\n               email: props.location.state.email,\n               captcha_response,\n            });\n            break;\n         default:\n            props.emailVerificationFetch({\n               email: props.location.state.email,\n            });\n            break;\n      }\n      props.resetCaptchaState();\n   };\n\n   const disableButton = (): boolean => {\n      const {\n         configs,\n         location,\n         geetestCaptchaSuccess,\n         reCaptchaSuccess,\n      } = props;\n      if (location.state && location.state.email && !location.state.email.match(EMAIL_REGEX)) {\n         return true;\n      }\n      if (configs.captcha_type === 'recaptcha' && !reCaptchaSuccess) {\n         return true;\n      }\n      if (configs.captcha_type === 'geetest' && !geetestCaptchaSuccess) {\n         return true;\n      }\n      return false;\n   };\n\n   const {\n      // emailVerificationLoading,\n      // isMobileDevice\n   } = props;\n\n   const title = props.intl.formatMessage({ id: 'page.header.signUp.modal.header' });\n   const text = props.intl.formatMessage({ id: 'page.header.signUp.modal.body' });\n   const button = props.intl.formatMessage({ id: 'page.resendConfirmation' });\n\n   return (\n      <>\n         <LayoutAuth\n            descLinkTo=\"Already have an account?\"\n            linkTo=\"/login\"\n            linkToTxt=\"Login\"\n            title={title}\n            subTitle={text}\n         >\n            <InputOtp\n               length={6}\n               isNumberInput\n               className=\"flex mb-8 -mx-2 bg-neutral8\"\n               onChangeOTP={otp => console.log(`OTP => : ${otp}`)}\n            />\n            <div className=\"login__btns\">\n               {\n                  minutes === 0 && seconds === 0\n                     ? (\n                        <button onClick={handleClick} className=\"button-stroke button-small login__button\" disabled={disableButton()}>{button || 'Resend Code'}</button>\n                     )\n                     : (<div> {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</div>)\n               }\n               <button className=\"button button-small login__button\">Continue</button>\n            </div>\n         </LayoutAuth>\n         <>\n            {/* {!isMobileDevice && <div className=\"pg-emailverification-title\">{title}</div>}\n                     <div className=\"pg-emailverification-body\">\n                        <div className=\"pg-emailverification-body-text\">{text}</div>\n                        {this.renderCaptcha()}\n                        {\n                           !isMobileDevice && (\n                              <div className=\"pg-emailverification-body-container\">\n                                 {emailVerificationLoading ? <Spinner animation=\"border\" variant=\"primary\" /> :\n                                    <button className=\"pg-emailverification-body-container-button\"\n                                       onClick={this.handleClick}\n                                       disabled={this.disableButton()}>{button}</button>}\n                              </div>)\n                        }\n                        {isMobileDevice &&\n                           (<div className=\"pg-emailverification-body-container\">\n                              <Button\n                                 block={true}\n                                 type=\"button\"\n                                 onClick={this.handleClick}\n                                 size=\"lg\"\n                                 variant=\"primary\"\n                              >\n                                 {this.props.intl.formatMessage({ id: 'page.mobile.reset.header' })}\n                              </Button>\n                           </div>)\n                        }\n                     </div> */}\n         </>\n      </>\n   )\n\n}\n\n// class EmailVerificationComponentOld extends Component<Props> {\n//    public componentDidMount() {\n//       setDocumentTitle('Email verification');\n//       if (!this.props.location.state) {\n//          this.props.history.push('/login');\n//       }\n//    }\n\n//    public translate = (id: string) => this.props.intl.formatMessage({ id });\n\n//    public renderCaptcha = () => {\n//       const { error, success } = this.props;\n//       return <Captcha error={error} success={success} />;\n//    };\n\n\n//    public render() {\n//       const {\n//          // emailVerificationLoading,\n//          // isMobileDevice\n//       } = this.props;\n\n//       const title = this.props.intl.formatMessage({ id: 'page.header.signUp.modal.header' });\n//       const text = this.props.intl.formatMessage({ id: 'page.header.signUp.modal.body' });\n//       const button = this.props.intl.formatMessage({ id: 'page.resendConfirmation' });\n\n//       return (\n//          <>\n//             <LayoutAuth\n//                txtHeader=\"Already have an account?\"\n//                to=\"/login\" toTxt=\"Login\"\n//             >\n//                <FormHeader\n//                   title={title}\n//                   subTitle={text}\n//                />\n//                <OTPInput\n//                   className=\"flex mb-8 -mx-2 bg-neutral8\"\n//                   onChangeOTP={otp => console.log(`OTP => : ${otp}`)}\n//                />\n//                <div className=\"login__btns\">\n//                   <CountDown initialSeconds={5} />\n//                   <button onClick={this.handleClick} className=\"button-stroke button-small login__button\" disabled={this.disableButton()}>{button || 'Resend Code'}</button>\n//                   <button className=\"button button-small login__button\">Continue</button>\n//                </div>\n//             </LayoutAuth>\n//             <>\n//                {/* {!isMobileDevice && <div className=\"pg-emailverification-title\">{title}</div>}\n//                <div className=\"pg-emailverification-body\">\n//                   <div className=\"pg-emailverification-body-text\">{text}</div>\n//                   {this.renderCaptcha()}\n//                   {\n//                      !isMobileDevice && (\n//                         <div className=\"pg-emailverification-body-container\">\n//                            {emailVerificationLoading ? <Spinner animation=\"border\" variant=\"primary\" /> :\n//                               <button className=\"pg-emailverification-body-container-button\"\n//                                  onClick={this.handleClick}\n//                                  disabled={this.disableButton()}>{button}</button>}\n//                         </div>)\n//                   }\n//                   {isMobileDevice &&\n//                      (<div className=\"pg-emailverification-body-container\">\n//                         <Button\n//                            block={true}\n//                            type=\"button\"\n//                            onClick={this.handleClick}\n//                            size=\"lg\"\n//                            variant=\"primary\"\n//                         >\n//                            {this.props.intl.formatMessage({ id: 'page.mobile.reset.header' })}\n//                         </Button>\n//                      </div>)\n//                   }\n//                </div> */}\n//             </>\n//          </>\n//       );\n//    }\n\n//    private handleClick = () => {\n//       const { configs, captcha_response } = this.props;\n\n//       switch (configs.captcha_type) {\n//          case 'recaptcha':\n//          case 'geetest':\n//             this.props.emailVerificationFetch({\n//                email: this.props.location.state.email,\n//                captcha_response,\n//             });\n//             break;\n//          default:\n//             this.props.emailVerificationFetch({\n//                email: this.props.location.state.email,\n//             });\n//             break;\n//       }\n\n//       this.props.resetCaptchaState();\n//    };\n\n//    private disableButton = (): boolean => {\n//       const {\n//          configs,\n//          location,\n//          geetestCaptchaSuccess,\n//          reCaptchaSuccess,\n//       } = this.props;\n\n//       if (location.state && location.state.email && !location.state.email.match(EMAIL_REGEX)) {\n//          return true;\n//       }\n\n//       if (configs.captcha_type === 'recaptcha' && !reCaptchaSuccess) {\n//          return true;\n//       }\n\n//       if (configs.captcha_type === 'geetest' && !geetestCaptchaSuccess) {\n//          return true;\n//       }\n\n//       return false;\n//    };\n// }\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   emailVerificationLoading: selectSendEmailVerificationLoading(state),\n   i18n: selectCurrentLanguage(state),\n   isMobileDevice: selectMobileDeviceState(state),\n   configs: selectConfigs(state),\n   error: selectSendEmailVerificationError(state),\n   success: selectSendEmailVerificationSuccess(state),\n   captcha_response: selectCaptchaResponse(state),\n   reCaptchaSuccess: selectRecaptchaSuccess(state),\n   geetestCaptchaSuccess: selectGeetestCaptchaSuccess(state),\n   user: selectUserInfo(state),\n});\n\nconst mapDispatchToProps = {\n   emailVerificationFetch,\n   resetCaptchaState,\n};\n\nexport const EmailVerificationScreen = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps),\n)(EmailVerificationComponentOld) as FunctionComponent;\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router';\nimport { EmailVerificationScreen } from '../../../screens/EmailVerification';\nimport { Modal } from '../../components';\n\nexport const EmailVerificationMobileScreen: React.FC = () => {\n    const history = useHistory();\n    const intl = useIntl();\n\n    return (\n        <div className=\"cr-mobile-email-verification\">\n            <Modal\n                isOpen={true}\n                onClose={() => history.push('/trading')}\n                title={intl.formatMessage({ id: 'page.header.signUp.modal.header' })}>\n                <EmailVerificationScreen/>\n            </Modal>\n        </div>\n    );\n};\n","import * as React from 'react';\nimport {\n   injectIntl,\n} from 'react-intl';\nimport {\n   connect,\n   MapDispatchToPropsFunction,\n   MapStateToProps,\n} from 'react-redux';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { Captcha, EmailForm } from '../../components';\nimport {\n   EMAIL_REGEX,\n   ERROR_INVALID_EMAIL,\n   setDocumentTitle,\n} from '../../helpers';\nimport {\n   Configs,\n   forgotPassword,\n   GeetestCaptchaResponse,\n   GeetestCaptchaV4Response,\n   resetCaptchaState,\n   RootState,\n   selectCaptchaResponse,\n   selectConfigs,\n   selectCurrentLanguage,\n   selectForgotPasswordError,\n   selectForgotPasswordSuccess,\n   selectGeetestCaptchaSuccess,\n   selectRecaptchaSuccess,\n} from '../../modules';\nimport { CommonError } from '../../modules/types';\n\ninterface ReduxProps {\n   success: boolean;\n   error?: CommonError;\n   configs: Configs;\n   captcha_response?: string | GeetestCaptchaResponse | GeetestCaptchaV4Response;\n   reCaptchaSuccess: boolean;\n   geetestCaptchaSuccess: boolean;\n}\n\ninterface DispatchProps {\n   forgotPassword: typeof forgotPassword;\n   resetCaptchaState: typeof resetCaptchaState;\n}\n\ninterface ForgotPasswordState {\n   email: string;\n   emailError: string;\n   emailFocused: boolean;\n}\n\ntype Props = RouterProps & ReduxProps & DispatchProps & IntlProps;\n\nclass ForgotPasswordComponent extends React.Component<Props, ForgotPasswordState> {\n   constructor(props: Props) {\n      super(props);\n\n      this.state = {\n         email: '',\n         emailError: '',\n         emailFocused: false,\n      };\n   }\n\n   public componentDidMount() {\n      setDocumentTitle('Forgot password');\n   }\n\n   public renderCaptcha = () => {\n      const { error, success } = this.props;\n\n      return (\n         <Captcha\n            error={error}\n            success={success}\n         />\n      );\n   };\n\n   public render() {\n      const {\n         email,\n         emailFocused,\n         emailError,\n      } = this.state;\n      const {\n         configs,\n         captcha_response,\n         reCaptchaSuccess,\n         geetestCaptchaSuccess,\n      } = this.props;\n\n      return (\n         <div className=\"pg-forgot-password-screen\" onKeyPress={this.handleEnterPress}>\n            <div className=\"pg-forgot-password-screen__container\">\n               <div className=\"pg-forgot-password___form\">\n                  <EmailForm\n                     OnSubmit={this.handleChangePassword}\n                     title={this.props.intl.formatMessage({ id: 'page.forgotPassword' })}\n                     emailLabel={this.props.intl.formatMessage({ id: 'page.forgotPassword.email' })}\n                     buttonLabel={this.props.intl.formatMessage({ id: 'page.forgotPassword.send' })}\n                     email={email}\n                     emailFocused={emailFocused}\n                     emailError={emailError}\n                     message={this.props.intl.formatMessage({ id: 'page.forgotPassword.message' })}\n                     validateForm={this.validateForm}\n                     handleInputEmail={this.handleInputEmail}\n                     handleFieldFocus={this.handleFocusEmail}\n                     handleReturnBack={this.handleComeBack}\n                     captchaType={configs.captcha_type}\n                     renderCaptcha={this.renderCaptcha()}\n                     reCaptchaSuccess={reCaptchaSuccess}\n                     geetestCaptchaSuccess={geetestCaptchaSuccess}\n                     captcha_response={captcha_response}\n                  />\n               </div>\n            </div>\n         </div>\n      );\n   }\n\n   private handleChangePassword = () => {\n      const { email } = this.state;\n      const { configs, captcha_response } = this.props;\n\n      switch (configs.captcha_type) {\n         case 'recaptcha':\n         case 'geetest':\n            this.props.forgotPassword({ email, captcha_response });\n            break;\n         default:\n            this.props.forgotPassword({ email });\n            break;\n      }\n\n      this.setState({ email: '' });\n\n      this.props.resetCaptchaState();\n   };\n\n   private handleFocusEmail = () => {\n      this.setState({\n         emailFocused: !this.state.emailFocused,\n      });\n   };\n\n   private handleInputEmail = (value: string) => {\n      this.setState({\n         email: value,\n      });\n   };\n\n   private validateForm = () => {\n      const { email } = this.state;\n\n      const isEmailValid = email ? email.match(EMAIL_REGEX) : true;\n\n      if (!isEmailValid) {\n         this.setState({\n            emailError: ERROR_INVALID_EMAIL,\n         });\n\n         return;\n      }\n   };\n\n   private handleComeBack = () => {\n      this.props.history.goBack();\n   };\n\n   private handleEnterPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n         event.preventDefault();\n\n         this.handleChangePassword();\n      }\n   };\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   success: selectForgotPasswordSuccess(state),\n   error: selectForgotPasswordError(state),\n   i18n: selectCurrentLanguage(state),\n   configs: selectConfigs(state),\n   captcha_response: selectCaptchaResponse(state),\n   reCaptchaSuccess: selectRecaptchaSuccess(state),\n   geetestCaptchaSuccess: selectGeetestCaptchaSuccess(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n   dispatch => ({\n      forgotPassword: credentials => dispatch(forgotPassword(credentials)),\n      resetCaptchaState: () => dispatch(resetCaptchaState()),\n   });\n\nexport const ForgotPasswordScreen = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps),\n)(ForgotPasswordComponent) as React.ComponentClass;\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router';\nimport { ForgotPasswordScreen } from '../../../screens/ForgotPassword';\nimport { Modal } from '../../components';\n\nconst ForgotPasswordMobileScreen: React.FC = () => {\n    const history = useHistory();\n    const intl = useIntl();\n\n    return (\n        <div>\n            <Modal\n                isOpen={true}\n                onClose={() => history.push('/trading')}\n                onBack={() => history.push('/signin')}\n                backTitle={intl.formatMessage({ id: 'page.body.landing.header.button2' })}\n                title={intl.formatMessage({ id: 'page.forgotPassword' })}>\n                <ForgotPasswordScreen/>\n            </Modal>\n        </div>\n    );\n};\n\nexport {\n    ForgotPasswordMobileScreen,\n};\n","import * as React from 'react';\nimport { Orders } from '../../components';\n\nconst OrdersMobileScreenComponent: React.FC = () => (\n    <div className=\"pg-mobile-orders-screen\">\n        <Orders />\n    </div>\n);\n\nexport const OrdersMobileScreen = React.memo(OrdersMobileScreenComponent);\n","import * as React from 'react';\nimport { MarketsTable } from '../../../containers';\n\nconst LandingComponent: React.FC = () => {\n    return (\n        <div className=\"pg-landing-screen-mobile\">\n            <MarketsTable />\n        </div>\n    );\n};\n\nexport const LandingScreenMobile = React.memo(LandingComponent);\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ChevronIcon } from '../../../assets/images/ChevronIcon';\nimport { copy, getLanguageName } from '../../../helpers';\nimport {\n    alertPush,\n    selectCurrentColorTheme,\n    selectCurrentLanguage,\n    selectUserInfo,\n} from '../../../modules';\nimport { ProfileLinks, UserInfo } from '../../components';\n\nconst ProfileMobileScreenComponent: React.FC = () => {\n    const intl = useIntl();\n    const dispatch = useDispatch();\n    const user = useSelector(selectUserInfo);\n    const currentLanguage = useSelector(selectCurrentLanguage);\n    const currentTheme = useSelector(selectCurrentColorTheme);\n\n    const handleCopyText = () => {\n        copy('referral-link');\n        dispatch(alertPush({ message: ['page.mobile.profileLinks.link.referral.success'], type: 'success' }));\n    };\n\n    const mainLinks = [\n        {\n            titleKey: 'page.mobile.profileLinks.main.verification',\n            route: '/profile/verification',\n            children: (\n                <div>\n                    <span className=\"color-accent\">{intl.formatMessage({id: 'page.mobile.profileLinks.link.verification'}, {level: user.level})}</span>\n                    <ChevronIcon />\n                </div>\n            ),\n        },\n        {\n            titleKey: 'page.mobile.profileLinks.main.2fa',\n            route: '/profile/2fa',\n            state: {\n                enable2fa: !user.otp,\n            },\n            children: (\n                <div>\n                    {user.otp ? (\n                        <span className=\"color-green\">{intl.formatMessage({id: 'page.mobile.profileLinks.link.2fa.enabled'})}</span>\n                    ) : (\n                        <span className=\"color-red\">{intl.formatMessage({id: 'page.mobile.profileLinks.link.2fa.disabled'})}</span>\n                    )}\n                    <ChevronIcon />\n                </div>\n            ),\n        },\n        { titleKey: 'page.mobile.profileLinks.main.changePassword', route: '/profile/change-password' },\n        { titleKey: 'page.mobile.profileLinks.main.activity', route: '/profile/account-activity' },\n        { titleKey: 'page.mobile.profileLinks.main.apiKeys', route: '/profile/api-keys' },\n    ];\n\n    const settingsLinks = [\n        {\n            titleKey: 'page.mobile.profileLinks.settings.language',\n            route: '/profile/language',\n            children: (\n                <div>\n                    <span>{getLanguageName(currentLanguage)}</span>\n                    <ChevronIcon />\n                </div>\n            ),\n        },\n        {\n            titleKey: 'page.mobile.profileLinks.settings.theme',\n            route: '/profile/theme',\n            children: (\n                <div>\n                    <span className=\"text-capitalize\">{currentTheme}</span>\n                    <ChevronIcon />\n                </div>\n            ),\n        },\n    ];\n\n    const additionalLinks = [\n        {\n            titleKey: 'page.mobile.profileLinks.additional.referral',\n            route: '/profile',\n            children: (\n                <div className=\"referral-link\" onClick={handleCopyText}>\n                    <input\n                        type=\"text\"\n                        id=\"referral-link\"\n                        value={`${window.document.location.origin}/signup?refid=${user.uid}`}\n                        readOnly={true}\n                    />\n                    <span>{intl.formatMessage({id: 'page.mobile.profileLinks.link.referral'})}</span>\n                </div>\n            ),\n        },\n    ];\n\n    return (\n        <div className=\"pg-mobile-profile-screen\">\n            <UserInfo />\n            <ProfileLinks links={mainLinks} />\n            <ProfileLinks links={settingsLinks} />\n            <ProfileLinks links={additionalLinks} />\n        </div>\n    );\n};\n\nexport const ProfileMobileScreen = React.memo(ProfileMobileScreenComponent);\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Pagination } from '../../../components';\nimport { useUserActivityFetch } from '../../../hooks';\nimport {\n    RootState,\n    selectUserActivity,\n    selectUserActivityCurrentPage,\n    selectUserActivityFirstElemIndex,\n    selectUserActivityLastElemIndex,\n    selectUserActivityNextPageExists,\n} from '../../../modules';\nimport { Subheader, UserActivityItem } from '../../components';\n\nconst DEFAULT_LIMIT = 10;\n\nconst ProfileAccountActivityMobileScreenComponent: React.FC = () => {\n    const [currentPage, setCurrentPage] = React.useState(0);\n    const intl = useIntl();\n    const history = useHistory();\n    const page = useSelector(selectUserActivityCurrentPage);\n    const userActivity = useSelector(selectUserActivity);\n    const firstElemIndex = useSelector((state: RootState) => selectUserActivityFirstElemIndex(state, DEFAULT_LIMIT));\n    const lastElemIndex = useSelector((state: RootState) => selectUserActivityLastElemIndex(state, DEFAULT_LIMIT));\n    const nextPageExists = useSelector((state: RootState) => selectUserActivityNextPageExists(state, DEFAULT_LIMIT));\n    useUserActivityFetch({page: currentPage, limit: DEFAULT_LIMIT});\n\n    const onClickPrevPage = () => {\n        setCurrentPage(Number(page) - 1);\n    };\n    const onClickNextPage = () => {\n        setCurrentPage(Number(page) + 1);\n    };\n\n    return (\n        <React.Fragment>\n          <Subheader\n            title={intl.formatMessage({ id: 'page.mobile.profile.accountActivity.title' })}\n            backTitle={intl.formatMessage({ id: 'page.body.profile.header.account' })}\n            onGoBack={() => history.push('/profile')}\n          />\n            <div className=\"pg-mobile-profile-account-activity-screen\">\n                <div className=\"pg-mobile-profile-account-activity-screen__list\">\n                    {userActivity.length ? (\n                        userActivity.map((item, index) => <UserActivityItem key={index} item={item} />)\n                    ) : (\n                        <span className=\"no-data\">{intl.formatMessage({id: 'page.noDataToShow'})}</span>\n                    )}\n                    <Pagination\n                        firstElemIndex={firstElemIndex}\n                        lastElemIndex={lastElemIndex}\n                        page={currentPage}\n                        nextPageExists={nextPageExists}\n                        onClickPrevPage={onClickPrevPage}\n                        onClickNextPage={onClickNextPage}\n                    />\n                </div>\n\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const ProfileAccountActivityMobileScreen = React.memo(ProfileAccountActivityMobileScreenComponent);\n","import * as React from 'react';\n\ninterface Props {\n    className?: string;\n}\n\nexport const AddIcon: React.FC<Props> = (props: Props) => (\n    <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" className={props.className}>\n        <rect width=\"28\" height=\"28\" fill=\"none\"/>\n        <path d=\"M14 23.6C8.708 23.6 4.4 19.292 4.4 14C4.4 8.708 8.708 4.4 14 4.4C19.292 4.4 23.6 8.708 23.6 14C23.6 19.292 19.292 23.6 14 23.6ZM14 2C12.4241 2 10.8637 2.31039 9.4078 2.91345C7.95189 3.5165 6.62902 4.40042 5.51472 5.51472C3.26428 7.76516 2 10.8174 2 14C2 17.1826 3.26428 20.2348 5.51472 22.4853C6.62902 23.5996 7.95189 24.4835 9.4078 25.0866C10.8637 25.6896 12.4241 26 14 26C17.1826 26 20.2348 24.7357 22.4853 22.4853C24.7357 20.2348 26 17.1826 26 14C26 12.4241 25.6896 10.8637 25.0866 9.4078C24.4835 7.95189 23.5996 6.62902 22.4853 5.51472C21.371 4.40042 20.0481 3.5165 18.5922 2.91345C17.1363 2.31039 15.5759 2 14 2ZM15.2 8H12.8V12.8H8V15.2H12.8V20H15.2V15.2H20V12.8H15.2V8Z\" fill=\"var(--icons)\"/>\n    </svg>\n);\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { Pagination } from '../../../components';\nimport { useApiKeysFetch } from '../../../hooks';\nimport {\n    apiKeyCreateFetch,\n    ApiKeyDataInterface,\n    apiKeyDeleteFetch,\n    apiKeys2FAModal,\n    apiKeyUpdateFetch,\n    RootState,\n    selectUserInfo,\n} from '../../../modules';\nimport {\n    selectApiKeys,\n    selectApiKeysFirstElemIndex,\n    selectApiKeysLastElemIndex,\n    selectApiKeysModal,\n    selectApiKeysNextPageExists,\n} from '../../../modules/user/apiKeys/selectors';\nimport { AddIcon } from '../../assets/images/AddIcon';\nimport {\n    ApiKeysItem,\n    CreatedApiKeyModal,\n    Subheader,\n    TwoFactorModal,\n} from '../../components';\n\nconst ProfileApiKeysMobileScreenComponent: React.FC = () => {\n    const [itemToUpdate, setItemToUpdate] = React.useState<ApiKeyDataInterface | undefined>();\n    const [currentPageIndex, setPageIndex] = React.useState(0);\n    const [currentAction, setCurrentAction] = React.useState('');\n    const [show2FAModal, setShow2FAModal] = React.useState(false);\n    const [showCreatedApiKeyModal, setShowCreatedApiKeyModal] = React.useState(false);\n    const dispatch = useDispatch();\n    const intl = useIntl();\n    const history = useHistory();\n    const apiKeys = useSelector(selectApiKeys);\n    const apiKeysModal= useSelector(selectApiKeysModal) || { action: '' };\n    const user = useSelector(selectUserInfo);\n    const firstElemIndex = useSelector((state: RootState) => selectApiKeysFirstElemIndex(state, 4));\n    const lastElemIndex = useSelector((state: RootState) => selectApiKeysLastElemIndex(state, 4));\n    const nextPageExists = useSelector(selectApiKeysNextPageExists);\n    useApiKeysFetch(currentPageIndex, 4);\n\n    const onClickPrevPage = () => {\n        setPageIndex(currentPageIndex - 1);\n    };\n\n    const onClickNextPage = () => {\n        setPageIndex(currentPageIndex + 1);\n    };\n\n    const handleCreateApiKey = (code2FA, shouldFetch) => {\n        if (shouldFetch) {\n            const payload = {\n                totp_code: code2FA,\n            };\n            dispatch(apiKeyCreateFetch(payload));\n        }\n    };\n\n    const handleUpdateApiKey = (code2FA, shouldFetch) => {\n        if (shouldFetch && itemToUpdate) {\n            const payload = {\n                totp_code: code2FA,\n                apiKey: {\n                    ...itemToUpdate,\n                    state: itemToUpdate.state === 'active' ? 'disabled' : 'active',\n                },\n            };\n            dispatch(apiKeyUpdateFetch(payload));\n        }\n    };\n\n    const handleDeleteApiKey = (code2FA, shouldFetch) => {\n        if (shouldFetch && itemToUpdate) {\n            const payload = {\n                totp_code: code2FA,\n                kid: itemToUpdate.kid,\n            };\n            dispatch(apiKeyDeleteFetch(payload));\n        }\n    };\n\n    const handleTriggerAction = (code2FA, shouldFetch) => {\n        switch (currentAction) {\n            case 'create':\n                handleCreateApiKey(code2FA, shouldFetch);\n                break;\n            case 'update':\n                handleUpdateApiKey(code2FA, shouldFetch);\n                break;\n            case 'delete':\n                handleDeleteApiKey(code2FA, shouldFetch);\n                break;\n            default:\n                break;\n        }\n\n        setShow2FAModal(false);\n        setItemToUpdate(undefined);\n        setCurrentAction('');\n    };\n\n    const handleSetApiKeyProcess = (actionToSet, item?: ApiKeyDataInterface ) => {\n        setShow2FAModal(state => !state);\n\n        switch (actionToSet) {\n            case 'create':\n                setCurrentAction('create');\n                break;\n            case 'update':\n                setItemToUpdate(item);\n                setCurrentAction('update');\n                break;\n            case 'delete':\n                setItemToUpdate(item);\n                setCurrentAction('delete');\n                break;\n            default:\n                break;\n        }\n    };\n\n    React.useEffect(() => {\n        if (apiKeysModal.action === 'createSuccess' && !showCreatedApiKeyModal) {\n            setShowCreatedApiKeyModal(true);\n            dispatch(apiKeys2FAModal({ active: false }));\n        }\n    }, [dispatch, showCreatedApiKeyModal, apiKeysModal.action]);\n\n    return (\n        <React.Fragment>\n          <Subheader\n            title={intl.formatMessage({ id: 'page.mobile.profile.apiKeys.title' })}\n            backTitle={intl.formatMessage({ id: 'page.body.profile.header.account' })}\n            onGoBack={() => history.push('/profile')}\n          />\n            <div className=\"pg-mobile-profile-api-keys-screen\">\n                {user.otp ? (\n                    <div\n                        className=\"pg-mobile-profile-api-keys-screen__create\"\n                        onClick={() => handleSetApiKeyProcess('create')}\n                    >\n                        <AddIcon />\n                    </div>\n                ) : null}\n                <div className=\"pg-mobile-profile-api-keys-screen__list\">\n                    {user.otp && apiKeys.length ? (\n                        <React.Fragment>\n                            {apiKeys.map((apiKey, index) => (\n                                <ApiKeysItem\n                                    key={index}\n                                    index={index}\n                                    item={apiKey}\n                                    handleUpdateKey={item => handleSetApiKeyProcess('update', item)}\n                                    handleDeleteKey={item => handleSetApiKeyProcess('delete', item)}\n                                />\n                            ))}\n                            <Pagination\n                                firstElemIndex={firstElemIndex}\n                                lastElemIndex={lastElemIndex}\n                                page={currentPageIndex}\n                                nextPageExists={nextPageExists}\n                                onClickPrevPage={onClickPrevPage}\n                                onClickNextPage={onClickNextPage}\n                            />\n                        </React.Fragment>\n                    ) : (\n                        <span className=\"no-data\">{intl.formatMessage({id: 'page.noDataToShow'})}</span>\n                    )}\n                </div>\n                <CreatedApiKeyModal\n                    showModal={showCreatedApiKeyModal}\n                    closeCreatedApiKeyModal={() => setShowCreatedApiKeyModal(false)}\n                    apiKey={apiKeysModal.apiKey}\n                />\n                <TwoFactorModal\n                    showModal={show2FAModal}\n                    handleToggle2FA={handleTriggerAction}\n                />\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const ProfileApiKeysMobileScreen = React.memo(ProfileApiKeysMobileScreenComponent);\n","import { History } from 'history';\nimport * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { CloseIcon } from '../../assets/images/CloseIcon';\nimport { CopyableTextField, CustomInput } from '../../components';\nimport { copy, setDocumentTitle } from '../../helpers';\nimport { alertPush, RootState, selectMobileDeviceState } from '../../modules';\nimport {\n    generate2faQRFetch,\n    selectTwoFactorAuthBarcode,\n    selectTwoFactorAuthQR,\n    selectTwoFactorAuthSuccess,\n    toggle2faFetch,\n} from '../../modules/user/profile';\n\ninterface RouterProps {\n    history: History;\n}\n\ninterface ReduxProps {\n    barcode: string;\n    qrUrl: string;\n    success?: boolean;\n    isMobileDevice: boolean;\n}\n\ninterface DispatchProps {\n    toggle2fa: typeof toggle2faFetch;\n    generateQR: typeof generate2faQRFetch;\n    fetchSuccess: typeof alertPush;\n}\n\ntype Props = RouterProps & ReduxProps & DispatchProps & IntlProps;\n\ninterface State {\n    otpCode: string;\n}\n\nclass ToggleTwoFactorAuthComponent extends React.Component<Props, State> {\n    public state = {\n        otpCode: '',\n    };\n\n    public componentDidMount() {\n        setDocumentTitle('Two factor authentication');\n        const enable2fa = this.get2faAction();\n        if (enable2fa) {\n            this.props.generateQR();\n        }\n    }\n\n    public componentWillReceiveProps(next: Props) {\n        if (!this.props.success && next.success) {\n            this.handleNavigateToProfile();\n        }\n    }\n\n    public translate = (e: string) => {\n        return this.props.intl.formatMessage({ id: e });\n    };\n\n    public doCopy = () => {\n        copy('referral-id');\n        this.props.fetchSuccess({message: ['page.body.wallets.tabs.deposit.ccy.message.success'], type: 'success'});\n    };\n\n    public render() {\n        const enable2fa = this.get2faAction();\n\n        return (\n            <div className=\"pg-profile-two-factor-auth\">\n                {this.renderToggle2fa(enable2fa)}\n            </div>\n        );\n    }\n\n    private renderToggle2fa = (enable2fa: boolean) => {\n        const {\n            barcode,\n            qrUrl,\n        } = this.props;\n        const { otpCode } = this.state;\n\n        const secretRegex = /secret=(\\w+)/;\n        const secretMatch = qrUrl.match(secretRegex);\n        const secret = secretMatch ? secretMatch[1] : null;\n        const submitHandler = enable2fa ? this.handleEnable2fa : this.handleDisable2fa;\n\n        return (\n            <div className=\"container mt-5 pg-profile-two-factor-auth__form p-0\">\n                <div className=\"row m-0 pg-profile-two-factor-auth__header\">\n                    <div className=\"col-11 col-lg-7 offset-lg-4 mt-0 p-0 pl-3\">\n                        {this.translate('page.body.profile.header.account.content.twoFactorAuthentication.header')}\n                    </div>\n                    <div className=\"col-1 mx-0 p-0 px-1\" onClick={this.goBack}>\n                        <CloseIcon className=\"close-icon\" />\n                    </div>\n                </div>\n\n                <div className=\"row m-0 pg-profile-two-factor-auth__body\">\n                    <div className=\"col-12 col-lg-8 col-md-9 pr-0 pl-2 pg-profile-two-factor-auth__body--text d-inline-block\">\n                        <div className=\"row col-12 pg-profile-two-factor-auth__body--text--group\">\n                            <div className=\"d-inline\">\n                                <span className=\"cr-item-number\">1   </span>\n                                <span className=\"cr-item-text\">{this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.1')}</span>\n                                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://apps.apple.com/app/google-authenticator/id388497605?mt=8\">AppStore</a>\n                                <span className=\"cr-item-text\"> {this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.or')}</span>\n                                <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2&hl\">Google play</a>\n                            </div>\n                        </div>\n                        <div className=\"row col-12 pg-profile-two-factor-auth__body--text--group\">\n                            <div className=\"d-inline\">\n                                <span className=\"cr-item-number\">2    </span>\n                                <span className=\"cr-item-text\">{this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.2')}</span>\n                                <br />\n                                <span className=\"cr-item-text\">{this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.3')}</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-12 col-lg-4 col-md-3 pt-4 pg-profile-two-factor-auth__body--barcode\">\n                        {enable2fa && this.renderTwoFactorAuthQR(barcode)}\n                    </div>\n                </div>\n                <div className=\"row m-0 p-5 pg-profile-two-factor-auth__copyablefield\">\n                    {enable2fa && secret && this.renderSecret(secret)}\n                </div>\n                <div className=\"row m-0 pg-profile-two-factor-auth__body\">\n                    <div className=\"col-12 pl-2 pg-profile-two-factor-auth__body--text d-inline-block\">\n                        <div className=\"row col-12 pg-profile-two-factor-auth__body--text--group\">\n                            <div className=\"col-12 col-sm-5\">\n                                <span className=\"cr-item-number\">3   </span>\n                                <span className=\"cr-item-text\">{this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.4')}</span>\n                            </div>\n                            <div className=\"col-12 col-sm-7\">\n                                <fieldset className=\"pg-profile-two-factor-auth__body--input\">\n                                    <div className=\"hidden-label\">{this.translate('page.body.profile.header.account.content.twoFactorAuthentication.subHeader')}</div>\n                                    <CustomInput\n                                        handleChangeInput={this.handleOtpCodeChange}\n                                        type=\"tel\"\n                                        inputValue={otpCode}\n                                        placeholder={this.translate('page.body.profile.header.account.content.twoFactorAuthentication.subHeader')}\n                                        onKeyPress={this.handleEnterPress}\n                                        label={this.translate('page.body.profile.header.account.content.twoFactorAuthentication.subHeader')}\n                                        defaultLabel=\"\"\n                                    />\n                                </fieldset>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row p-5\">\n                    <div className=\"col-12 m-0\">\n                        <Button\n                            onClick={submitHandler}\n                            size=\"lg\"\n                            variant=\"primary\"\n                            type=\"button\"\n                            block={true}\n                        >\n                            {this.translate('page.body.profile.header.account.content.twoFactorAuthentication.enable')}\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    private renderTwoFactorAuthQR = (barcode: string) => {\n        const src = `data:image/png;base64,${barcode}`;\n\n        return barcode.length > 0 && <img alt=\"\" className=\"pg-profile-two-factor-auth__qr\" src={src} />;\n    };\n\n    private renderSecret = (secret: string) => {\n        return (\n            <div className=\"pg-profile-two-factor-auth__copyablefield__container\">\n                <legend>{this.translate('page.body.profile.header.account.content.twoFactorAuthentication.message.mfa')}</legend>\n                <fieldset onClick={this.doCopy}>\n                    {secret && <CopyableTextField\n                      value={secret}\n                      fieldId=\"secret-2fa\"\n                      label=\"\"\n                    />\n                    }\n                </fieldset>\n            </div>\n        );\n    };\n\n    private handleOtpCodeChange = (value: string) => {\n        this.setState({\n            otpCode: value,\n        });\n    };\n\n    private handleEnterPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n        const enable2fa = this.get2faAction();\n        const submitHandler = enable2fa ? this.handleEnable2fa : this.handleDisable2fa;\n        if (event.key === 'Enter') {\n            event.preventDefault();\n            submitHandler();\n        }\n    };\n\n    private handleEnable2fa = () => {\n        this.props.toggle2fa({\n            code: this.state.otpCode,\n            enable: true,\n        });\n    };\n\n    private handleDisable2fa = () => {\n        this.props.toggle2fa({\n            code: this.state.otpCode,\n            enable: false,\n        });\n    };\n\n    private handleNavigateToProfile = () => {\n        this.props.history.push('/profile');\n    };\n\n    private get2faAction = () => {\n        const routingState = this.props.history.location.state as any;\n\n        return routingState ? routingState.enable2fa : false;\n    };\n\n    private goBack = () => {\n        window.history.back();\n    };\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, Props, RootState> = state => ({\n    qrUrl: selectTwoFactorAuthQR(state),\n    barcode: selectTwoFactorAuthBarcode(state),\n    success: selectTwoFactorAuthSuccess(state),\n    isMobileDevice: selectMobileDeviceState(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n    generateQR: () => dispatch(generate2faQRFetch()),\n    toggle2fa: ({ code, enable }) => dispatch(toggle2faFetch({ code, enable })),\n    fetchSuccess: payload => dispatch(alertPush(payload)),\n});\n\nexport const ProfileTwoFactorAuthScreen = compose(\n    injectIntl,\n    withRouter,\n    connect(mapStateToProps, mapDispatchToProps),\n)(ToggleTwoFactorAuthComponent) as React.ComponentClass;\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { ProfileTwoFactorAuth } from '../../../containers/ProfileTwoFactorAuth';\nimport { selectUserInfo, toggle2faFetch } from '../../../modules/user/profile';\nimport { ProfileTwoFactorAuthScreen } from '../../../screens/ProfileTwoFactorAuthScreen';\nimport { TwoFactorModal } from '../../components';\nimport { Subheader } from '../../components/Subheader';\n\nexport const ProfileAuthMobileScreen: React.FC = React.memo(() => {\n    const [showModal, setShowModal] = React.useState(false);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const intl = useIntl();\n    const user = useSelector(selectUserInfo);\n\n    const handleToggle2FA = (code2FA, shouldFetch) => {\n        if (shouldFetch) {\n            dispatch(toggle2faFetch({\n                code: code2FA,\n                enable: false,\n            }));\n            history.push('/profile');\n        }\n        setShowModal(false);\n    };\n\n    const handleNavigateTo2fa = React.useCallback((enable2fa: boolean) => {\n        if (!enable2fa) {\n            setShowModal(state => !state);\n        }\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Subheader\n                title={intl.formatMessage({ id: 'page.profile.kyc.title' })}\n                backTitle={intl.formatMessage({ id: 'page.body.profile.header.account' })}\n                onGoBack={() => history.push('/profile')}\n            />\n            <div className=\"cr-mobile-profile-auth\">\n                <div className=\"cr-mobile-profile-auth__enable\">\n                    <div className=\"cr-mobile-profile-auth__enable-label\">\n                        <ProfileTwoFactorAuth\n                            is2faEnabled={user.otp}\n                            navigateTo2fa={handleNavigateTo2fa}\n                        />\n                    </div>\n                    {!user.otp ? <ProfileTwoFactorAuthScreen/> : null}\n                </div>\n                <TwoFactorModal\n                    showModal={showModal}\n                    handleToggle2FA={handleToggle2FA}\n                />\n            </div>\n        </React.Fragment>\n    );\n});\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { ChangePassword } from '../../../components';\nimport {\n    changePasswordFetch,\n    entropyPasswordFetch,\n    selectConfigs,\n    selectCurrentPasswordEntropy,\n } from '../../../modules';\nimport { Subheader } from '../../components';\n\nconst ChangePasswordScreenComponent: React.FC = () => {\n    const dispatch = useDispatch();\n    const intl = useIntl();\n    const history = useHistory();\n\n    const handleChangePassword = payload => {\n        if (payload) {\n            dispatch(changePasswordFetch(payload));\n            history.push('/profile');\n        }\n    };\n\n    const fetchCurrentPasswordEntropy = payload => {\n        if (payload) {\n            dispatch(entropyPasswordFetch(payload));\n        }\n    };\n\n    const configs = useSelector(selectConfigs);\n    const currentPasswordEntropy = useSelector(selectCurrentPasswordEntropy);\n\n    return (\n        <React.Fragment>\n            <Subheader\n                title={intl.formatMessage({ id: 'page.mobile.profile.changePassword.title' })}\n                backTitle={intl.formatMessage({ id: 'page.body.profile.header.account' })}\n                onGoBack={() => history.push('/profile')}\n            />\n            <div className=\"pg-mobile-profile-change-password-screen\">\n                <ChangePassword\n                    handleChangePassword={handleChangePassword}\n                    configs={configs}\n                    currentPasswordEntropy={currentPasswordEntropy}\n                    fetchCurrentPasswordEntropy={fetchCurrentPasswordEntropy}\n                />\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const ProfileChangePasswordMobileScreen = React.memo(ChangePasswordScreenComponent);\n","import * as React from 'react';\n\ninterface Props {\n    className?: string;\n}\n\nexport const CheckIcon: React.FC<Props> = (props: Props) => (\n    <svg width=\"15\" height=\"15\" viewBox=\"0 0 15 15\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className={props.className}>\n        <path d=\"M1 6.24419L5.54301 12L14 1\" stroke=\"var(--primary-cta-color)\" strokeWidth=\"2.5\"/>\n    </svg>\n);\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport {\n    changeColorTheme,\n    selectCurrentColorTheme,\n} from '../../../modules';\nimport { CheckIcon } from '../../assets/images/CheckIcon';\nimport { Subheader } from '../../components/Subheader';\n\nconst COLOR_THEMES = ['dark', 'light'];\n\nconst ProfileThemeMobileScreenComponent: React.FC = () => {\n    const intl = useIntl();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const currentColorTheme = useSelector(selectCurrentColorTheme);\n\n    const handleChangeColorTheme = (colorTheme: string) => {\n        if (colorTheme !== currentColorTheme) {\n            dispatch(changeColorTheme(colorTheme));\n        }\n    };\n\n    const renderThemeListItem = (colorTheme, index) => {\n        const listItemClassName = classnames('pg-mobile-profile-theme-screen__list__item', {\n            'pg-mobile-profile-theme-screen__list__item--active': colorTheme === currentColorTheme,\n        });\n\n        return (\n            <div\n                key={index}\n                className={listItemClassName}\n                onClick={() => handleChangeColorTheme(colorTheme)}\n            >\n                <span>{intl.formatMessage({id: `page.mobile.profileColorTheme.theme.${colorTheme}`})}</span>\n                <CheckIcon />\n            </div>\n        );\n    };\n\n    return (\n        <React.Fragment>\n          <Subheader\n            title={intl.formatMessage({ id: 'page.mobile.profile.theme.title' })}\n            backTitle={intl.formatMessage({ id: 'page.body.profile.header.account' })}\n            onGoBack={() => history.push('/profile')}\n          />\n            <div className=\"pg-mobile-profile-theme-screen\">\n                <div className=\"pg-mobile-profile-theme-screen__list\">\n                    {COLOR_THEMES.map(renderThemeListItem)}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const ProfileThemeMobileScreen = React.memo(ProfileThemeMobileScreenComponent);\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { languages } from '../../../api/config';\nimport { getLanguageName } from '../../../helpers';\nimport {\n    changeLanguage,\n    changeUserDataFetch,\n    selectCurrentLanguage,\n    selectUserInfo,\n    selectUserLoggedIn,\n} from '../../../modules';\nimport { CheckIcon } from '../../assets/images/CheckIcon';\nimport { Subheader } from '../../components/Subheader';\n\nconst ProfileLanguageMobileScreenComponent: React.FC = () => {\n    const dispatch = useDispatch();\n    const intl = useIntl();\n    const history = useHistory();\n    const user = useSelector(selectUserInfo);\n    const isLoggedIn = useSelector(selectUserLoggedIn);\n    const currentLanguage = useSelector(selectCurrentLanguage);\n\n    const handleChangeLanguage = (language: string) => {\n        if (isLoggedIn) {\n            const data = user.data && JSON.parse(user.data);\n\n            if (data && data.language && data.language !== language) {\n                const payload = {\n                    ...user,\n                    data: JSON.stringify({\n                        ...data,\n                        language,\n                    }),\n                };\n\n                dispatch(changeUserDataFetch({ user: payload }));\n            }\n        }\n\n        dispatch(changeLanguage(language));\n    };\n\n    const renderLanguageListItem = (language, index) => {\n        const listItemClassName = classnames('pg-mobile-profile-language-screen__list__item', {\n            'pg-mobile-profile-language-screen__list__item--active': language === currentLanguage,\n        });\n\n        return (\n            <div\n                key={index}\n                className={listItemClassName}\n                onClick={() => handleChangeLanguage(language)}\n            >\n                <span>{getLanguageName(language)}</span>\n                <CheckIcon />\n            </div>\n        );\n    };\n\n    return (\n        <React.Fragment>\n          <Subheader\n            title={intl.formatMessage({ id: 'page.mobile.profile.language.title' })}\n            backTitle={intl.formatMessage({ id: 'page.body.profile.header.account' })}\n            onGoBack={() => history.push('/profile')}\n          />\n            <div className=\"pg-mobile-profile-language-screen\">\n                <div className=\"pg-mobile-profile-language-screen__list\">\n                    {languages.map(renderLanguageListItem)}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const ProfileLanguageMobileScreen = React.memo(ProfileLanguageMobileScreenComponent);\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router';\nimport { ProfileVerification } from '../../../containers/ProfileVerification';\nimport { Subheader } from '../../components/Subheader';\n\nexport const ProfileVerificationMobileScreen: React.FC = () => {\n    const intl = useIntl();\n    const history = useHistory();\n\n    return (\n        <React.Fragment>\n            <Subheader\n                title={intl.formatMessage({ id: 'page.body.profile.header.account.profile' })}\n                backTitle={intl.formatMessage({ id: 'page.body.profile.header.account' })}\n                onGoBack={() => history.push('/profile')}\n            />\n            <div className=\"cr-mobile-profile-verification\">\n                <ProfileVerification />\n            </div>\n        </React.Fragment>\n    );\n};\n","import * as React from 'react';\nimport {Decimal} from '../../../components/Decimal';\nimport {localeDate} from '../../../helpers';\n\nconst RowItemComponent = props => {\n    return (\n        <div className=\"cr-mobile-table-row\">\n            <div className=\"cr-mobile-table-row__amount\">\n                <div className=\"cr-mobile-table-row__amount-value\">\n                    <Decimal fixed={props.fixed}>{props.amount}</Decimal>\n                </div>\n                <span className=\"cr-mobile-table-row__amount-currency\">{props.currency}</span>\n            </div>\n            <div className=\"cr-mobile-table-row__date\">\n                {localeDate(props.createdAt, 'fullDate')}\n            </div>\n        </div>\n    );\n};\n\nconst RowItem = React.memo(RowItemComponent);\n\nexport {\n    RowItem,\n};\n\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { Pagination, Table } from '../../../components';\nimport { DEFAULT_CCY_PRECISION } from '../../../constants';\nimport { localeDate } from '../../../helpers';\nimport { useCurrenciesFetch, useHistoryFetch, useWalletsFetch } from '../../../hooks';\nimport { RootState, selectCurrentPage, selectLastElemIndex, selectNextPageExists } from '../../../modules';\nimport { selectCurrencies } from '../../../modules/public/currencies';\nimport { selectFirstElemIndex, selectHistory } from '../../../modules/user/history';\nimport { selectWallets } from '../../../modules/user/wallets';\nimport { RowItem } from './Rowitem';\n\nconst DEFAULT_LIMIT = 6;\n\nconst HistoryTable = (props: any) => {\n   const [currentPage, setCurrentPage] = React.useState(0);\n   const intl = useIntl();\n   const page = useSelector(selectCurrentPage);\n   const list = useSelector(selectHistory);\n   const wallets = useSelector(selectWallets);\n   const currencies = useSelector(selectCurrencies);\n   const firstElemIndex = useSelector((state: RootState) => selectFirstElemIndex(state, DEFAULT_LIMIT));\n   const lastElemIndex = useSelector((state: RootState) => selectLastElemIndex(state, DEFAULT_LIMIT));\n   const nextPageExists = useSelector((state: RootState) => selectNextPageExists(state, DEFAULT_LIMIT));\n\n   useWalletsFetch();\n   useCurrenciesFetch();\n   useHistoryFetch({ type: props.type, currency: props.currency, limit: DEFAULT_LIMIT, page: currentPage });\n\n   const onClickPrevPage = () => {\n      setCurrentPage(Number(page) - 1);\n   };\n   const onClickNextPage = () => {\n      setCurrentPage(Number(page) + 1);\n   };\n   const formatTxState = (tx: string, confirmations?: number, minConfirmations?: number) => {\n      const statusMapping = {\n         succeed: <span className=\"cr-mobile-history-table--success\">{intl.formatMessage({ id: 'page.body.history.withdraw.content.status.succeed' })}</span>,\n         failed: <span className=\"cr-mobile-history-table--failed\">{intl.formatMessage({ id: 'page.body.history.withdraw.content.status.failed' })}</span>,\n         accepted: <span className=\"cr-mobile-history-table--success\">{intl.formatMessage({ id: 'page.body.history.deposit.content.status.accepted' })}</span>,\n         collected: <span className=\"cr-mobile-history-table--success\">{intl.formatMessage({ id: 'page.body.history.deposit.content.status.collected' })}</span>,\n         canceled: <span className=\"cr-mobile-history-table--failed\">{intl.formatMessage({ id: 'page.body.history.deposit.content.status.canceled' })}</span>,\n         rejected: <span className=\"cr-mobile-history-table--failed\">{intl.formatMessage({ id: 'page.body.history.deposit.content.status.rejected' })}</span>,\n         processing: <span className=\"cr-mobile-history-table--pending\">{intl.formatMessage({ id: 'page.body.history.deposit.content.status.processing' })}</span>,\n         prepared: <span className=\"cr-mobile-history-table--pending\">{intl.formatMessage({ id: 'page.body.wallets.table.pending' })}</span>,\n         submitted: <span className=\"cr-mobile-history-table--pending\">{(confirmations !== undefined && minConfirmations !== undefined) ? (\n            `${confirmations}/${minConfirmations}`\n         ) : (\n            intl.formatMessage({ id: 'page.body.wallets.table.pending' })\n         )}</span>,\n         skipped: <span className=\"cr-mobile-history-table--success\">{intl.formatMessage({ id: 'page.body.history.deposit.content.status.skipped' })}</span>,\n      };\n\n      return statusMapping[tx];\n   };\n   const retrieveData = () => {\n      const {\n         currency,\n         type,\n      } = props;\n      const { fixed } = wallets.find(w => w.currency === currency) || { fixed: DEFAULT_CCY_PRECISION };\n      if (list.length === 0) {\n         return [[intl.formatMessage({ id: 'page.noDataToShow' }), '', '']];\n      }\n\n      return list.sort((a, b) => {\n         return localeDate(a.created_at, 'fullDate') > localeDate(b.created_at, 'fullDate') ? -1 : 1;\n      }).map((item: any, index) => {\n         const amount = 'amount' in item ? Number(item.amount) : Number(item.price) * Number(item.volume);\n         const confirmations = type === 'deposits' && item.confirmations;\n         const itemCurrency = currencies && currencies.find(cur => cur.id === currency);\n         const blockchainCurrency = itemCurrency?.networks.find(blockchain_cur => blockchain_cur.blockchain_key === item.blockchain_key);\n         const minConfirmations = blockchainCurrency?.min_confirmations;\n         const state = 'state' in item ? formatTxState(item.state, confirmations, minConfirmations) : '';\n\n         return [\n            <RowItem\n               amount={amount}\n               fixed={fixed}\n               currency={currency}\n               createdAt={item.created_at}\n            />,\n            state,\n         ];\n      });\n   };\n   const mapRows = row => {\n      return <div className=\"cr-mobile-history-table__row\">{row}</div>;\n   };\n\n   const tableData = retrieveData().map(row => row.map(mapRows));\n\n   return (\n      <div className=\"cr-mobile-history-table\">\n         <Table data={tableData} />\n         <Pagination\n            firstElemIndex={firstElemIndex}\n            lastElemIndex={lastElemIndex}\n            page={page}\n            nextPageExists={nextPageExists}\n            onClickPrevPage={onClickPrevPage}\n            onClickNextPage={onClickNextPage}\n         />\n      </div>\n   );\n};\n\nexport {\n   HistoryTable,\n};\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useParams } from 'react-router';\nimport { TabPanel } from '../../../components/TabPanel';\nimport { HistoryTable } from '../../components/HistoryTable';\n\nconst WalletsHistory: React.FC = () => {\n    const intl = useIntl();\n    const { currency } = useParams();\n    const [currentTabIndex, setCurrentTabIndex] = React.useState(0);\n\n    const renderTabs = () => [\n        {\n            content: currentTabIndex === 0 ? <HistoryTable currency={currency} type=\"deposits\" /> : null,\n            label: intl.formatMessage({ id: 'page.mobile.wallets.deposit.history' }),\n        },\n        {\n            content: currentTabIndex === 1 ? <HistoryTable currency={currency} type=\"withdraws\" /> : null,\n            label: intl.formatMessage( { id: 'page.mobile.wallets.withdraw.history' }),\n        },\n    ];\n\n    return (\n        <div className=\"pg-mobile-trading-tabs\">\n            <TabPanel\n                panels={renderTabs()}\n                currentTabIndex={currentTabIndex}\n                onCurrentTabChange={setCurrentTabIndex}\n            />\n        </div>\n    );\n};\n\nexport {\n    WalletsHistory,\n};\n\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport { useWalletsFetch } from '../../../hooks';\nimport { selectWallets } from '../../../modules/user/wallets';\nimport { Subheader, WalletBanner, WalletHeader, WalletsButtons } from '../../components';\nimport { WalletsHistory } from '../WalletsHistory';\n\nconst SelectedWalletMobileScreen = ()  =>  {\n    const { currency } = useParams();\n    const intl = useIntl();\n    const history = useHistory();\n    const wallets = useSelector(selectWallets) || [];\n\n    const wallet = wallets.find(item => item.currency === currency) || { name: '', currency: '' };\n\n    useWalletsFetch();\n\n    return (\n        <React.Fragment>\n            <Subheader\n                title={intl.formatMessage({ id: 'page.body.wallets.balance' })}\n                backTitle={intl.formatMessage({ id: 'page.mobile.wallets.title' })}\n                onGoBack={() => history.push('/wallets')}\n            />\n            <WalletHeader currency={wallet.currency} name={wallet.name}/>\n            <WalletBanner wallet={wallet}/>\n            <WalletsHistory />\n            <WalletsButtons currency={wallet.currency} />\n        </React.Fragment>\n    );\n};\n\nexport {\n    SelectedWalletMobileScreen,\n};\n","import cx from 'classnames';\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { captchaLogin } from '../../api';\nimport { Captcha, SignInComponent, TwoFactorAuth } from '../../components';\nimport { EMAIL_REGEX, ERROR_EMPTY_PASSWORD, ERROR_INVALID_EMAIL, setDocumentTitle } from '../../helpers';\nimport {\n   Configs,\n   GeetestCaptchaResponse,\n   GeetestCaptchaV4Response,\n   resetCaptchaState,\n   RootState,\n   selectAlertState,\n   selectCaptchaResponse,\n   selectConfigs,\n   selectGeetestCaptchaSuccess,\n   selectRecaptchaSuccess,\n   selectSignInError,\n   selectSignInRequire2FA,\n   selectSignUpRequireVerification,\n   selectUserFetching,\n   selectUserLoggedIn,\n   signIn,\n   signInError,\n   signInRequire2FA,\n   signUpRequireVerification,\n} from '../../modules';\nimport { CommonError } from '../../modules/types';\n\ninterface ReduxProps {\n   error?: CommonError;\n   isLoggedIn: boolean;\n   loading?: boolean;\n   require2FA?: boolean;\n   requireEmailVerification?: boolean;\n   configs: Configs;\n   captcha_response?: string | GeetestCaptchaResponse | GeetestCaptchaV4Response;\n   reCaptchaSuccess: boolean;\n   geetestCaptchaSuccess: boolean;\n}\n\ninterface DispatchProps {\n   signIn: typeof signIn;\n   signInError: typeof signInError;\n   signInRequire2FA: typeof signInRequire2FA;\n   resetCaptchaState: typeof resetCaptchaState;\n   signUpRequireVerification: typeof signUpRequireVerification;\n}\n\ninterface SignInState {\n   email: string;\n   emailError: string;\n   emailFocused: boolean;\n   password: string;\n   passwordError: string;\n   passwordFocused: boolean;\n   otpCode: string;\n   error2fa: string;\n   codeFocused: boolean;\n}\n\ntype Props = ReduxProps & DispatchProps & RouterProps & IntlProps;\n\nclass SignIn extends React.Component<Props, SignInState> {\n   public state = {\n      email: '',\n      emailError: '',\n      emailFocused: false,\n      password: '',\n      passwordError: '',\n      passwordFocused: false,\n      otpCode: '',\n      error2fa: '',\n      codeFocused: false,\n   };\n\n   public componentDidMount() {\n      setDocumentTitle('Sign In');\n      this.props.signInError({ code: 0, message: [''] });\n      this.props.signUpRequireVerification({ requireVerification: false });\n   }\n\n   public componentWillReceiveProps(nextProps: Props) {\n      const { email } = this.state;\n\n      if (!this.props.isLoggedIn && nextProps.isLoggedIn) {\n         this.props.resetCaptchaState();\n         this.props.history.push('/wallets', { email: email });\n      }\n\n      if (nextProps.requireEmailVerification) {\n         this.props.history.push('/email-verification', { email: email });\n      }\n   }\n\n   public componentWillUnmount() {\n      this.props.resetCaptchaState();\n   }\n\n   public renderCaptcha = () => {\n      const { error } = this.props;\n\n      return (\n         <Captcha error={error} />\n      );\n   };\n\n   public render() {\n      const { loading, require2FA } = this.props;\n\n      const className = cx('pg-sign-in-screen__container', { loading });\n\n      return (\n         <div className=\"pg-sign-in-screen\">\n            <div className={className}>{require2FA ? this.render2FA() : this.renderSignInForm()}</div>\n         </div>\n      );\n   }\n\n   private renderSignInForm = () => {\n      const {\n         configs,\n         loading,\n         captcha_response,\n         reCaptchaSuccess,\n         geetestCaptchaSuccess,\n      } = this.props;\n      const { email, emailError, emailFocused, password, passwordError, passwordFocused } = this.state;\n\n      return (\n         <SignInComponent\n            email={email}\n            emailError={emailError}\n            emailFocused={emailFocused}\n            emailPlaceholder={this.props.intl.formatMessage({ id: 'page.header.signIn.email' })}\n            password={password}\n            passwordError={passwordError}\n            passwordFocused={passwordFocused}\n            passwordPlaceholder={this.props.intl.formatMessage({ id: 'page.header.signIn.password' })}\n            labelSignIn={this.props.intl.formatMessage({ id: 'page.header.signIn' })}\n            labelSignUp={this.props.intl.formatMessage({ id: 'page.header.signUp' })}\n            emailLabel={this.props.intl.formatMessage({ id: 'page.header.signIn.email' })}\n            passwordLabel={this.props.intl.formatMessage({ id: 'page.header.signIn.password' })}\n            receiveConfirmationLabel={this.props.intl.formatMessage({ id: 'page.header.signIn.receiveConfirmation' })}\n            forgotPasswordLabel={this.props.intl.formatMessage({ id: 'page.header.signIn.forgotPassword' })}\n            isLoading={loading}\n            onForgotPassword={this.forgotPassword}\n            onSignUp={this.handleSignUp}\n            onSignIn={this.handleSignIn}\n            handleChangeFocusField={this.handleFieldFocus}\n            isFormValid={this.validateForm}\n            refreshError={this.refreshError}\n            changeEmail={this.handleChangeEmailValue}\n            changePassword={this.handleChangePasswordValue}\n            captchaType={configs.captcha_type}\n            renderCaptcha={this.renderCaptcha()}\n            reCaptchaSuccess={reCaptchaSuccess}\n            geetestCaptchaSuccess={geetestCaptchaSuccess}\n            captcha_response={captcha_response}\n         />\n      );\n   };\n\n   private render2FA = () => {\n      const { loading } = this.props;\n      const { otpCode, error2fa, codeFocused } = this.state;\n\n      return (\n         <TwoFactorAuth\n            isLoading={loading}\n            onSubmit={this.handle2FASignIn}\n            title={this.props.intl.formatMessage({ id: 'page.password2fa' })}\n            label={this.props.intl.formatMessage({ id: 'page.body.wallets.tabs.withdraw.content.code2fa' })}\n            buttonLabel={this.props.intl.formatMessage({ id: 'page.header.signIn' })}\n            message={this.props.intl.formatMessage({ id: 'page.password2fa.message' })}\n            codeFocused={codeFocused}\n            otpCode={otpCode}\n            error={error2fa}\n            handleOtpCodeChange={this.handleChangeOtpCode}\n            handleChangeFocusField={this.handle2faFocus}\n            handleClose2fa={this.handleClose}\n         />\n      );\n   };\n\n   private refreshError = () => {\n      this.setState({\n         emailError: '',\n         passwordError: '',\n      });\n   };\n\n   private handleChangeOtpCode = (value: string) => {\n      this.setState({\n         error2fa: '',\n         otpCode: value,\n      });\n   };\n\n   private handleSignIn = () => {\n      const { email, password } = this.state;\n      const { configs: { captcha_type }, captcha_response } = this.props;\n\n      if (captcha_type !== 'none' && captchaLogin()) {\n         this.props.signIn({ email, password, captcha_response });\n      } else {\n         this.props.signIn({ email, password });\n      }\n   };\n\n   private handle2FASignIn = () => {\n      const { email, password, otpCode } = this.state;\n      const { configs: { captcha_type }, captcha_response } = this.props;\n\n      if (!otpCode) {\n         this.setState({\n            error2fa: 'Please enter 2fa code',\n         });\n      } else {\n         if (captcha_type !== 'none' && captchaLogin()) {\n            this.props.signIn({ email, password, captcha_response, otp_code: otpCode });\n         } else {\n            this.props.signIn({ email, password, otp_code: otpCode });\n         }\n      }\n   };\n\n   private handleSignUp = () => {\n      this.props.history.push('/signup');\n   };\n\n   private forgotPassword = () => {\n      this.props.history.push('/forgot_password');\n   };\n\n   private handleFieldFocus = (field: string) => {\n      switch (field) {\n         case 'email':\n            this.setState(prev => ({\n               emailFocused: !prev.emailFocused,\n            }));\n            break;\n         case 'password':\n            this.setState(prev => ({\n               passwordFocused: !prev.passwordFocused,\n            }));\n            break;\n         default:\n            break;\n      }\n   };\n\n   private handle2faFocus = () => {\n      this.setState(prev => ({\n         codeFocused: !prev.codeFocused,\n      }));\n   };\n\n   private validateForm = () => {\n      const { email, password } = this.state;\n      const isEmailValid = email.match(EMAIL_REGEX);\n\n      if (!isEmailValid) {\n         this.setState({\n            emailError: this.props.intl.formatMessage({ id: ERROR_INVALID_EMAIL }),\n            passwordError: '',\n         });\n\n         return;\n      }\n      if (!password) {\n         this.setState({\n            emailError: '',\n            passwordError: this.props.intl.formatMessage({ id: ERROR_EMPTY_PASSWORD }),\n         });\n\n         return;\n      }\n   };\n\n   private handleChangeEmailValue = (value: string) => {\n      this.setState({\n         email: value,\n      });\n   };\n\n   private handleChangePasswordValue = (value: string) => {\n      this.setState({\n         password: value,\n      });\n   };\n\n   private handleClose = () => {\n      this.props.signInRequire2FA({ require2fa: false });\n   };\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   alert: selectAlertState(state),\n   error: selectSignInError(state),\n   isLoggedIn: selectUserLoggedIn(state),\n   loading: selectUserFetching(state),\n   require2FA: selectSignInRequire2FA(state),\n   requireEmailVerification: selectSignUpRequireVerification(state),\n   configs: selectConfigs(state),\n   captcha_response: selectCaptchaResponse(state),\n   reCaptchaSuccess: selectRecaptchaSuccess(state),\n   geetestCaptchaSuccess: selectGeetestCaptchaSuccess(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   signIn: data => dispatch(signIn(data)),\n   signInError: error => dispatch(signInError(error)),\n   signInRequire2FA: payload => dispatch(signInRequire2FA(payload)),\n   resetCaptchaState: () => dispatch(resetCaptchaState()),\n   signUpRequireVerification: data => dispatch(signUpRequireVerification(data)),\n});\n\nexport const SignInScreen = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps),\n)(SignIn) as React.ComponentClass;\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { selectSignInRequire2FA } from '../../../modules/user/auth';\nimport { SignInScreen } from '../../../screens/SignInScreen';\nimport { Modal } from '../../components';\n\n\nconst SignInMobileScreen: React.FC = () => {\n    const require2FA = useSelector(selectSignInRequire2FA);\n    const history = useHistory();\n    const intl = useIntl();\n    const title = require2FA ? { id: 'page.mobile.signin.kyc.header' } : { id: 'page.body.landing.header.button2' };\n    const className = classnames({\n        'cr-mobile-signin': !require2FA,\n        'cr-mobile-kyc': require2FA,\n    });\n\n    return <div className={className}>\n        <Modal\n            isOpen={true}\n            onClose={() => history.push('/trading')}\n            onBack={() => !require2FA && history.push('/signup')}\n            backTitle={intl.formatMessage({ id: 'page.body.landing.header.button3' })}\n            title={intl.formatMessage(title)}>\n            <SignInScreen/>\n        </Modal>\n    </div>;\n};\n\nexport {\n    SignInMobileScreen,\n};\n","import cx from 'classnames';\nimport { History } from 'history';\nimport * as React from 'react';\nimport { Button } from 'react-bootstrap';\nimport {\n   injectIntl,\n} from 'react-intl';\nimport {\n   connect,\n   MapDispatchToPropsFunction,\n   MapStateToProps,\n} from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { isUsernameEnabled } from '../../api';\nimport { Captcha, Modal, SignUpForm } from '../../components';\nimport {\n   EMAIL_REGEX,\n   ERROR_INVALID_EMAIL,\n   ERROR_INVALID_PASSWORD,\n   ERROR_PASSWORD_CONFIRMATION,\n   PASSWORD_REGEX,\n   passwordErrorFirstSolution,\n   passwordErrorSecondSolution,\n   passwordErrorThirdSolution,\n   setDocumentTitle,\n} from '../../helpers';\nimport {\n   Configs,\n   entropyPasswordFetch, GeetestCaptchaResponse,\n   GeetestCaptchaV4Response,\n   LanguageState,\n   resetCaptchaState,\n   RootState,\n   selectCaptchaResponse,\n   selectConfigs,\n   selectCurrentLanguage,\n   selectCurrentPasswordEntropy,\n   selectGeetestCaptchaSuccess,\n   selectRecaptchaSuccess,\n   selectSignUpError,\n   selectSignUpRequireVerification,\n   signUp,\n} from '../../modules';\n\ninterface ReduxProps {\n   configs: Configs;\n   requireVerification?: boolean;\n   loading?: boolean;\n   currentPasswordEntropy: number;\n   captcha_response?: string | GeetestCaptchaResponse | GeetestCaptchaV4Response;\n   reCaptchaSuccess: boolean;\n   geetestCaptchaSuccess: boolean;\n}\n\ninterface DispatchProps {\n   signUp: typeof signUp;\n   fetchCurrentPasswordEntropy: typeof entropyPasswordFetch;\n   resetCaptchaState: typeof resetCaptchaState;\n}\n\ninterface RouterProps {\n   location: {\n      search: string;\n   };\n   history: History;\n}\n\ninterface OwnProps {\n   signUpError: boolean;\n   i18n: LanguageState['lang'];\n}\n\ntype Props = ReduxProps & DispatchProps & RouterProps & IntlProps & OwnProps;\n\n// Adib Comment\n// export const extractRefID = (props: RouterProps) => new URLSearchParams(props.location.search).get('refid');\n\nclass SignUp extends React.Component<Props> {\n   public readonly state = {\n      showModal: false,\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      refId: '',\n      hasConfirmed: false,\n      emailError: '',\n      passwordError: '',\n      confirmationError: '',\n      usernameFocused: false,\n      emailFocused: false,\n      passwordFocused: false,\n      confirmPasswordFocused: false,\n      refIdFocused: false,\n      typingTimeout: 0,\n      passwordErrorFirstSolved: false,\n      passwordErrorSecondSolved: false,\n      passwordErrorThirdSolved: false,\n      passwordPopUp: false,\n   };\n\n   private myRef = React.createRef<HTMLInputElement>();\n   private passwordWrapper = React.createRef<HTMLDivElement>();\n\n   public componentDidMount() {\n      setDocumentTitle('Sign Up');\n      const localReferralCode = localStorage.getItem('referralCode');\n      const refId = this.extractRefID(this.props.location.search);\n      const referralCode = refId || localReferralCode || '';\n      this.setState({\n         refId: referralCode,\n      });\n      if (refId && refId !== localReferralCode) {\n         localStorage.setItem('referralCode', referralCode);\n      }\n\n      document.addEventListener('click', this.handleOutsideClick, false);\n   }\n\n   public componentDidUpdate(prev: Props) {\n      const { email } = this.state;\n\n      if (!prev.requireVerification && this.props.requireVerification) {\n         this.props.history.push('/email-verification', { email: email });\n      }\n   }\n\n   public componentWillUnmount() {\n      document.removeEventListener('click', this.handleOutsideClick, false);\n   }\n\n   public renderCaptcha = () => {\n      const { signUpError } = this.props;\n      const { confirmationError, emailError } = this.state;\n\n      const error = signUpError || confirmationError || emailError;\n\n      return <Captcha error={error} />;\n   };\n\n   public render() {\n      const {\n         configs,\n         loading,\n         currentPasswordEntropy,\n         captcha_response,\n         reCaptchaSuccess,\n         geetestCaptchaSuccess,\n      } = this.props;\n      const {\n         username,\n         email,\n         password,\n         confirmPassword,\n         refId,\n         hasConfirmed,\n         emailError,\n         passwordError,\n         confirmationError,\n         usernameFocused,\n         emailFocused,\n         passwordFocused,\n         confirmPasswordFocused,\n         refIdFocused,\n         passwordErrorFirstSolved,\n         passwordErrorSecondSolved,\n         passwordErrorThirdSolved,\n         passwordPopUp,\n      } = this.state;\n\n      const className = cx('pg-sign-up-screen__container', { loading });\n\n      return (\n         <div>\n            <div className={className}>\n               <SignUpForm\n                  labelSignIn={this.props.intl.formatMessage({ id: 'page.header.signIn' })}\n                  labelSignUp={this.props.intl.formatMessage({ id: 'page.header.signUp' })}\n                  emailLabel={this.props.intl.formatMessage({ id: 'page.header.signUp.email' })}\n                  passwordLabel={this.props.intl.formatMessage({ id: 'page.header.signUp.password' })}\n                  confirmPasswordLabel={this.props.intl.formatMessage({ id: 'page.header.signUp.confirmPassword' })}\n                  referalCodeLabel={this.props.intl.formatMessage({ id: 'page.header.signUp.referalCode' })}\n                  termsMessage={this.props.intl.formatMessage({ id: 'page.header.signUp.terms' })}\n                  refId={refId}\n                  handleChangeRefId={this.handleChangeRefId}\n                  isLoading={loading}\n                  onSignIn={this.handleSignIn}\n                  onSignUp={this.handleSignUp}\n                  username={username}\n                  handleChangeUsername={this.handleChangeUsername}\n                  email={email}\n                  handleChangeEmail={this.handleChangeEmail}\n                  password={password}\n                  handleChangePassword={this.handleChangePassword}\n                  confirmPassword={confirmPassword}\n                  handleChangeConfirmPassword={this.handleChangeConfirmPassword}\n                  hasConfirmed={hasConfirmed}\n                  clickCheckBox={this.handleCheckboxClick}\n                  validateForm={this.handleValidateForm}\n                  emailError={emailError}\n                  passwordError={passwordError}\n                  confirmationError={confirmationError}\n                  confirmPasswordFocused={confirmPasswordFocused}\n                  refIdFocused={refIdFocused}\n                  usernameFocused={usernameFocused}\n                  emailFocused={emailFocused}\n                  passwordFocused={passwordFocused}\n                  handleFocusUsername={this.handleFocusUsername}\n                  handleFocusEmail={this.handleFocusEmail}\n                  handleFocusPassword={this.handleFocusPassword}\n                  handleFocusConfirmPassword={this.handleFocusConfirmPassword}\n                  handleFocusRefId={this.handleFocusRefId}\n                  captchaType={configs.captcha_type}\n                  renderCaptcha={this.renderCaptcha()}\n                  reCaptchaSuccess={reCaptchaSuccess}\n                  geetestCaptchaSuccess={geetestCaptchaSuccess}\n                  captcha_response={captcha_response}\n                  currentPasswordEntropy={currentPasswordEntropy}\n                  minPasswordEntropy={configs.password_min_entropy}\n                  passwordErrorFirstSolved={passwordErrorFirstSolved}\n                  passwordErrorSecondSolved={passwordErrorSecondSolved}\n                  passwordErrorThirdSolved={passwordErrorThirdSolved}\n                  passwordPopUp={passwordPopUp}\n                  myRef={this.myRef}\n                  passwordWrapper={this.passwordWrapper}\n                  translate={this.translate}\n               />\n               <Modal\n                  show={this.state.showModal}\n                  header={this.renderModalHeader()}\n                  content={this.renderModalBody()}\n                  footer={this.renderModalFooter()}\n               />\n            </div>\n         </div>\n      );\n   }\n\n   private translate = (key: string) => this.props.intl.formatMessage({ id: key });\n\n   private handleOutsideClick = event => {\n      const wrapperElement = this.passwordWrapper.current;\n\n      if (wrapperElement && !wrapperElement.contains(event.target)) {\n         this.setState({\n            passwordPopUp: false,\n         });\n      }\n   };\n\n   private handleCheckboxClick = event => {\n      if (event) {\n         event.preventDefault();\n\n         this.setState({\n            hasConfirmed: !this.state.hasConfirmed,\n         });\n      }\n   };\n\n   private handleChangeUsername = (value: string) => {\n      this.setState({\n         username: value.replace(/[^A-Za-z0-9]+/g, '').toLowerCase(),\n      });\n   };\n\n   private handleChangeEmail = (value: string) => {\n      this.setState({\n         email: value,\n      });\n   };\n\n   private handleChangePassword = (value: string) => {\n      const { passwordErrorFirstSolved, passwordErrorSecondSolved, passwordErrorThirdSolved } = this.state;\n\n      if (passwordErrorFirstSolution(value) && !passwordErrorFirstSolved) {\n         this.setState({\n            passwordErrorFirstSolved: true,\n         });\n      } else if (!passwordErrorFirstSolution(value) && passwordErrorFirstSolved) {\n         this.setState({\n            passwordErrorFirstSolved: false,\n         });\n      }\n\n      if (passwordErrorSecondSolution(value) && !passwordErrorSecondSolved) {\n         this.setState({\n            passwordErrorSecondSolved: true,\n         });\n      } else if (!passwordErrorSecondSolution(value) && passwordErrorSecondSolved) {\n         this.setState({\n            passwordErrorSecondSolved: false,\n         });\n      }\n\n      if (passwordErrorThirdSolution(value) && !passwordErrorThirdSolved) {\n         this.setState({\n            passwordErrorThirdSolved: true,\n         });\n      } else if (!passwordErrorThirdSolution(value) && passwordErrorThirdSolved) {\n         this.setState({\n            passwordErrorThirdSolved: false,\n         });\n      }\n\n      if (this.state.typingTimeout) {\n         clearTimeout(this.state.typingTimeout);\n      }\n\n      this.setState({\n         password: value,\n         typingTimeout: setTimeout(() => {\n            this.props.fetchCurrentPasswordEntropy({ password: value });\n         }, 500),\n      });\n   };\n\n   private handleChangeConfirmPassword = (value: string) => {\n      this.setState({\n         confirmPassword: value,\n      });\n   };\n\n   private handleChangeRefId = (value: string) => {\n      this.setState({\n         refId: value,\n      });\n   };\n\n   private handleFocusUsername = () => {\n      this.setState({\n         usernameFocused: !this.state.usernameFocused,\n      });\n   };\n\n   private handleFocusEmail = () => {\n      this.setState({\n         emailFocused: !this.state.emailFocused,\n      });\n   };\n\n   private handleFocusPassword = () => {\n      this.setState({\n         passwordFocused: !this.state.passwordFocused,\n         passwordPopUp: !this.state.passwordPopUp,\n      });\n   };\n\n   private handleFocusConfirmPassword = () => {\n      this.setState({\n         confirmPasswordFocused: !this.state.confirmPasswordFocused,\n      });\n   };\n\n   private handleFocusRefId = () => {\n      this.setState({\n         refIdFocused: !this.state.refIdFocused,\n      });\n   };\n\n   private handleSignIn = () => {\n      this.props.history.push('/login');\n   };\n\n   private handleSignUp = () => {\n      const { configs, i18n, captcha_response } = this.props;\n      const {\n         username,\n         email,\n         password,\n         refId,\n      } = this.state;\n      let payload: any = {\n         email,\n         password,\n         data: JSON.stringify({\n            language: i18n,\n         }),\n      };\n\n      if (isUsernameEnabled()) {\n         payload = { ...payload, username };\n      }\n\n      if (refId) {\n         payload = { ...payload, refid: refId };\n      }\n\n      switch (configs.captcha_type) {\n         case 'recaptcha':\n         case 'geetest':\n            payload = { ...payload, captcha_response };\n\n            this.props.signUp(payload);\n            break;\n         default:\n            this.props.signUp(payload);\n            break;\n      }\n\n      this.props.resetCaptchaState();\n   };\n\n   private renderModalHeader = () => {\n      return (\n         <div className=\"pg-exchange-modal-submit-header\">\n            {this.props.intl.formatMessage({ id: 'page.header.signUp.modal.header' })}\n         </div>\n      );\n   };\n\n   private renderModalBody = () => {\n      return (\n         <div className=\"pg-exchange-modal-submit-body\">\n            <h2>\n               {this.props.intl.formatMessage({ id: 'page.header.signUp.modal.body' })}\n            </h2>\n         </div>\n      );\n   };\n\n   private renderModalFooter = () => {\n      return (\n         <div className=\"pg-exchange-modal-submit-footer\">\n            <Button\n               block={true}\n               onClick={this.closeModal}\n               size=\"lg\"\n               variant=\"primary\"\n            >\n               {this.props.intl.formatMessage({ id: 'page.header.signUp.modal.footer' })}\n            </Button>\n         </div>\n      );\n   };\n\n   private closeModal = () => {\n      this.setState({ showModal: false });\n      this.props.history.push('/login');\n   };\n\n   private extractRefID = (url: string) => new URLSearchParams(url).get('refid');\n\n   private handleValidateForm = () => {\n      const { email, password, confirmPassword } = this.state;\n      const isEmailValid = email.match(EMAIL_REGEX);\n      const isPasswordValid = password.match(PASSWORD_REGEX);\n      const isConfirmPasswordValid = password === confirmPassword;\n\n      if (!isEmailValid && !isPasswordValid) {\n         this.setState({\n            confirmationError: '',\n            emailError: this.props.intl.formatMessage({ id: ERROR_INVALID_EMAIL }),\n            passwordError: this.props.intl.formatMessage({ id: ERROR_INVALID_PASSWORD }),\n            hasConfirmed: false,\n         });\n\n         return;\n      }\n\n      if (!isEmailValid) {\n         this.setState({\n            confirmationError: '',\n            emailError: this.props.intl.formatMessage({ id: ERROR_INVALID_EMAIL }),\n            passwordError: '',\n            hasConfirmed: false,\n         });\n\n         return;\n      }\n\n      if (!isPasswordValid) {\n         this.setState({\n            confirmationError: '',\n            emailError: '',\n            passwordError: this.props.intl.formatMessage({ id: ERROR_INVALID_PASSWORD }),\n            hasConfirmed: false,\n         });\n\n         return;\n      }\n\n      if (!isConfirmPasswordValid) {\n         this.setState({\n            confirmationError: this.props.intl.formatMessage({ id: ERROR_PASSWORD_CONFIRMATION }),\n            emailError: '',\n            passwordError: '',\n            hasConfirmed: false,\n         });\n\n         return;\n      }\n   };\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   configs: selectConfigs(state),\n   i18n: selectCurrentLanguage(state),\n   requireVerification: selectSignUpRequireVerification(state),\n   signUpError: selectSignUpError(state),\n   currentPasswordEntropy: selectCurrentPasswordEntropy(state),\n   captcha_response: selectCaptchaResponse(state),\n   reCaptchaSuccess: selectRecaptchaSuccess(state),\n   geetestCaptchaSuccess: selectGeetestCaptchaSuccess(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n   dispatch => ({\n      signUp: credentials => dispatch(signUp(credentials)),\n      fetchCurrentPasswordEntropy: payload => dispatch(entropyPasswordFetch(payload)),\n      resetCaptchaState: () => dispatch(resetCaptchaState()),\n   });\n\nexport const SignUpScreen = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps),\n)(SignUp) as React.ComponentClass;\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useHistory } from 'react-router';\nimport { SignUpScreen } from '../../../screens/SignUpScreen';\nimport { Modal } from '../../components';\n\n\nconst SignUpMobileScreen: React.FC = () => {\n    const history = useHistory();\n    const intl = useIntl();\n\n    return <div>\n        <Modal\n            isOpen={true}\n            onClose={() => history.push('/trading')}\n            onBack={() => history.push('/login')}\n            backTitle={intl.formatMessage({ id: 'page.body.landing.header.button2' })}\n            title={intl.formatMessage({ id: 'page.body.landing.header.button3' })}>\n            <SignUpScreen/>\n        </Modal>\n    </div>;\n};\n\nexport {\n    SignUpMobileScreen,\n};\n","import * as React from 'react';\nimport {\n    useDepthFetch,\n    useMarketsFetch,\n    useMarketsTickersFetch,\n} from '../../../hooks';\nimport { CurrentMarketInfo, TradingTabs } from '../../components';\n\nconst TradingComponent: React.FC = () => {\n    useMarketsFetch();\n    useMarketsTickersFetch();\n    useDepthFetch();\n\n    return (\n        <div className=\"pg-trading-screen-mobile\">\n            <CurrentMarketInfo />\n            <TradingTabs />\n        </div>\n    );\n};\n\nexport const TradingScreenMobile = React.memo(TradingComponent);\n","// import { DEFAULT_WALLET } from 'constants';\n// import * as React from 'react';\n// import { useIntl } from 'react-intl';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useHistory, useParams } from 'react-router';\n// import {\n//     useCurrenciesFetch,\n//     useWalletsFetch,\n// } from '../../../hooks';\n// import {\n//     selectWallets,\n//     Wallet,\n//     walletsAddressFetch,\n//     walletsFetch,\n// } from '../../../modules/user/wallets';\n// import { Subheader, WalletDepositBody, WalletHeader } from '../../components';\n\n// const WalletDeposit: React.FC = () => {\n//     const dispatch = useDispatch();\n//     const intl = useIntl();\n//     const history = useHistory();\n//     const { currency = '' } = useParams<{ currency?: string }>();\n//     const wallets = useSelector(selectWallets) || [];\n\n//     useCurrenciesFetch();\n//     useWalletsFetch();\n\n//     const wallet: Wallet = wallets.find(item => item.currency === currency) || DEFAULT_WALLET;\n\n\n//    //  const handleGenerateAddress = () => {\n//    //      if (!wallet.deposit_address && wallets.length && wallet.type !== 'fiat') {\n//    //          dispatch(walletsAddressFetch({ currency }));\n//    //          dispatch(walletsFetch());\n//    //      }\n//    //  };\n\n//     return (\n//         <React.Fragment>\n//             <Subheader\n//                 title={intl.formatMessage({ id: 'page.body.wallets.tabs.deposit' })}\n//                 backTitle={intl.formatMessage({ id: 'page.body.wallets.balance' })}\n//                 onGoBack={() => history.push(`/wallets/${currency}/history`)}\n//             />\n//             <WalletHeader currency={wallet.currency} name={wallet.name}/>\n//             <WalletDepositBody\n//                 wallet={wallet}\n//                 handleGenerateAddress={handleGenerateAddress}\n//             />\n//         </React.Fragment>\n//     );\n// };\n\n// export {\n//     WalletDeposit,\n// };\n\nimport * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport { useWalletsFetch } from '../../../hooks';\nimport {\n   selectWallets,\n   Wallet,\n} from '../../../modules/user/wallets';\nimport { Subheader, WalletDepositBody, WalletHeader } from '../../components';\nimport { DEFAULT_WALLET } from '../../../constants';\n\nconst WalletDeposit: React.FC = () => {\n   const intl = useIntl();\n   const history = useHistory();\n   const { currency = '' } = useParams<{ currency?: string }>();\n   const wallets = useSelector(selectWallets) || [];\n\n   useWalletsFetch();\n\n   const wallet: Wallet = wallets.find(item => item.currency === currency) || DEFAULT_WALLET;\n\n   return (\n      <React.Fragment>\n         <Subheader\n            title={intl.formatMessage({ id: 'page.body.wallets.tabs.deposit' })}\n            backTitle={intl.formatMessage({ id: 'page.body.wallets.balance' })}\n            onGoBack={() => history.push(`/wallets/${currency}/history`)}\n         />\n         <WalletHeader currency={wallet.currency} name={wallet.name} />\n         <WalletDepositBody wallet={wallet} />\n      </React.Fragment>\n   );\n};\n\nexport {\n   WalletDeposit,\n};\n","import * as React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { useCurrenciesFetch, useDocumentTitle, useWalletsFetch } from '../../../hooks';\nimport { selectWallets } from '../../../modules/user/wallets';\nimport { EstimatedValueMobile, WalletItem } from '../../components';\n\nconst WalletsMobileScreen: React.FC = () => {\n    const wallets = useSelector(selectWallets) || [];\n    const history = useHistory();\n\n    useWalletsFetch();\n    useCurrenciesFetch();\n    useDocumentTitle('Wallets');\n\n    return <div>\n        <EstimatedValueMobile/>\n        {wallets.map((wallet, index) =>\n            <WalletItem\n                onClick={c => history.push(`/wallets/${c}/history`)}\n                wallet={wallet}\n                key={index}\n            />)}\n    </div>;\n};\n\nexport {\n    WalletsMobileScreen,\n};\n","import * as React from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport { useWalletsFetch } from '../../../hooks';\nimport { selectWallets } from '../../../modules/user/wallets';\nimport { Subheader, WalletBanner, WalletHeader, WalletWithdrawBody } from '../../components';\n\n\nconst defaultWallet = { name: '', currency: '', balance: '', type: '', address: '', fee: '' };\n\nconst WalletWithdraw: React.FC = () => {\n    const { currency = '' } = useParams();\n    const intl = useIntl();\n    const history = useHistory();\n    const wallets = useSelector(selectWallets) || [];\n    const wallet = wallets.find(item => item.currency === currency) || defaultWallet;\n\n    useWalletsFetch();\n\n    return (\n        <div className=\"cr-mobile-wallet-withdraw\">\n            <Subheader\n                title={intl.formatMessage({ id: 'page.body.wallets.tabs.withdraw' })}\n                backTitle={intl.formatMessage({ id: 'page.body.wallets.balance' })}\n                onGoBack={() => history.push(`/wallets/${currency}/history`)}\n            />\n            <WalletHeader currency={wallet.currency} name={wallet.name}/>\n            <WalletBanner wallet={wallet} />\n            <WalletWithdrawBody wallet={wallet}/>\n        </div>\n    );\n};\n\nexport {\n    WalletWithdraw,\n};\n","import * as React from 'react';\nimport {\n    injectIntl,\n} from 'react-intl';\nimport {\n    connect,\n    MapDispatchToPropsFunction,\n} from 'react-redux';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { TabPanel } from '../../components';\nimport { HistoryElement } from '../../containers/HistoryElement';\nimport { setDocumentTitle } from '../../helpers';\nimport {\n    fetchHistory,\n    marketsFetch,\n    resetHistory,\n    walletsFetch,\n} from '../../modules';\n\ninterface DispatchProps {\n    resetHistory: typeof resetHistory;\n    fetchMarkets: typeof marketsFetch;\n    fetchWallets: typeof walletsFetch;\n    fetchHistory: typeof fetchHistory;\n}\n\ntype Props = DispatchProps & IntlProps;\n\ninterface State {\n    tab: string;\n    currentTabIndex: number;\n}\n\nclass History extends React.Component<Props, State> {\n    public state = {\n        tab: 'deposits',\n        currentTabIndex: 0,\n    };\n\n    public tabMapping = ['deposits', 'withdraws', 'trades'];\n\n    public componentDidMount() {\n        setDocumentTitle('History');\n        this.props.fetchMarkets();\n        this.props.fetchWallets();\n    }\n\n    public componentWillUnmount() {\n        this.props.resetHistory();\n    }\n\n    public render() {\n        return (\n            <div className=\"pg-history-tab pg-container\">\n                <div className=\"pg-history-tab__tabs-content\">\n                    <TabPanel\n                        panels={this.renderTabs()}\n                        onTabChange={this.handleMakeRequest}\n                        currentTabIndex={this.state.currentTabIndex}\n                        onCurrentTabChange={this.onCurrentTabChange}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    private onCurrentTabChange = index => this.setState({ currentTabIndex: index });\n\n    private handleMakeRequest = (index: number) => {\n        if (this.state.tab === this.tabMapping[index]) {\n            return;\n        }\n        this.props.resetHistory();\n        this.setState({ tab: this.tabMapping[index] });\n    };\n\n    private renderTabs = () => {\n        const { tab } = this.state;\n\n        return [\n            {\n                content: tab === 'deposits' ? <HistoryElement type=\"deposits\" /> : null,\n                label: this.props.intl.formatMessage({id: 'page.body.history.deposit'}),\n            },\n            {\n                content: tab === 'withdraws' ? <HistoryElement type=\"withdraws\" /> : null,\n                label: this.props.intl.formatMessage({id: 'page.body.history.withdraw'}),\n            },\n            {\n                content: tab === 'trades' ? <HistoryElement type=\"trades\" /> : null,\n                label: this.props.intl.formatMessage({id: 'page.body.history.trade'}),\n            },\n        ];\n    };\n}\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n    fetchMarkets: () => dispatch(marketsFetch()),\n    fetchWallets: () => dispatch(walletsFetch()),\n    fetchHistory: payload => dispatch(fetchHistory(payload)),\n    resetHistory: () => dispatch(resetHistory()),\n});\n\nexport const HistoryScreen = compose(\n    injectIntl,\n    connect(null, mapDispatchToProps),\n)(History) as React.ComponentClass;\n","import * as React from 'react';\nimport { Link, RouteProps, withRouter } from 'react-router-dom';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport {\n   icLogoLight,\n   illusCard11,\n   illusCard12,\n   illusCard21,\n   illusCard22,\n   illusCard31,\n   illusCard32,\n   illusNews11,\n   illusNews12\n} from 'assets';\nimport { Hero, Learn, Download, Step, MyMarketsTable, Button } from 'components';\nimport { toggleColorTheme } from 'helpers';\n// import { LogoIcon } from '../../assets/images/LogoIcon';\n// import { MarketsTable } from '../../containers';\nimport {\n   RootState,\n   selectCurrentColorTheme,\n   selectUserLoggedIn,\n} from 'modules';\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\n\nconst FeaturesExchangeIcon = require('../../assets/images/landing/features/Exchange.svg');\nconst FeaturesTypesIcon = require('../../assets/images/landing/features/Types.svg');\nconst FeaturesCustomizeIcon = require('../../assets/images/landing/features/Customize.svg');\nconst FeaturesSecurityIcon = require('../../assets/images/landing/features/Security.svg');\nconst FeaturesCommunityIcon = require('../../assets/images/landing/features/Community.svg');\nconst FeaturesAPIIcon = require('../../assets/images/landing/features/API.svg');\n\n// const TelegramIcon = require('../../assets/images/landing/social/Telegram.svg');\n// const LinkedInIcon = require('../../assets/images/landing/social/LinkedIn.svg');\n// const TwitterIcon = require('../../assets/images/landing/social/Twitter.svg');\n// const YouTubeIcon = require('../../assets/images/landing/social/YouTube.svg');\n// const RedditIcon = require('../../assets/images/landing/social/Reddit.svg');\n// const FacebookIcon = require('../../assets/images/landing/social/Facebook.svg');\n// const MediumIcon = require('../../assets/images/landing/social/Medium.svg');\n// const CoinMarketIcon = require('../../assets/images/landing/social/CoinMarket.svg');\n\n\ninterface ReduxProps {\n   isLoggedIn: boolean;\n   colorTheme: string;\n}\n\ntype Props = ReduxProps & RouteProps & IntlProps;\n\nclass Landing extends React.Component<Props> {\n   public componentDidMount() {\n      if (this.props.colorTheme === 'light') {\n         toggleColorTheme('dark');\n      }\n   }\n\n   public componentWillReceiveProps(next: Props) {\n      if (next.colorTheme === 'light') {\n         toggleColorTheme('dark');\n      }\n   }\n\n   public componentWillUnmount() {\n      if (this.props.colorTheme === 'light') {\n         toggleColorTheme(this.props.colorTheme);\n      }\n   }\n\n   public renderMarketInfoBlock() {\n      return (\n         <div className=\"pg-landing-screen__market-info\">\n            <div className=\"pg-landing-screen__market-info__wrap\">\n               <div className=\"pg-landing-screen__market-info__wrap__title\">\n                  <h1>{this.translate('page.body.landing.marketInfo.title.text1')}</h1>\n                  <h1>{this.translate('page.body.landing.marketInfo.title.text2')}</h1>\n                  <Link to=\"/trading\" className=\"landing-button\">\n                     {this.translate('page.body.landing.marketInfo.title.button')}\n                  </Link>\n               </div>\n               {/* <MyMarketsTable /> */}\n            </div>\n         </div>\n      );\n   }\n\n   public renderPlatformInfoBlock() {\n      return (\n         <div className=\"pg-landing-screen__platform-info\">\n            <div className=\"pg-landing-screen__platform-info__wrap\">\n               <div className=\"pg-landing-screen__platform-info__wrap__item\">\n                  <span>{this.translate('page.body.landing.platformInfo.item.first.value')}</span>\n                  <span>{this.translate('page.body.landing.platformInfo.item.first.title')}</span>\n               </div>\n               <div className=\"pg-landing-screen__platform-info__wrap__item\">\n                  <span>{this.translate('page.body.landing.platformInfo.item.second.value')}</span>\n                  <span>{this.translate('page.body.landing.platformInfo.item.second.title')}</span>\n               </div>\n               <div className=\"pg-landing-screen__platform-info__wrap__item\">\n                  <span>{this.translate('page.body.landing.platformInfo.item.third.value')}</span>\n                  <span>{this.translate('page.body.landing.platformInfo.item.third.title')}</span>\n               </div>\n            </div>\n         </div>\n      );\n   }\n\n   public renderRegisterBlock() {\n      return (\n         <div className=\"pg-landing-screen__register\">\n            <div className=\"pg-landing-screen__register__wrap\">\n               <div className=\"pg-landing-screen__register__wrap__item\">\n                  <h1>{this.translate('page.body.landing.register.item.title')}</h1>\n                  <h2>{this.translate('page.body.landing.register.item.text')}</h2>\n                  <Link to=\"/signup\" className=\"landing-button\">\n                     {this.translate('page.body.landing.register.item.button')}\n                  </Link>\n               </div>\n            </div>\n         </div>\n      );\n   }\n\n   public renderFeaturesBlock() {\n      return (\n         <div className=\"pg-landing-screen__features\">\n            <div className=\"pg-landing-screen__features__wrap\">\n               <h1>{this.translate('page.body.landing.features.title')}</h1>\n               <div className=\"pg-landing-screen__features__content\">\n                  <div className=\"pg-landing-screen__features__content__row\">\n                     <div className=\"pg-landing-screen__features__content__row__item\">\n                        <img\n                           src={FeaturesExchangeIcon}\n                           alt={this.translate('page.body.landing.features.features.item1.title')}\n                        />\n                        <h2>{this.translate('page.body.landing.features.features.item1.title')}</h2>\n                        <span>{this.translate('page.body.landing.features.features.item1.text')}</span>\n                     </div>\n                     <div className=\"pg-landing-screen__features__content__row__item\">\n                        <img\n                           src={FeaturesTypesIcon}\n                           alt={this.translate('page.body.landing.features.features.item2.title')}\n                        />\n                        <h2>{this.translate('page.body.landing.features.features.item2.title')}</h2>\n                        <span>{this.translate('page.body.landing.features.features.item2.text')}</span>\n                     </div>\n                  </div>\n                  <div className=\"pg-landing-screen__features__content__row\">\n                     <div className=\"pg-landing-screen__features__content__row__item\">\n                        <img\n                           src={FeaturesCustomizeIcon}\n                           alt={this.translate('page.body.landing.features.features.item3.title')}\n                        />\n                        <h2>{this.translate('page.body.landing.features.features.item3.title')}</h2>\n                        <span>{this.translate('page.body.landing.features.features.item3.text')}</span>\n                     </div>\n                     <div className=\"pg-landing-screen__features__content__row__item\">\n                        <img\n                           src={FeaturesSecurityIcon}\n                           alt={this.translate('page.body.landing.features.features.item4.title')}\n                        />\n                        <h2>{this.translate('page.body.landing.features.features.item4.title')}</h2>\n                        <span>{this.translate('page.body.landing.features.features.item4.text')}</span>\n                     </div>\n                  </div>\n                  <div className=\"pg-landing-screen__features__content__row\">\n                     <div className=\"pg-landing-screen__features__content__row__item\">\n                        <img\n                           src={FeaturesCommunityIcon}\n                           alt={this.translate('page.body.landing.features.features.item5.title')}\n                        />\n                        <h2>{this.translate('page.body.landing.features.features.item5.title')}</h2>\n                        <span>{this.translate('page.body.landing.features.features.item5.text')}</span>\n                     </div>\n                     <div className=\"pg-landing-screen__features__content__row__item\">\n                        <img\n                           src={FeaturesAPIIcon}\n                           alt={this.translate('page.body.landing.features.features.item6.title')}\n                        />\n                        <h2>{this.translate('page.body.landing.features.features.item6.title')}</h2>\n                        <span>{this.translate('page.body.landing.features.features.item6.text')}</span>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      );\n   }\n\n   public renderTradeOnTheGoBlock() {\n      return (\n         <div className=\"pg-landing-screen__trade-on-the-go\">\n            <div className=\"pg-landing-screen__trade-on-the-go__wrap\">\n               <div className=\"pg-landing-screen__trade-on-the-go__wrap__image\" />\n               <div className=\"pg-landing-screen__trade-on-the-go__wrap__content\">\n                  <h1>{this.translate('page.body.landing.tradeOnTheGo.item.title')}</h1>\n                  <h2>{this.translate('page.body.landing.tradeOnTheGo.item.text1')}</h2>\n                  <h2>{this.translate('page.body.landing.tradeOnTheGo.item.text2')}</h2>\n                  <h2>{this.translate('page.body.landing.tradeOnTheGo.item.text3')}</h2>\n                  <Link to=\"/trading/\" className=\"landing-button\">\n                     {this.translate('page.body.landing.tradeOnTheGo.item.button')}\n                  </Link>\n               </div>\n            </div>\n         </div>\n      );\n   }\n\n   public renderStartTradingBlock() {\n      return (\n         <div className=\"pg-landing-screen__start-trading\">\n            <div className=\"pg-landing-screen__start-trading__wrap\">\n               <h1>{this.translate('page.body.landing.startTrading.title')}</h1>\n               <div className=\"pg-landing-screen__start-trading__wrap__content\">\n                  <Link to=\"/signup\" className=\"landing-button\">\n                     {this.translate('page.body.landing.startTrading.button1')}\n                  </Link>\n                  <Link to=\"/trading/\" className=\"landing-button landing-button--secondary\">\n                     {this.translate('page.body.landing.startTrading.button2')}\n                  </Link>\n               </div>\n            </div>\n         </div>\n      );\n   }\n\n   public renderPopular() {\n      const responsive = {\n         superLargeDesktop: {\n            // the naming can be any, depends on you.\n            breakpoint: { max: 4000, min: 3000 },\n            items: 5\n         },\n         desktop: {\n            breakpoint: { max: 3000, min: 1024 },\n            items: 3\n         },\n         tablet: {\n            breakpoint: { max: 1024, min: 640 },\n            items: 2\n         },\n         mobile: {\n            breakpoint: { max: 640, min: 0 },\n            items: 1\n         }\n      };\n      return (\n         <section className=\"relative bg-neutral7 dark:bg-shade1 py-16 lg:py-28 lg2:py-34 popular\">\n            <div className=\"w-full max-w-7xl mx-auto px-6 md:px-10 lg:px-20\">\n               <div className=\"max-w-[455px] mt-0 mb-12 md:mb-16 mx-auto md:text-center\">\n                  <div className=\"mb-5 text-4.5xl md:text-5xl font-dm font-bold tracking-custom1 md:tracking-custom leading-[1.2] md:leading-custom1\">\n                     Become a crypto trader in seconds\n                  </div>\n                  <div className=\"text-base text-neutral4\">We've got everything you need to start trading.</div>\n               </div>\n               <div className=\"-mx-3\">\n                  <Carousel responsive={responsive}>\n                     <div className=\"flex flex-col items-center py-12 px-8 rounded-20 bg-neutral8 dark:bg-neutral2 text-center hover:border-[0.09375rem] hover:shadow-card dark:shadow-input-dark h-auto mx-3 transition-all duration-300\">\n                        <div className=\"flex justify-center items-center h-40 mt-0 mb-8 mx-auto\">\n                           <img className=\"max-w-full max-h-full block pointer-events-none\" srcSet={`${illusCard12} 2x`} src={illusCard11} alt=\"\" />\n                        </div>\n                        <div className=\"mb-4 text-base font-medium\">Buy & Sell Crypto</div>\n                        <div className=\"mb-4 text-neutral4\">We realize ideas from simple to complex, everything becomes easy to use and reach the most potential customers.</div>\n                        <Button\n                           text=\"Buy crypto\"\n                           variant=\"outline\"\n                           size=\"normal\"\n                           width=\"noFull\"\n                        />\n                     </div>\n                     <div className=\"flex flex-col items-center py-12 px-8 rounded-20 bg-neutral8 dark:bg-neutral2 text-center hover:border-[0.09375rem] hover:shadow-card dark:shadow-input-dark h-auto mx-3 transition-all duration-300\">\n                        <div className=\"flex justify-center items-center h-40 mt-0 mb-8 mx-auto\">\n                           <img className=\"max-w-full max-h-full block pointer-events-none\" srcSet={`${illusCard22} 2x`} src={illusCard21} alt=\"\" />\n                        </div>\n                        <div className=\"mb-4 text-base font-medium\">Trade Assets</div>\n                        <div className=\"mb-4 text-neutral4\">We realize ideas from simple to complex, everything becomes easy to use and reach the most potential customers.</div>\n                        <Button\n                           text=\"Trade now\"\n                           variant=\"outline\"\n                           size=\"normal\"\n                           width=\"noFull\"\n                        />\n                     </div>\n                     <div className=\"flex flex-col items-center py-12 px-8 rounded-20 bg-neutral8 dark:bg-neutral2 text-center hover:border-[0.09375rem] hover:shadow-card dark:shadow-input-dark h-auto mx-3 transition-all duration-300\">\n                        <div className=\"flex justify-center items-center h-40 mt-0 mb-8 mx-auto\">\n                           <img className=\"max-w-full max-h-full block pointer-events-none\" srcSet={`${illusCard32} 2x`} src={illusCard31} alt=\"\" />\n                        </div>\n                        <div className=\"mb-4 text-base font-medium\">Learn Crypto</div>\n                        <div className=\"mb-4 text-neutral4\">We realize ideas from simple to complex, everything becomes easy to use and reach the most potential customers.</div>\n                        <Button\n                           text=\"Learn now\"\n                           variant=\"outline\"\n                           size=\"normal\"\n                           width=\"noFull\"\n                        />\n                     </div>\n                  </Carousel>\n               </div>\n               <div className=\"text-center mt-10 lg:mt-17\">\n                  <Button\n                     text=\"Contact us\"\n                     variant=\"outline\"\n                     className=\"md:w-2/6 lg:w-auto\"\n                  />\n               </div>\n            </div>\n         </section>\n      )\n   }\n\n   public renderNews() {\n      const news = {\n         superLargeDesktop: {\n            // the naming can be any, depends on you.\n            breakpoint: { max: 4000, min: 3000 },\n            items: 1\n         },\n         desktop: {\n            breakpoint: { max: 3000, min: 1024 },\n            items: 1\n         },\n         tablet: {\n            breakpoint: { max: 1024, min: 640 },\n            items: 1\n         },\n         mobile: {\n            breakpoint: { max: 640, min: 0 },\n            items: 1\n         },\n      };\n      return (\n         <section className=\"relative bg-neutral7 dark:bg-shade1 py-16 lg:py-28 lg2:py-34 mb-16 lg:mb-28 lg2:mb-34\">\n            <div className=\"w-full max-w-5.5xl mx-auto px-6 md:px-10 lg:px-20\">\n               <div className=\"max-w-xl mt-0 mb-12 md:mb-16 lg:mb-20 mx-auto text-center\">\n                  <img className=\"mx-auto mb-4\" src={icLogoLight} alt=\"Logo\" />\n                  <div className=\"mb-5 text-4.5xl md:text-5xl font-dm font-bold tracking-custom1 md:tracking-custom leading-[1.2] md:leading-custom1\">\n                     Stay in the know on crypto with Digiasset\n                  </div>\n                  <div className=\"text-base text-neutral4\">\n                     A creative agency that lead and inspire.\n                  </div>\n               </div>\n               <Carousel responsive={news}>\n                  <div className=\"relative flex flex-col lg:flex-row items-center min-h-[544px] lg:py-20 lg:px-24 lg:rounded-3xl lg:bg-neutral8 lg:dark:bg-neutral2 lg:shadow-card2\">\n                     <div className=\"w-full lg:w-1/2 order-2 lg:order-1\">\n                        <div className=\"text-xs mb-4 uppercase font-bold text-neutral4\">\n                           Crypto News\n                        </div>\n                        <div className=\"text-2xl mb-5 leading-custom2 tracking-custom1\">\n                           Be Part of our Global Community\n                        </div>\n                        <div className=\"mb-24 text-base text-neutral4\">\n                           Let’s stay in touch. Join our communities to keep up with the Digiasset team and our traders from across the world.\n                        </div>\n                        <Button\n                           text=\"Join now\"\n                           variant=\"outline\"\n                           size=\"normal\"\n                           width=\"noFull\"\n                        />\n                     </div>\n                     <div className=\"w-full lg:w-1/2 order-1 lg:order-2\">\n                        <div className=\"w-full overflow-visible\">\n                           <img className=\"pointer-events-none object-cover w-full h-full scale-[1.3] -translate-x-10 lg:translate-x-10\" srcSet={`${illusNews12} 2x`} src={illusNews11} alt=\"\" />\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"relative flex flex-col lg:flex-row items-center min-h-[544px] lg:py-20 lg:px-24 lg:rounded-3xl lg:bg-neutral8 lg:dark:bg-neutral2 lg:shadow-card2\">\n                     <div className=\"w-full lg:w-1/2 order-2 lg:order-1\">\n                        <div className=\"text-xs mb-4 uppercase font-bold text-neutral4\">\n                           Crypto News\n                        </div>\n                        <div className=\"text-2xl mb-5 leading-custom2 tracking-custom1\">\n                           Be Part of our Global Community\n                        </div>\n                        <div className=\"mb-24 text-base text-neutral4\">\n                           Let’s stay in touch. Join our communities to keep up with the Digiasset team and our traders from across the world.\n                        </div>\n                        <Button\n                           text=\"Join now\"\n                           variant=\"outline\"\n                           size=\"normal\"\n                           width=\"noFull\"\n                        />\n                     </div>\n                     <div className=\"w-full lg:w-1/2 order-1 lg:order-2\">\n                        <div className=\"w-full overflow-visible\">\n                           <img className=\"pointer-events-none object-cover w-full h-full scale-[1.3] -translate-x-10 lg:translate-x-10\" srcSet={`${illusNews12} 2x`} src={illusNews11} alt=\"\" />\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"relative flex flex-col lg:flex-row items-center min-h-[544px] lg:py-20 lg:px-24 lg:rounded-3xl lg:bg-neutral8 lg:dark:bg-neutral2 lg:shadow-card2\">\n                     <div className=\"w-full lg:w-1/2 order-2 lg:order-1\">\n                        <div className=\"text-xs mb-4 uppercase font-bold text-neutral4\">\n                           Crypto News\n                        </div>\n                        <div className=\"text-2xl mb-5 leading-custom2 tracking-custom1\">\n                           Be Part of our Global Community\n                        </div>\n                        <div className=\"mb-24 text-base text-neutral4\">\n                           Let’s stay in touch. Join our communities to keep up with the Digiasset team and our traders from across the world.\n                        </div>\n                        <Button\n                           text=\"Join now\"\n                           variant=\"outline\"\n                           size=\"normal\"\n                           width=\"noFull\"\n                        />\n                     </div>\n                     <div className=\"w-full lg:w-1/2 order-1 lg:order-2\">\n                        <div className=\"w-full overflow-visible\">\n                           <img className=\"pointer-events-none object-cover w-full h-full scale-[1.3] -translate-x-10 lg:translate-x-10\" srcSet={`${illusNews12} 2x`} src={illusNews11} alt=\"\" />\n                        </div>\n                     </div>\n                  </div>\n               </Carousel>\n            </div>\n         </section>\n      )\n   }\n\n   public renderMain() {\n      return (\n         <>\n            <Hero />\n            <Learn />\n            <MyMarketsTable />\n            {this.renderPopular()}\n            <Download />\n            {this.renderNews()}\n            <Step />\n         </>\n      )\n   }\n\n   public render() {\n      return (\n         <>\n            {this.renderMain()}\n            {/* {this.renderMarketInfoBlock()}\n                {this.renderPlatformInfoBlock()}\n                {this.renderRegisterBlock()}\n                {this.renderFeaturesBlock()}\n                {this.renderTradeOnTheGoBlock()}\n                {this.renderStartTradingBlock()} */}\n         </>\n      );\n   }\n\n   // private handleScrollTop = () => {\n   //    window.scrollTo({ top: 0, behavior: 'smooth' });\n   // };\n\n   private translate = (key: string) => this.props.intl.formatMessage({ id: key });\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   isLoggedIn: selectUserLoggedIn(state),\n   colorTheme: selectCurrentColorTheme(state),\n});\n\nexport const LandingScreen = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, null),\n)(Landing) as React.ComponentClass;\n","import * as React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport {\n    connect,\n    MapDispatchToPropsFunction,\n    MapStateToProps,\n} from 'react-redux';\nimport { RouterProps, withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport {\n    RootState,\n    selectBlocklistAccessLoading,\n    selectBlocklistAccessSuccess,\n    sendAccessToken,\n} from '../../modules';\n\ninterface LocationProps extends RouterProps {\n    location: {\n        search: string;\n    };\n}\n\ninterface MagicLinkState {\n    token: string;\n}\n\ninterface ReduxProps {\n    success: boolean;\n    loading: boolean;\n}\n\ninterface DispatchProps {\n    sendAccessToken: typeof sendAccessToken;\n}\n\nexport type MagicLinkProps = LocationProps & ReduxProps & DispatchProps;\n\nclass MagicLinkScreen extends React.Component<MagicLinkProps, MagicLinkState> {\n    constructor(props: MagicLinkProps) {\n        super(props);\n\n        this.state = {\n            token: '',\n        };\n    }\n\n    public componentDidMount() {\n        const urlParams = new URLSearchParams(this.props.location.search);\n        const token = urlParams.get('token') as string;\n\n        if (token) {\n            this.props.sendAccessToken({ whitelink_token: token });\n        } else {\n            this.props.history.replace('/');\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: MagicLinkProps) {\n        if (!this.props.success && nextProps.success) {\n            this.props.history.replace('/');\n        }\n    }\n\n    public render() {\n        const { loading } = this.props;\n\n        if (loading) {\n            return (\n                <div className=\"pg-loader-container\">\n                    <Spinner animation=\"border\" variant=\"primary\" />\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n    success: selectBlocklistAccessLoading(state),\n    loading: selectBlocklistAccessSuccess(state),\n});\n\nconst mapDispatchProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n    sendAccessToken: payload => dispatch(sendAccessToken(payload)),\n});\n\nexport const MagicLink = compose(\n    withRouter,\n    connect(mapStateToProps, mapDispatchProps),\n)(MagicLinkScreen) as React.ComponentClass;\n","import * as React from 'react';\nimport {\n    FormattedMessage,\n    injectIntl,\n} from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { TabPanel } from '../../components';\nimport { OrdersElement } from '../../containers/OrdersElement';\nimport { setDocumentTitle } from '../../helpers';\nimport {\n    marketsFetch,\n    ordersCancelAllFetch,\n    resetOrdersHistory,\n    RootState,\n    selectOrdersHistory,\n} from '../../modules';\nimport { OrderCommon } from '../../modules/types';\n\ninterface ReduxProps {\n    list: OrderCommon[];\n}\n\ninterface DispatchProps {\n    marketsFetch: typeof marketsFetch;\n    ordersCancelAll: typeof ordersCancelAllFetch;\n    resetOrdersHistory: typeof resetOrdersHistory;\n}\n\ntype Props = ReduxProps & DispatchProps & IntlProps;\n\ninterface State {\n    tab: string;\n    currentTabIndex: number;\n}\n\nclass Orders extends React.PureComponent<Props, State> {\n    public state = { tab: 'open', currentTabIndex: 0};\n\n    public tabMapping = ['open', 'all'];\n\n    public componentDidMount() {\n        setDocumentTitle('Orders');\n        this.props.marketsFetch();\n    }\n\n    public componentWillUnmount() {\n        this.props.resetOrdersHistory();\n    }\n\n    public render() {\n        const cancelAll = this.props.list.length ? (\n            <React.Fragment>\n                <span onClick={this.handleCancelAll}>\n                    <FormattedMessage id=\"page.body.openOrders.header.button.cancelAll\" />\n                    <span className=\"pg-orders-tab__close\" />\n                </span>\n            </React.Fragment>\n        ) : null;\n\n        return (\n            <div className=\"pg-orders-tab pg-container\">\n                <div className=\"pg-orders-tab__tabs-content\">\n                    <TabPanel\n                        panels={this.renderTabs()}\n                        onTabChange={this.handleMakeRequest}\n                        optionalHead={cancelAll}\n                        currentTabIndex={this.state.currentTabIndex}\n                        onCurrentTabChange={this.onCurrentTabChange}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    private onCurrentTabChange = index => this.setState({ currentTabIndex: index });\n\n    private handleMakeRequest = (index: number) => {\n        this.renderTabs();\n        if (this.state.tab === this.tabMapping[index]) {\n            return;\n        }\n        this.props.resetOrdersHistory();\n        this.setState({ tab: this.tabMapping[index] });\n    };\n\n    private renderTabs = () => {\n        const { tab } = this.state;\n\n        return [\n            {\n                content: tab === 'open' ? <OrdersElement type=\"open\"/> : null,\n                label: this.props.intl.formatMessage({ id: 'page.body.openOrders.tab.open'}),\n            },\n            {\n                content: tab === 'all' ? <OrdersElement type=\"all\" /> : null,\n                label: this.props.intl.formatMessage({ id: 'page.body.openOrders.tab.all'}),\n            },\n        ];\n    };\n\n    private handleCancelAll = () => this.props.ordersCancelAll();\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    list: selectOrdersHistory(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n    dispatch => ({\n        marketsFetch: () => dispatch(marketsFetch()),\n        ordersCancelAll: () => dispatch(ordersCancelAllFetch()),\n        resetOrdersHistory: () => dispatch(resetOrdersHistory()),\n    });\n\nexport const OrdersTabScreen = compose(\n    injectIntl,\n    connect(mapStateToProps, mapDispatchToProps),\n)(Orders) as React.ComponentClass;\n","import * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { ProfileApiKeys, ProfileVerification } from '../../containers';\nimport { ProfileAccountActivity } from '../../containers/ProfileAccountActivity';\nimport { ProfileAuthDetails } from '../../containers/ProfileAuthDetails';\nimport { ReferralProgram } from '../../containers/ReferralProgram';\nimport { setDocumentTitle } from '../../helpers';\n\nclass ProfileComponent extends React.Component<RouterProps, IntlProps> {\n\n    public componentDidMount() {\n        setDocumentTitle('Profile');\n    }\n\n    public goBack = () => {\n        this.props.history.goBack();\n    };\n\n    public render() {\n        return (\n            <div className=\"container pg-profile-page\">\n                <div className=\"pg-profile-page__details\">\n                    <div className=\"row pg-profile-page-header pg-profile-page-header-first\">\n                        <h3 className=\"col-12\">\n                            <FormattedMessage id=\"page.body.profile.header.account\"/>\n                        </h3>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-6 mx-0\">\n                            <div className=\"row col-12 mx-0\">\n                                <ProfileAuthDetails/>\n                                <ReferralProgram/>\n                            </div>\n                        </div>\n                        <div className=\"col-12 col-md-6\">\n                            <ProfileVerification/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <ProfileApiKeys/>\n                    </div>\n                    <div className=\"col-12\">\n                        <ProfileAccountActivity/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport const ProfileScreen = compose(\n    injectIntl,\n    withRouter,\n)(ProfileComponent) as React.ComponentClass;\n","import * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { incrementalOrderBook } from 'api';\nimport { Decimal, GridChildInterface, GridItem } from 'components';\nimport {\n   Charts,\n   MarketsComponent,\n   OpenOrdersComponent,\n   OrderBook,\n   OrderComponent,\n   RecentTrades,\n   ToolBar,\n} from 'containers';\nimport { getUrlPart, setDocumentTitle } from 'helpers';\nimport {\n   RootState,\n   selectCurrentMarket,\n   selectMarketTickers,\n   selectUserLoggedIn,\n   setCurrentMarket,\n   setCurrentPrice,\n   Ticker,\n} from 'modules';\nimport { GridLayoutState, saveLayouts, selectGridLayoutState } from '../../modules/public/gridLayout';\nimport { Market, marketsFetch, selectMarkets } from '../../modules/public/markets';\nimport { depthFetch } from '../../modules/public/orderBook';\n\nconst { WidthProvider, Responsive } = require('react-grid-layout');\n\nconst breakpoints = {\n   lg: 1200,\n   md: 996,\n   sm: 768,\n   xs: 480,\n   xxs: 0,\n};\n\nconst cols = {\n   lg: 24,\n   md: 24,\n   sm: 12,\n   xs: 12,\n   xxs: 12,\n};\n\ninterface ReduxProps {\n   isLoggedIn: boolean;\n   currentMarket: Market | undefined;\n   markets: Market[];\n   rgl: GridLayoutState;\n   tickers: {\n      [pair: string]: Ticker,\n   };\n}\n\ninterface DispatchProps {\n   depthFetch: typeof depthFetch;\n   marketsFetch: typeof marketsFetch;\n   setCurrentPrice: typeof setCurrentPrice;\n   setCurrentMarket: typeof setCurrentMarket;\n   saveLayouts: typeof saveLayouts;\n}\n\ninterface StateProps {\n   orderComponentResized: number;\n   orderBookComponentResized: number;\n}\n\nconst ReactGridLayout = WidthProvider(Responsive);\ntype Props = DispatchProps & ReduxProps & RouteComponentProps & IntlProps;\n\nconst TradingWrapper = props => {\n   const { orderComponentResized, orderBookComponentResized, layouts, handleResize, handeDrag } = props;\n   const children = React.useMemo(() => {\n      const data = [\n         {\n            i: 1,\n            render: () => <OrderComponent size={orderComponentResized} />,\n         },\n         {\n            i: 2,\n            render: () => <Charts />,\n         },\n         {\n            i: 3,\n            render: () => <OrderBook size={orderBookComponentResized} />,\n         },\n         {\n            i: 4,\n            render: () => <OpenOrdersComponent />,\n         },\n         {\n            i: 5,\n            render: () => <RecentTrades />,\n         },\n         {\n            i: 6,\n            render: () => <MarketsComponent />,\n         },\n      ];\n\n      return data.map((child: GridChildInterface) => (\n         <div key={child.i}>\n            <GridItem>{child.render ? child.render() : `Child Body ${child.i}`}</GridItem>\n         </div>\n      ));\n   }, [orderComponentResized, orderBookComponentResized]);\n\n   return (\n      <ReactGridLayout\n         breakpoints={breakpoints}\n         cols={cols}\n         draggableHandle=\".cr-table-header__content, .pg-trading-screen__tab-panel, .draggable-container\"\n         rowHeight={14}\n         layouts={layouts}\n         onLayoutChange={() => { return; }}\n         margin={[5, 5]}\n         onResize={handleResize}\n         onDrag={handeDrag}\n      >\n         {children}\n      </ReactGridLayout>\n   );\n};\n\nclass Trading extends React.Component<Props, StateProps> {\n   public readonly state = {\n      orderComponentResized: 5,\n      orderBookComponentResized: 5,\n   };\n\n   public componentDidMount() {\n      setDocumentTitle('Trading');\n      const { markets, currentMarket } = this.props;\n\n      if (markets.length < 1) {\n         this.props.marketsFetch();\n      }\n\n      if (currentMarket && !incrementalOrderBook()) {\n         this.props.depthFetch(currentMarket);\n      }\n   }\n\n   public componentWillUnmount() {\n      this.props.setCurrentPrice(undefined);\n   }\n\n   public componentWillReceiveProps(nextProps) {\n      const {\n         history,\n         markets,\n      } = this.props;\n\n      if (markets.length !== nextProps.markets.length) {\n         this.setMarketFromUrlIfExists(nextProps.markets);\n      }\n\n      if (nextProps.currentMarket) {\n         const marketFromUrl = history.location.pathname.split('/');\n         const marketNotMatched = nextProps.currentMarket.id !== marketFromUrl[marketFromUrl.length - 1];\n         if (marketNotMatched) {\n            history.replace(`/trading/${nextProps.currentMarket.id}`);\n\n            if (!incrementalOrderBook()) {\n               this.props.depthFetch(nextProps.currentMarket);\n            }\n         }\n      }\n\n      if (nextProps.currentMarket && nextProps.tickers) {\n         this.setTradingTitle(nextProps.currentMarket, nextProps.tickers);\n      }\n   }\n\n   public render() {\n      const { orderComponentResized, orderBookComponentResized } = this.state;\n      const { rgl } = this.props;\n      return (\n         <>\n            {/* <OrderComponent /> */}\n            <div className=\"hidden\">\n               <ToolBar />\n            </div>\n            <div data-react-toolbox=\"grid\" className=\"cr-grid !hidden\">\n               <div className=\"cr-grid__grid-wrapper\">\n                  <TradingWrapper\n                     layouts={rgl.layouts}\n                     orderComponentResized={orderComponentResized}\n                     orderBookComponentResized={orderBookComponentResized}\n                     handleResize={this.handleResize}\n                     handeDrag={this.handeDrag}\n                  />\n               </div>\n            </div>\n         </>\n      );\n   }\n\n   private setMarketFromUrlIfExists = (markets: Market[]): void => {\n      const urlMarket: string = getUrlPart(2, window.location.pathname);\n      const market: Market | undefined = markets.find(item => item.id === urlMarket);\n\n      if (market) {\n         this.props.setCurrentMarket(market);\n      }\n   };\n\n   private setTradingTitle = (market: Market, tickers: ReduxProps['tickers']) => {\n      const tickerPrice = tickers[market.id] ? tickers[market.id].last : '0.0';\n      document.title = `${Decimal.format(tickerPrice, market.price_precision, ',')} ${market.name}`;\n   };\n\n   private handleResize = (layout, oldItem, newItem) => {\n      switch (oldItem.i) {\n         case '1':\n            this.setState({\n               orderComponentResized: newItem.w,\n            });\n            break;\n         case '3':\n            this.setState({\n               orderBookComponentResized: newItem.w,\n            });\n            break;\n         default:\n            break;\n      }\n   };\n\n   private handeDrag = (layout, oldItem, newItem) => {\n      for (const elem of layout) {\n         if (elem.y < 0) {\n            elem.y = 0;\n         }\n      }\n   };\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   currentMarket: selectCurrentMarket(state),\n   markets: selectMarkets(state),\n   rgl: selectGridLayoutState(state),\n   tickers: selectMarketTickers(state),\n   isLoggedIn: selectUserLoggedIn(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   marketsFetch: () => dispatch(marketsFetch()),\n   depthFetch: payload => dispatch(depthFetch(payload)),\n   setCurrentPrice: payload => dispatch(setCurrentPrice(payload)),\n   setCurrentMarket: payload => dispatch(setCurrentMarket(payload)),\n   saveLayouts: payload => dispatch(saveLayouts(payload))\n});\n\nexport const TradingScreen = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps),\n)(Trading) as React.ComponentClass;\n","import * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport {\n   connect,\n   MapDispatchToPropsFunction,\n   MapStateToProps,\n} from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { languages } from '../../api';\nimport {\n   changeLanguage,\n   RootState,\n   selectEmailVerified,\n   verificationFetch,\n} from '../../modules';\nimport { CommonError } from '../../modules/types';\n\ninterface DispatchProps {\n   verification: typeof verificationFetch;\n   changeLanguage: typeof changeLanguage;\n}\n\ninterface ReduxProps {\n   isEmailVerified?: boolean;\n   error?: CommonError;\n}\n\nexport interface RouterProps {\n   location: {\n      search: string;\n   };\n}\n\ntype Props = DispatchProps & RouterProps & ReduxProps;\n\nexport const extractToken = (props: RouterProps) => new URLSearchParams(props.location.search).get('confirmation_token');\nexport const extractLang = (props: RouterProps) => new URLSearchParams(props.location.search).get('lang');\n\nclass Verification extends React.Component<Props, IntlProps> {\n   public componentDidMount() {\n      //   const token = extractToken(this.props);\n      const lang = extractLang(this.props);\n\n      //   if (token) {\n      //       this.props.verification({ token });\n      //   }\n\n      if (lang && languages.includes(lang.toLowerCase())) {\n         this.props.changeLanguage(lang.toLowerCase());\n      }\n   }\n\n   public render() {\n      return (\n         <Redirect to={'/login'} />\n      );\n   }\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   isEmailVerified: selectEmailVerified(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n   dispatch => ({\n      verification: data => dispatch(verificationFetch(data)),\n      changeLanguage: lang => dispatch(changeLanguage(lang)),\n   });\n\nexport const VerificationScreen = compose(\n   injectIntl,\n   connect(mapStateToProps, mapDispatchToProps),\n)(Verification) as React.ComponentClass;\n","import * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { IntlProps } from '../../../';\nimport { formatWithSeparators } from '../../../components';\nimport { VALUATION_PRIMARY_CURRENCY, VALUATION_SECONDARY_CURRENCY } from '../../../constants';\nimport { estimateUnitValue, estimateValue } from '../../../helpers/estimateValue';\nimport {\n    currenciesFetch,\n    Currency,\n    marketsFetch,\n    marketsTickersFetch,\n    RootState,\n    selectCurrencies,\n    selectMarkets,\n    selectMarketTickers,\n    selectUserLoggedIn,\n    Wallet,\n} from '../../../modules';\nimport { Market, Ticker } from '../../../modules/public/markets';\n\ninterface EstimatedValueProps {\n    wallets: Wallet[];\n}\n\ninterface ReduxProps {\n    currencies: Currency[];\n    markets: Market[];\n    tickers: {\n        [key: string]: Ticker,\n    };\n    userLoggedIn: boolean;\n}\n\ninterface DispatchProps {\n    fetchCurrencies: typeof currenciesFetch;\n    fetchMarkets: typeof marketsFetch;\n    fetchTickers: typeof marketsTickersFetch;\n}\n\ntype Props = DispatchProps & ReduxProps & EstimatedValueProps & IntlProps;\n\nclass EstimatedValueContainer extends React.Component<Props> {\n    public componentDidMount(): void {\n        const {\n            currencies,\n            fetchCurrencies,\n            fetchMarkets,\n            fetchTickers,\n            markets,\n            tickers,\n        } = this.props;\n\n        if (!markets.length) {\n            fetchMarkets();\n        }\n\n        if (!tickers.length) {\n            fetchTickers();\n        }\n\n        if (!currencies.length) {\n            fetchCurrencies();\n        }\n    }\n\n    public componentWillReceiveProps(next: Props) {\n        const {\n            currencies,\n            fetchCurrencies,\n            fetchMarkets,\n            fetchTickers,\n            markets,\n            tickers,\n        } = this.props;\n\n        if (!markets.length && next.markets.length) {\n            fetchMarkets();\n        }\n\n        if (!tickers.length && next.tickers.length) {\n            fetchTickers();\n        }\n\n        if (!currencies.length && next.currencies.length) {\n            fetchCurrencies();\n        }\n    }\n\n    public render(): React.ReactNode {\n        const {\n            currencies,\n            markets,\n            tickers,\n            wallets,\n        } = this.props;\n        const estimatedValue = estimateValue(VALUATION_PRIMARY_CURRENCY, currencies, wallets, markets, tickers);\n\n        return (\n            <div className=\"pg-estimated-value\">\n                <div className=\"pg-estimated-value__container\">\n                    {this.translate('page.body.wallets.estimated_value')}\n                    <span className=\"value-container\">\n                        <span className=\"value\">\n                            {formatWithSeparators(estimatedValue, ',')}\n                        </span>\n                        <span className=\"value-sign\">{VALUATION_PRIMARY_CURRENCY.toUpperCase()}</span>\n                    </span>\n                    {VALUATION_SECONDARY_CURRENCY && this.renderSecondaryCurrencyValuation(estimatedValue)}\n                </div>\n            </div>\n        );\n    }\n\n    public translate = (key: string) => this.props.intl.formatMessage({id: key});\n\n    private renderSecondaryCurrencyValuation = (estimatedValue: string) => {\n        const {\n            currencies,\n            markets,\n            tickers,\n        } = this.props;\n        const estimatedValueSecondary = estimateUnitValue(VALUATION_SECONDARY_CURRENCY, VALUATION_PRIMARY_CURRENCY, +estimatedValue, currencies, markets, tickers);\n\n        return (\n            <span className=\"value-container\">\n                <span className=\"value\">\n                    {formatWithSeparators(estimatedValueSecondary, ',')}\n                </span>\n                <span className=\"value-sign\">{VALUATION_SECONDARY_CURRENCY.toUpperCase()}</span>\n            </span>\n        );\n    };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n    currencies: selectCurrencies(state),\n    markets: selectMarkets(state),\n    tickers: selectMarketTickers(state),\n    userLoggedIn: selectUserLoggedIn(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n    fetchCurrencies: () => dispatch(currenciesFetch()),\n    fetchMarkets: () => dispatch(marketsFetch()),\n    fetchTickers: () => dispatch(marketsTickersFetch()),\n});\n\n// tslint:disable-next-line:no-any\nexport const EstimatedValue = injectIntl(connect(mapStateToProps, mapDispatchToProps)(EstimatedValueContainer)) as any;\n","import * as React from 'react';\n\n\nexport const FailIcon = () => {\n    return (\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M1.00015 1L8.99993 9.00002\" stroke=\"#737F92\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n            <path d=\"M8.99988 1L1.0001 9.00002\" stroke=\"#737F92\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n        </svg>\n\n    );\n};\n","import * as React from 'react';\n\n\nexport const SucceedIcon = () => {\n    return (\n        <svg width=\"10\" height=\"8\" viewBox=\"0 0 10 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n                d=\"M9 1L3.68517 7L1 4.47371\"\n                stroke=\"#737F92\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n            />\n        </svg>\n    );\n};\n","import * as React from 'react';\nimport {\n   injectIntl,\n} from 'react-intl';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { IntlProps } from '../../';\nimport { History, Pagination } from '../../components';\nimport { Decimal } from '../../components/Decimal';\nimport { localeDate } from '../../helpers';\nimport {\n   currenciesFetch,\n   Currency,\n   fetchHistory,\n   resetHistory,\n   RootState,\n   selectCurrencies,\n   selectCurrentPage,\n   selectFirstElemIndex,\n   selectHistory,\n   selectHistoryLoading,\n   selectLastElemIndex,\n   selectNextPageExists,\n   selectWallets,\n   Wallet,\n   WalletHistoryList,\n} from '../../modules';\nimport { FailIcon } from './FailIcon';\nimport { SucceedIcon } from './SucceedIcon';\n\nexport interface HistoryProps {\n   label: string;\n   type: string;\n   currency: string;\n}\n\nexport interface ReduxProps {\n   currencies: Currency[];\n   list: WalletHistoryList;\n   wallets: Wallet[];\n   fetching: boolean;\n   page: number;\n   firstElemIndex: number;\n   lastElemIndex: number;\n   nextPageExists: boolean;\n}\n\ninterface DispatchProps {\n   fetchCurrencies: typeof currenciesFetch;\n   fetchHistory: typeof fetchHistory;\n   resetHistory: typeof resetHistory;\n}\n\nexport type Props = HistoryProps & ReduxProps & DispatchProps & IntlProps;\n\nexport class WalletTable extends React.Component<Props> {\n   public componentDidMount() {\n      const {\n         currencies,\n         currency,\n         type,\n      } = this.props;\n      this.props.fetchHistory({ page: 0, currency, type, limit: 6 });\n\n      if (!currencies.length) {\n         this.props.fetchCurrencies();\n      }\n   }\n\n   public componentWillReceiveProps(nextProps) {\n      const {\n         currencies,\n         currency,\n         type,\n      } = this.props;\n      if (nextProps.currency !== currency || nextProps.type !== type) {\n         this.props.resetHistory();\n         this.props.fetchHistory({ page: 0, currency: nextProps.currency, type, limit: 6 });\n      }\n\n      if (!currencies.length && nextProps.currencies.length) {\n         this.props.fetchCurrencies();\n      }\n   }\n\n   public componentWillUnmount() {\n      this.props.resetHistory();\n   }\n\n   public render() {\n      const { label, list, firstElemIndex, lastElemIndex, page, nextPageExists } = this.props;\n\n      if (!list.length) {\n         return null;\n      }\n\n      return (\n         <div className=\"pg-history-elem__wallet\">\n            <div className=\"pg-history-elem__label\">\n               {this.props.intl.formatMessage({ id: `page.body.history.${label}` })}\n            </div>\n            <History headers={this.getHeaders(label)} data={this.retrieveData(list)} />\n            <Pagination\n               firstElemIndex={firstElemIndex}\n               lastElemIndex={lastElemIndex}\n               page={page}\n               nextPageExists={nextPageExists}\n               onClickPrevPage={this.onClickPrevPage}\n               onClickNextPage={this.onClickNextPage}\n            />\n         </div>\n      );\n   }\n\n   private getHeaders = (label: string) => [\n      this.props.intl.formatMessage({ id: `page.body.history.${label}.header.date` }),\n      this.props.intl.formatMessage({ id: `page.body.history.${label}.header.status` }),\n      this.props.intl.formatMessage({ id: `page.body.history.${label}.header.amount` }),\n   ];\n\n   private onClickPrevPage = () => {\n      const { page, type, currency } = this.props;\n      this.props.fetchHistory({ page: Number(page) - 1, currency, type, limit: 6 });\n   };\n\n   private onClickNextPage = () => {\n      const { page, type, currency } = this.props;\n      this.props.fetchHistory({ page: Number(page) + 1, currency, type, limit: 6 });\n   };\n\n   private retrieveData = list => {\n      const {\n         currency,\n         currencies,\n         intl,\n         type,\n         wallets,\n      } = this.props;\n      const { fixed } = wallets.find(w => w.currency === currency) || { fixed: 8 };\n      if (list.length === 0) {\n         return [[intl.formatMessage({ id: 'page.noDataToShow' }), '', '']];\n      }\n\n      return list.sort((a, b) => {\n         return localeDate(a.created_at, 'fullDate') > localeDate(b.created_at, 'fullDate') ? -1 : 1;\n      }).map((item, index) => {\n         const amount = 'amount' in item ? Number(item.amount) : Number(item.price) * Number(item.volume);\n         const confirmations = type === 'deposits' && item.confirmations;\n         const itemCurrency = currencies && currencies.find(cur => cur.id === currency);\n         const blockchainCurrency = itemCurrency?.networks.find(blockchain_cur => blockchain_cur.blockchain_key === item.blockchain_key);\n         const minConfirmations = blockchainCurrency?.min_confirmations;\n         const state = 'state' in item ? this.formatTxState(item.state, confirmations, minConfirmations) : '';\n\n         return [\n            localeDate(item.created_at, 'fullDate'),\n            state,\n            <Decimal key={index} fixed={fixed} thousSep=\",\">{amount}</Decimal>,\n         ];\n      });\n   };\n\n   private formatTxState = (tx: string, confirmations?: number, minConfirmations?: number) => {\n      const statusMapping = {\n         succeed: <SucceedIcon />,\n         failed: <FailIcon />,\n         accepted: <SucceedIcon />,\n         collected: <SucceedIcon />,\n         canceled: <FailIcon />,\n         rejected: <FailIcon />,\n         processing: this.props.intl.formatMessage({ id: 'page.body.wallets.table.pending' }),\n         prepared: this.props.intl.formatMessage({ id: 'page.body.wallets.table.pending' }),\n         submitted: (confirmations !== undefined && minConfirmations !== undefined) ? (\n            `${confirmations}/${minConfirmations}`\n         ) : (\n            this.props.intl.formatMessage({ id: 'page.body.wallets.table.pending' })\n         ),\n         skipped: <SucceedIcon />,\n      };\n\n      return statusMapping[tx];\n   };\n}\n\n\nexport const mapStateToProps = (state: RootState): ReduxProps => ({\n   currencies: selectCurrencies(state),\n   list: selectHistory(state),\n   wallets: selectWallets(state),\n   fetching: selectHistoryLoading(state),\n   page: selectCurrentPage(state),\n   firstElemIndex: selectFirstElemIndex(state, 6),\n   lastElemIndex: selectLastElemIndex(state, 6),\n   nextPageExists: selectNextPageExists(state, 6),\n});\n\nexport const mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n   dispatch => ({\n      fetchCurrencies: () => dispatch(currenciesFetch()),\n      fetchHistory: params => dispatch(fetchHistory(params)),\n      resetHistory: () => dispatch(resetHistory()),\n   });\n\nexport const WalletHistory = injectIntl(connect(mapStateToProps, mapDispatchToProps)(WalletTable)) as any;\n","import classnames from 'classnames';\nimport * as React from 'react';\nimport { Button, Spinner } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToProps } from 'react-redux';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport {\n   Blur,\n   CurrencyInfo,\n   DepositCrypto,\n   DepositFiat,\n   TabPanel,\n   WalletList,\n} from '../../components';\nimport { DEFAULT_CCY_PRECISION, DEFAULT_WALLET } from '../../constants';\nimport { Withdraw, WithdrawProps } from '../../containers';\nimport { ModalWithdrawConfirmation } from '../../containers/ModalWithdrawConfirmation';\nimport { ModalWithdrawSubmit } from '../../containers/ModalWithdrawSubmit';\nimport { EstimatedValue } from '../../containers/Wallets/EstimatedValue';\nimport { WalletHistory } from '../../containers/Wallets/History';\nimport { setDocumentTitle } from '../../helpers';\nimport {\n   alertPush,\n   beneficiariesFetch,\n   Beneficiary,\n   currenciesFetch,\n   Currency,\n   RootState,\n   selectBeneficiariesActivateSuccess,\n   selectBeneficiariesCreateSuccess,\n   selectBeneficiariesDeleteSuccess,\n   selectCurrencies,\n   selectHistory,\n   selectMobileWalletUi,\n   selectUserInfo,\n   selectWallets,\n   selectWalletsLoading,\n   selectWithdrawSuccess,\n   setMobileWalletUi,\n   User,\n   Wallet,\n   WalletHistoryList,\n   walletsAddressFetch,\n   walletsData,\n   walletsFetch,\n   walletsWithdrawCcyFetch,\n} from '../../modules';\nimport { defaultBeneficiary } from 'screens/WalletDetails/types';\n\n\ninterface ReduxProps {\n   user: User;\n   wallets: Wallet[];\n   withdrawSuccess: boolean;\n   walletsLoading?: boolean;\n   historyList: WalletHistoryList;\n   mobileWalletChosen: string;\n   beneficiariesActivateSuccess: boolean;\n   beneficiariesDeleteSuccess: boolean;\n   beneficiariesAddSuccess: boolean;\n   currencies: Currency[];\n}\n\ninterface DispatchProps {\n   fetchBeneficiaries: typeof beneficiariesFetch;\n   fetchAddress: typeof walletsAddressFetch;\n   fetchWallets: typeof walletsFetch;\n   clearWallets: () => void;\n   walletsWithdrawCcy: typeof walletsWithdrawCcyFetch;\n   fetchSuccess: typeof alertPush;\n   setMobileWalletUi: typeof setMobileWalletUi;\n   currenciesFetch: typeof currenciesFetch;\n}\n\ninterface WalletsState {\n   activeIndex: number;\n   otpCode: string;\n   amount: string;\n   beneficiary: Beneficiary;\n   selectedWalletIndex: number;\n   withdrawSubmitModal: boolean;\n   withdrawConfirmModal: boolean;\n   bchAddress?: string;\n   filteredWallets?: Wallet[] | null;\n   tab: string;\n   withdrawDone: boolean;\n   total: string;\n   currentTabIndex: number;\n}\n\ninterface OwnProps {\n   walletsError: {\n      message: string;\n   };\n}\n\ntype Props = ReduxProps & DispatchProps & RouterProps & IntlProps & OwnProps;\n\nclass WalletsComponent extends React.Component<Props, WalletsState> {\n   constructor(props: Props) {\n      super(props);\n\n      this.state = {\n         activeIndex: 0,\n         selectedWalletIndex: -1,\n         withdrawSubmitModal: false,\n         withdrawConfirmModal: false,\n         otpCode: '',\n         amount: '',\n         beneficiary: defaultBeneficiary,\n         tab: this.translate('page.body.wallets.tabs.deposit'),\n         withdrawDone: false,\n         total: '',\n         currentTabIndex: 0,\n      };\n   }\n\n   //tslint:disable member-ordering\n   public translate = (id: string) => this.props.intl.formatMessage({ id });\n\n   private title = this.translate('page.body.wallets.tabs.deposit.fiat.message1');\n   private description = this.translate('page.body.wallets.tabs.deposit.fiat.message2');\n\n   public componentDidMount() {\n      setDocumentTitle('Wallets');\n      const { wallets } = this.props;\n      const { selectedWalletIndex } = this.state;\n\n      if (this.props.wallets.length === 0) {\n         this.props.fetchWallets();\n      }\n\n      if (selectedWalletIndex === -1 && wallets.length) {\n         this.setState({ selectedWalletIndex: 0 });\n         wallets[0]?.currency && this.props.fetchBeneficiaries({ currency_id: wallets[0].currency.toLowerCase() });\n      }\n\n      if (!this.props.currencies.length) {\n         this.props.currenciesFetch();\n      }\n   }\n\n   public componentWillUnmount() {\n      this.props.clearWallets();\n   }\n\n   public componentWillReceiveProps(next: Props) {\n      const {\n         wallets,\n         beneficiariesActivateSuccess,\n         beneficiariesDeleteSuccess,\n         withdrawSuccess,\n         beneficiariesAddSuccess,\n      } = this.props;\n      const { selectedWalletIndex } = this.state;\n\n      if (!wallets.length && next.wallets.length) {\n         this.setState({ selectedWalletIndex: 0 });\n         next.wallets[0]?.currency && this.props.fetchBeneficiaries({ currency_id: next.wallets[0].currency.toLowerCase() });\n      }\n\n      if (!withdrawSuccess && next.withdrawSuccess) {\n         this.toggleSubmitModal();\n      }\n\n      if ((next.beneficiariesActivateSuccess && !beneficiariesActivateSuccess) ||\n         (next.beneficiariesDeleteSuccess && !beneficiariesDeleteSuccess) ||\n         (next.beneficiariesAddSuccess && !beneficiariesAddSuccess)) {\n         const selectedCurrency = (next.wallets[selectedWalletIndex] || { currency: '' }).currency;\n\n         this.props.fetchBeneficiaries({ currency_id: selectedCurrency.toLowerCase() });\n      }\n   }\n\n   public render() {\n      const { wallets, historyList, mobileWalletChosen, walletsLoading } = this.props;\n      const {\n         beneficiary,\n         total,\n         selectedWalletIndex,\n         filteredWallets,\n         withdrawSubmitModal,\n         withdrawConfirmModal,\n         currentTabIndex,\n      } = this.state;\n      const formattedWallets = wallets.map((wallet: Wallet) => ({\n         ...wallet,\n         currency: wallet.currency.toUpperCase(),\n         iconUrl: wallet.iconUrl ? wallet.iconUrl : '',\n      }));\n      const selectedCurrency = (wallets[selectedWalletIndex] || { currency: '' }).currency;\n      let confirmationAddress = '';\n      let selectedWalletPrecision = DEFAULT_CCY_PRECISION;\n\n      if (wallets[selectedWalletIndex]) {\n         selectedWalletPrecision = wallets[selectedWalletIndex].fixed;\n         confirmationAddress = wallets[selectedWalletIndex].type === 'fiat' ? (\n            beneficiary.name\n         ) : (\n            beneficiary.data ? (beneficiary.data.address as string) : ''\n         );\n      }\n\n      return (\n         <>\n            {wallets.length && <EstimatedValue wallets={wallets} />}\n            <div className=\"pg-container pg-wallet\">\n               <div className=\"text-center\">\n                  {walletsLoading && <Spinner animation=\"border\" variant=\"primary\" />}\n               </div>\n               <div className={`row no-gutters pg-wallet__tabs-content ${!historyList.length && 'pg-wallet__tabs-content-height'}`}>\n                  <div className={`col-md-5 col-sm-12 col-12 ${mobileWalletChosen && 'd-none d-md-block'}`}>\n                     <WalletList\n                        onWalletSelectionChange={this.onWalletSelectionChange}\n                        walletItems={filteredWallets || formattedWallets}\n                        activeIndex={this.state.activeIndex}\n                        onActiveIndexChange={this.onActiveIndexChange}\n                     />\n                  </div>\n                  <div className={`pg-wallet__tabs col-md-7 col-sm-12 col-12 ${!mobileWalletChosen && 'd-none d-md-block'}`}>\n                     <TabPanel\n                        panels={this.renderTabs()}\n                        onTabChange={(_, label) => this.onTabChange(label)}\n                        currentTabIndex={currentTabIndex}\n                        onCurrentTabChange={this.onCurrentTabChange}\n                     />\n                  </div>\n               </div>\n               <ModalWithdrawSubmit\n                  show={withdrawSubmitModal}\n                  currency={selectedCurrency}\n                  onSubmit={this.toggleSubmitModal}\n               />\n               <ModalWithdrawConfirmation\n                  show={withdrawConfirmModal}\n                  amount={total}\n                  currency={selectedCurrency}\n                  rid={confirmationAddress}\n                  onSubmit={this.handleWithdraw}\n                  onDismiss={this.toggleConfirmModal}\n                  precision={selectedWalletPrecision}\n               />\n            </div>\n         </>\n      );\n   }\n\n   private onTabChange = label => this.setState({ tab: label });\n   private onActiveIndexChange = index => this.setState({ activeIndex: index });\n   private onCurrentTabChange = index => this.setState({ currentTabIndex: index });\n\n   private toggleSubmitModal = () => {\n      this.setState((state: WalletsState) => ({\n         withdrawSubmitModal: !state.withdrawSubmitModal,\n         withdrawDone: true,\n      }));\n   };\n\n   private toggleConfirmModal = (amount?: string, total?: string, beneficiary?: Beneficiary, otpCode?: string) => {\n      this.setState((state: WalletsState) => ({\n         amount: amount || '',\n         beneficiary: beneficiary ? beneficiary : defaultBeneficiary,\n         otpCode: otpCode ? otpCode : '',\n         withdrawConfirmModal: !state.withdrawConfirmModal,\n         total: total || '',\n         withdrawDone: false,\n      }));\n   };\n\n   private renderTabs() {\n      const { tab, selectedWalletIndex } = this.state;\n      const { wallets } = this.props;\n\n      if (selectedWalletIndex === -1) {\n         return [{ content: null, label: '' }];\n      }\n\n      const showWithdraw = wallets[selectedWalletIndex].type === 'fiat' || wallets[selectedWalletIndex].balance;\n\n      return [\n         {\n            content: tab === this.translate('page.body.wallets.tabs.deposit') ? this.renderDeposit(!!showWithdraw) : null,\n            label: this.translate('page.body.wallets.tabs.deposit'),\n         },\n         {\n            content: tab === this.translate('page.body.wallets.tabs.withdraw') ? this.renderWithdraw() : null,\n            label: this.translate('page.body.wallets.tabs.withdraw'),\n            disabled: !showWithdraw,\n         },\n      ];\n   }\n\n   private handleWithdraw = () => {\n      const { selectedWalletIndex, otpCode, amount, beneficiary } = this.state;\n      if (selectedWalletIndex === -1) {\n         return;\n      }\n\n      const { currency } = this.props.wallets[selectedWalletIndex];\n      const withdrawRequest = {\n         amount,\n         currency: currency.toLowerCase(),\n         otp: otpCode,\n         beneficiary_id: String(beneficiary.id),\n      };\n      this.props.walletsWithdrawCcy(withdrawRequest);\n      this.toggleConfirmModal();\n   };\n\n   private handleOnCopy = () => {\n      this.props.fetchSuccess({ message: ['page.body.wallets.tabs.deposit.ccy.message.success'], type: 'success' });\n   };\n\n   private handleGenerateAddress = () => {\n      const { selectedWalletIndex } = this.state;\n      const { wallets } = this.props;\n\n      // Upadate any type 7-12-2022\n      const wallet: any = wallets[selectedWalletIndex] || DEFAULT_WALLET;\n\n      if (!wallet.deposit_address && wallets.length && wallet.type !== 'fiat') {\n         this.props.fetchAddress({ currency: wallets[selectedWalletIndex].currency });\n      }\n   };\n\n   private renderDeposit = (isAccountActivated: boolean) => {\n      const {\n         currencies,\n         user,\n         wallets,\n      } = this.props;\n      const { selectedWalletIndex } = this.state;\n      const wallet: Wallet = (wallets[selectedWalletIndex] || DEFAULT_WALLET);\n      const currencyItem: Currency | any = (currencies && currencies.find(item => item.id === wallet.currency)) || { min_confirmations: 6, deposit_enabled: false };\n      const [tab, setTab] = React.useState(currencyItem?.networks ? currencyItem?.networks[0]?.blockchain_key : '')\n\n      React.useEffect(() => {\n         setTab(currencyItem?.networks ? currencyItem?.networks[0]?.blockchain_key?.toUpperCase() : '');\n      }, [wallet.currency]);\n\n      const text = this.props.intl.formatMessage({ id: 'page.body.wallets.tabs.deposit.ccy.message.submit' },\n         { confirmations: currencyItem.min_confirmations });\n      const error = this.props.intl.formatMessage({ id: 'page.body.wallets.tabs.deposit.ccy.message.pending' });\n\n      const blurCryptoClassName = classnames('pg-blur-deposit-crypto', {\n         'pg-blur-deposit-crypto--active': isAccountActivated,\n      });\n\n      const buttonLabel = `${this.translate('page.body.wallets.tabs.deposit.ccy.button.generate')} ${wallet.currency.toUpperCase()} ${this.translate('page.body.wallets.tabs.deposit.ccy.button.address')}`;\n\n      if (wallets[selectedWalletIndex].type === 'coin') {\n         return (\n            <React.Fragment>\n               <CurrencyInfo wallet={wallets[selectedWalletIndex]} />\n               {currencyItem && !currencyItem.deposit_enabled ? (\n                  <Blur\n                     className={blurCryptoClassName}\n                     text={this.translate('page.body.wallets.tabs.deposit.disabled.message')}\n                  />\n               ) : null}\n               <DepositCrypto\n                  buttonLabel={buttonLabel}\n                  copiableTextFieldText={this.translate('page.body.wallets.tabs.deposit.ccy.message.address')}\n                  copyButtonText={this.translate('page.body.wallets.tabs.deposit.ccy.message.button')}\n                  error={error}\n                  handleGenerateAddress={this.handleGenerateAddress}\n                  handleOnCopy={this.handleOnCopy}\n                  text={text}\n                  wallet={wallet}\n                  network={tab}\n               />\n               {wallet.currency && <WalletHistory label=\"deposit\" type=\"deposits\" currency={wallet.currency} />}\n            </React.Fragment>\n         );\n      } else {\n         return (\n            <React.Fragment>\n               <CurrencyInfo wallet={wallets[selectedWalletIndex]} />\n               {currencyItem && !currencyItem.deposit_enabled ? (\n                  <Blur\n                     className=\"pg-blur-deposit-fiat\"\n                     text={this.translate('page.body.wallets.tabs.deposit.disabled.message')}\n                  />\n               ) : null}\n               <DepositFiat title={this.title} description={this.description} uid={user ? user.uid : ''} />\n               {wallet.currency && <WalletHistory label=\"deposit\" type=\"deposits\" currency={wallet.currency} />}\n            </React.Fragment>\n         );\n      }\n   };\n\n   private renderWithdraw = () => {\n      const { currencies, user, wallets, walletsError } = this.props;\n      const { selectedWalletIndex } = this.state;\n      const wallet = (wallets[selectedWalletIndex] || DEFAULT_WALLET);\n      const currencyItem: Currency | any = (currencies && currencies.find(item => item.id === wallet.currency)) || { min_confirmations: 6, deposit_enabled: false };\n\n      return (\n         <>\n            <CurrencyInfo wallet={wallets[selectedWalletIndex]} />\n            {walletsError && <p className=\"pg-wallet__error\">{walletsError.message}</p>}\n            {currencyItem && !currencyItem.withdrawal_enabled ? (\n               <Blur\n                  className=\"pg-blur-withdraw\"\n                  text={this.translate('page.body.wallets.tabs.withdraw.disabled.message')}\n               />\n            ) : null}\n            {this.renderWithdrawContent()}\n            {user.otp && wallet.currency && <WalletHistory label=\"withdraw\" type=\"withdraws\" currency={wallet.currency} />}\n         </>\n      );\n   };\n\n   private renderWithdrawContent = () => {\n      const { withdrawDone, selectedWalletIndex } = this.state;\n\n      if (selectedWalletIndex === -1) {\n         return [{ content: null, label: '' }];\n      }\n      const { user: { level, otp }, wallets, intl } = this.props;\n      const wallet = wallets[selectedWalletIndex];\n      const { currency, type } = wallet;\n      const fixed = (wallet || { fixed: 0 }).fixed;\n\n      const withdrawProps: WithdrawProps = {\n         withdrawDone,\n         currency,\n         fee: 0,\n         onClick: this.toggleConfirmModal,\n         twoFactorAuthRequired: this.isTwoFactorAuthRequired(level, otp),\n         fixed,\n         type,\n         withdrawAmountLabel: intl.formatMessage({ id: 'page.body.wallets.tabs.withdraw.content.amount' }),\n         withdraw2faLabel: intl.formatMessage({ id: 'page.body.wallets.tabs.withdraw.content.code2fa' }),\n         withdrawFeeLabel: intl.formatMessage({ id: 'page.body.wallets.tabs.withdraw.content.fee' }),\n         withdrawTotalLabel: intl.formatMessage({ id: 'page.body.wallets.tabs.withdraw.content.total' }),\n         withdrawButtonLabel: intl.formatMessage({ id: 'page.body.wallets.tabs.withdraw.content.button' }),\n      };\n\n      return otp ? <Withdraw {...withdrawProps} /> : this.isOtpDisabled();\n   };\n\n\n   private isOtpDisabled = () => {\n      return (\n         <>\n            <p className=\"pg-wallet__enable-2fa-message\">\n               {this.translate('page.body.wallets.tabs.withdraw.content.enable2fa')}\n            </p>\n            <Button\n               block={true}\n               onClick={this.redirectToEnable2fa}\n               size=\"lg\"\n               variant=\"primary\"\n            >\n               {this.translate('page.body.wallets.tabs.withdraw.content.enable2faButton')}\n            </Button>\n         </>\n      );\n   };\n\n   private redirectToEnable2fa = () => this.props.history.push('/security/2fa', { enable2fa: true });\n\n   private isTwoFactorAuthRequired(level: number, is2faEnabled: boolean) {\n      return level > 1 || (level === 1 && is2faEnabled);\n   }\n\n   private onWalletSelectionChange = (value: Wallet) => {\n      const { wallets } = this.props;\n\n      const nextWalletIndex = this.props.wallets.findIndex(\n         wallet => wallet.currency.toLowerCase() === value.currency.toLowerCase()\n      );\n\n      this.setState({\n         selectedWalletIndex: nextWalletIndex,\n         withdrawDone: false,\n      });\n\n      this.props.fetchBeneficiaries({ currency_id: value.currency.toLowerCase() });\n      this.props.setMobileWalletUi(wallets[nextWalletIndex].name);\n   };\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   user: selectUserInfo(state),\n   wallets: selectWallets(state),\n   walletsLoading: selectWalletsLoading(state),\n   withdrawSuccess: selectWithdrawSuccess(state),\n   historyList: selectHistory(state),\n   mobileWalletChosen: selectMobileWalletUi(state),\n   beneficiariesActivateSuccess: selectBeneficiariesActivateSuccess(state),\n   beneficiariesDeleteSuccess: selectBeneficiariesDeleteSuccess(state),\n   currencies: selectCurrencies(state),\n   beneficiariesAddSuccess: selectBeneficiariesCreateSuccess(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n   fetchBeneficiaries: params => dispatch(beneficiariesFetch(params)),\n   fetchWallets: () => dispatch(walletsFetch()),\n   fetchAddress: ({ currency }) => dispatch(walletsAddressFetch({ currency })),\n   walletsWithdrawCcy: params => dispatch(walletsWithdrawCcyFetch(params)),\n   clearWallets: () => dispatch(walletsData([])),\n   fetchSuccess: payload => dispatch(alertPush(payload)),\n   setMobileWalletUi: payload => dispatch(setMobileWalletUi(payload)),\n   currenciesFetch: () => dispatch(currenciesFetch()),\n});\n\nexport const WalletsScreen = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps),\n)(WalletsComponent) as React.ComponentClass;\n","import React, {\n   useState,\n   FunctionComponent,\n   memo,\n   useEffect,\n   useMemo,\n   ChangeEvent,\n} from 'react';\nimport {\n   RouterProps,\n   withRouter\n} from 'react-router';\nimport {\n   connect,\n   MapDispatchToProps\n} from 'react-redux';\nimport { compose } from 'redux';\nimport { injectIntl } from 'react-intl';\nimport {\n   Button,\n   LayoutWallet,\n   ModalRequired,\n   TableWallets,\n} from 'components';\nimport {\n   RootState,\n   selectUserInfo,\n   selectWallets,\n   User,\n   Wallet,\n   walletsFetch\n} from 'modules';\nimport { IntlProps } from 'index';\nimport { SearchIcon } from '@heroicons/react/outline';\nimport { useDocumentTitle } from 'hooks';\nimport { arrayFilter } from 'helpers';\nimport { EstimatedValue } from 'components';\nimport { DEFAULT_WALLET } from '../../constants';\n\ninterface ReduxProps {\n   user: User;\n   wallets: Wallet[];\n}\n\ninterface DispatchProps {\n   fetchWallets: typeof walletsFetch;\n}\n\ninterface OwnProps {\n   location: {\n      state: {\n         isOpenPortal: boolean;\n      }\n   }\n}\n\ntype WalletsProps = RouterProps & ReduxProps & DispatchProps & OwnProps & IntlProps;\n\nconst WalletOverviewFC = memo(({\n   user,\n   wallets,\n   fetchWallets,\n   history: { push },\n   location,\n   intl,\n}: WalletsProps) => {\n   const [isOpen, setIsOpen] = useState(location.state?.isOpenPortal ? location.state?.isOpenPortal : false);\n   const [q, setQ] = useState<string>('');\n   const [checked, setChecked] = useState<boolean>(false);\n\n   useDocumentTitle('Wallets');\n   useEffect(() => {\n      if (wallets.length <= 0) {\n         fetchWallets();\n      }\n   }, [wallets]);\n\n   let balances: Wallet[] = wallets || [DEFAULT_WALLET];\n   if (q) {\n      balances = balances.length\n         ? arrayFilter(balances, q)\n         : [];\n   }\n   if (checked) {\n      balances = balances.length\n         ? balances.filter(({ balance, locked }) => Number(balance) > 0 || Number(locked) > 0)\n         : [];\n   }\n   // const wallet = wallets.find(pair => pair.currency === 'idr');\n\n   const translate = (id: string) => intl.formatMessage({ id });\n   const handleChange = (e: ChangeEvent<HTMLInputElement>) => setQ(e.target.value);\n   const handleShowPortal = () => setIsOpen(prev => !prev);\n\n   const handleRedirectToTransfer = () => {\n      if (user.state === 'pending') {\n         push('/email-verification')\n      } else if (user.level < 2 || !user.otp) {\n         handleShowPortal()\n      } else {\n         push('/wallets/transfer')\n      }\n   }\n\n   const renderTableWallets = useMemo(() => (\n      <TableWallets\n         balances={balances}\n         push={push}\n         translate={translate}\n      />\n   ), [balances]);\n\n   return (\n      <>\n         <LayoutWallet>\n            <div className=\"p-8 rounded bg-neutral8 dark:bg-shade2\">\n               <div className=\"flex items-center mb-5\">\n                  <div className=\"mr-auto text-3.5xl font-dm font-bold leading-tight tracking-custom1\">\n                     Overview\n                  </div>\n                  <div className=\"w-56\">\n                     <Button\n                        onClick={handleRedirectToTransfer}\n                        text=\"Transfer\"\n                        variant=\"outline\"\n                        size=\"normal\"\n                        className=\"lg-max:hidden\"\n                     />\n                  </div>\n               </div>\n               <EstimatedValue wallets={wallets} />\n            </div>\n            <div>\n               <div className=\"pt-5 pb-2 px-8 text-xs text-neutral4 font-medium leading-relaxed\">\n                  Asset Balances\n               </div>\n               <div className=\"bg-neutral8 dark:bg-shade2 rounded overflow-hidden min-h-c-screen-343\">\n                  <div className=\"pt-5\">\n                     <div className=\"flex items-center px-8\">\n                        <div className=\"relative w-64 mr-auto\">\n                           <input\n                              type=\"text\"\n                              className=\"h-10 text-xs w-full pt-0 pr-12 pb-0 pl-3.5 rounded-3xl border-2 border-neutral6 outline-none focus:border-neutral4 dark:border-neutral3 dark:bg-transparent dark:focus:border-neutral4\"\n                              style={{ transition: 'border-color .2s' }}\n                              placeholder=\"Search assets...\"\n                              onChange={handleChange}\n                              autoFocus\n                           />\n                           <button\n                              type=\"button\"\n                              className=\"absolute top-0 right-0 h-10 w-10 bg-none flex items-center justify-center\"\n                           >\n                              <SearchIcon className=\"w-5 h-5 stroke-neutral4 transition-all duration-300\" />\n                           </button>\n                        </div>\n                        <label\n                           htmlFor=\"hide-empty-balance\"\n                           className=\"flex space-x-1 items-center cursor-pointer\"\n                        >\n                           <input\n                              type=\"checkbox\"\n                              checked={checked}\n                              className=\"accent-primary1 cursor-pointer\" id=\"hide-empty-balance\"\n                              onChange={() => setChecked(prev => !prev)}\n                           />\n                           <div className=\"select-none text-xs font-medium leading-custom1 text-neutral4 hover:text-neutral2 dark:hover:text-neutral8 transition-colors duration-300\">\n                              Hide Empty Balance\n                           </div>\n                        </label>\n                     </div>\n                     {renderTableWallets}\n                  </div>\n               </div>\n            </div>\n         </LayoutWallet>\n         <ModalRequired\n            show={isOpen}\n            close={handleShowPortal}\n            push={push}\n         />\n      </>\n   )\n});\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   user: selectUserInfo(state),\n   wallets: selectWallets(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n   fetchWallets: () => dispatch(walletsFetch()),\n});\n\nexport const WalletOverview = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps),\n)(WalletOverviewFC) as FunctionComponent;\n","import React, {\n   useState,\n   // Fragment,\n   FunctionComponent,\n   memo,\n} from 'react';\nimport { Link } from 'react-router-dom';\nimport { RouterProps, withRouter } from 'react-router';\nimport { connect, MapDispatchToProps } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectIntl } from 'react-intl';\n// import { Listbox, Transition } from '@headlessui/react'\nimport { Decimal, WalletSidebar } from 'components';\nimport {\n   alertPush,\n   beneficiariesFetch,\n   Beneficiary,\n   currenciesFetch,\n   Currency,\n   Market,\n   RootState,\n   selectBeneficiariesActivateSuccess,\n   selectBeneficiariesCreateSuccess,\n   selectBeneficiariesDeleteSuccess,\n   selectCurrencies,\n   selectHistory,\n   selectMarkets,\n   selectMarketsLoading,\n   selectMarketTickers,\n   selectUserInfo,\n   selectUserLoggedIn,\n   selectWallets,\n   selectWalletsLoading,\n   selectWithdrawSuccess,\n   Ticker,\n   User, Wallet,\n   WalletHistoryList,\n   walletsAddressFetch,\n   walletsData,\n   walletsFetch,\n   walletsWithdrawCcyFetch\n} from 'modules';\nimport { IntlProps } from 'index';\nimport { useMarketsFetch } from 'hooks';\nimport { SearchIcon } from '@heroicons/react/outline';\nimport { ICChevronRight, IllusChart } from 'assets';\n\n// const defaultBeneficiary: Beneficiary = {\n//    id: 0,\n//    currency: '',\n//    name: '',\n//    state: '',\n//    data: {\n//       address: ''\n//    }\n// }\n\n// const defaultWallet: Wallet = {\n//    name: '',\n//    currency: '',\n//    balance: '',\n//    type: 'coin',\n//    fixed: 0,\n//    fee: 0\n// }\n\n\ninterface State {\n   activeIndex: number;\n   currentTabIndex: number;\n   otpCode: string;\n   beneficiary: Beneficiary;\n   selectWalletIndex: number;\n   withdrawSubmitModal: boolean;\n   withdrawConfirmModal: boolean;\n   bchAddress?: string;\n   filteredWallets?: Wallet[] | null;\n   tab: string;\n   withdrawDone: boolean;\n   amount: string;\n   total: string;\n}\n\ninterface ReduxProps {\n   user: User;\n   wallets: Wallet[];\n   withdrawSuccess: boolean;\n   walletsLoading?: boolean;\n   historyList: WalletHistoryList;\n   beneficiariesActivateSuccess: boolean;\n   beneficiariesDeleteSuccess: boolean;\n   beneficiariesAddSuccess: boolean;\n   currencies: Currency[];\n   markets: Market[] | [];\n   marketLoading?: boolean;\n   marketTickers: {\n      [key: string]: Ticker;\n   };\n   isLoggedIn: boolean;\n}\n\ninterface DispatchProps {\n   fetchBeneficiaries: typeof beneficiariesFetch;\n   fetchAddress: typeof walletsAddressFetch;\n   fetchWallets: typeof walletsFetch;\n   walletsWithdrawCcy: typeof walletsWithdrawCcyFetch;\n   fetchSuccess: typeof alertPush;\n   currenciesFetch: typeof currenciesFetch;\n   clearWallets: () => void;\n}\n\ninterface OwnProps {\n   walletsError: {\n      message: string;\n   }\n}\n\ntype Props = RouterProps & ReduxProps & DispatchProps & OwnProps & IntlProps;\n\nconst WalletMarginFC = memo((props: Props, state: State) => {\n   useMarketsFetch();\n   const { wallets, markets, walletsLoading } = props;\n   console.log('props :>> ', props);\n   const combainById = (a1, a2) =>\n      a1.map((market, i) => ({\n         ...a2.find(wallet => wallet?.currency === market.base_unit),\n         amount_precision: market.amount_precision,\n         price_precision: market.price_precision,\n      }));\n   const combineWallets = combainById(markets, wallets.length > 0 ? wallets : []) || [];\n   console.log('combineWallets :>> ', combineWallets);\n\n   console.log('wallets', wallets);\n\n   const [q, setQ] = useState<string>('');\n\n   return (\n      <div className=\"block lg:flex pt-8 pb-4 px-4 lg:!p-1 bg-neutral7 dark:bg-neutral1\">\n         <WalletSidebar />\n         <div className=\"grow h-auto lg:h-[calc(100vh-88px)] pl-0 lg:pl-1 overflow-auto\">\n            <div className=\"p-8 rounded bg-neutral8 dark:bg-shade2\">\n               <div className=\"mb-5 text-3.5xl font-dm font-bold leading-tight tracking-custom1\">\n                  Margin\n               </div>\n               <div className=\"flex items-start justify-between\">\n                  <div>\n                     <div className=\"mb-1 text-neutral3 font-medium\">\n                        Total balance\n                     </div>\n                     <div className=\"flex items-center space-x-2\">\n                        <div className=\"text-2xl font-semibold tracking-custom1 leading-custom2\">\n                           0.27894652\n                        </div>\n                        <div className=\"inline-block px-2 py-1.5 rounded text-xs font-bold uppercase text-neutral8 bg-primary5\">\n                           BTC\n                        </div>\n                     </div>\n                     <div className=\"text-base text-neutral4\">\n                        $10,098.36\n                     </div>\n                  </div>\n                  <div className=\"flex items-center space-x-6\">\n                     <IllusChart />\n                     <div>\n                        <div className=\"mb-1 font-medium text-neutral3\">Margin level</div>\n                        <div className=\"flex items-center space-x-2\">\n                           <div className=\"text-primary5 text-2xl font-semibold leading-custom2 tracking-custom1\">999.00</div>\n                           <div className=\"inline-block px-2 py-1.5 rounded text-xs font-bold uppercase text-neutral8 bg-primary5\">\n                              LOW RISK\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n                  <div>\n                     <div className=\"text-base text-neutral4\">Account Equity</div>\n                     <div className=\"flex items-center space-x-2\">\n                        <div className=\"text-2xl font-semibold tracking-custom1 leading-custom2\">\n                           0.00000000\n                        </div>\n                        <div className=\"inline-block px-2 py-1.5 rounded text-xs font-bold uppercase text-neutral8 bg-neutral5\">\n                           BTC\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div>\n               <div>\n                  <div className=\"pt-5 pb-2 px-8 text-xs text-neutral4 font-medium leading-relaxed\">Funds</div>\n                  <div className=\"bg-neutral8 dark:bg-shade2 rounded overflow-hidden\">\n                     <div className=\"pt-5\">\n                        <div className=\"flex items-center px-8\">\n                           <div className=\"relative w-64 mr-auto\">\n                              <input\n                                 type=\"text\"\n                                 className=\"h-10 text-xs w-full pt-0 pr-12 pb-0 pl-3.5 rounded-3xl border-2 border-neutral6 outline-none focus:border-neutral4 dark:border-neutral3 dark:bg-transparent dark:focus:border-neutral4\"\n                                 style={{ transition: 'border-color .2s' }}\n                                 placeholder=\"Search coins\"\n                                 onChange={e => setQ(e.target.value)}\n                              />\n                              <button\n                                 type=\"button\"\n                                 className=\"absolute top-0 right-0 h-10 w-10 bg-none flex items-center justify-center\"\n                              >\n                                 <SearchIcon className=\"w-5 h-5 stroke-neutral4 transition-all duration-300\" />\n                              </button>\n                           </div>\n                           <Link to=\"/wallet-margin\" className=\"flex items-center text-xs font-medium leading-custom1 text-neutral4 hover:text-neutral2 transition-colors duration-300\">\n                              Borrowing history\n                              <ICChevronRight className=\"w-6 h-6 ml-1 fill-neutral4 transition-colors duration-200\" />\n                           </Link>\n                        </div>\n                        <div className=\"table w-full\">\n                           <div className=\"table-row\" style={{ transition: 'background .2s' }}>\n                              <div className=\"table-cell p-4 !pl-8 !pt-5 border-b border-neutral7 dark:border-neutral3 text-xs leading-custom1 font-semibold text-neutral3 dark:text-neutral8\">\n                                 Asset\n                              </div>\n                              <div className=\"table-cell p-4 !pt-5 border-b border-neutral7 dark:border-neutral3 text-xs leading-custom1 font-semibold text-neutral3 dark:text-neutral8\">\n                                 Earn\n                              </div>\n                              <div className=\"table-cell p-4 !pt-5 border-b border-neutral7 dark:border-neutral3 text-xs leading-custom1 font-semibold text-neutral3 dark:text-neutral8 text-right\">\n                                 On orders\n                              </div>\n                              <div className=\"table-cell p-4 !pt-5 border-b border-neutral7 dark:border-neutral3 text-xs leading-custom1 font-semibold text-neutral3 dark:text-neutral8 text-right\">\n                                 Available balance\n                              </div>\n                              <div className=\"table-cell p-4 !pr-8 !pt-5 border-b border-neutral7 dark:border-neutral3 text-xs leading-custom1 font-semibold text-neutral3 dark:text-neutral8 text-right\">\n                                 Total balance\n                              </div>\n                           </div>\n                           {\n                              (wallets.length > 0 || walletsLoading)\n                                 ? wallets.filter(e => Object.keys(e).reduce((acc, curr) => acc || e[curr]?.toString()?.toLowerCase()?.includes(q.toLowerCase()), false)).map(wallet => (\n                                    <Link to=\"/\" className=\"table-row hover:bg-neutral7 dark:hover:bg-neutral3\" style={{ transition: 'background .2s' }}>\n                                       <div className={`table-cell p-4 !pl-8 align-middle ${wallet[Object.keys(wallet)[Object.keys(wallet).length - 1]] ? 'border-none' : 'border-b border-neutral6 dark:border-neutral3'}`}>\n                                          <div className=\"flex\">\n                                             <div className=\"shrink-0 w-8 mr-5\">\n                                                <img className=\"w-full\" style={{\n                                                   clipPath: 'polygon(50% 0, 5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%)',\n                                                }} src={wallet?.iconUrl} alt={wallet?.name} />\n                                             </div>\n                                             <div>\n                                                <div className=\"font-medium uppercase\">\n                                                   {wallet?.currency}\n                                                </div>\n                                                <div className=\"text-neutral4\">\n                                                   {wallet?.name}\n                                                </div>\n                                             </div>\n                                          </div>\n                                       </div>\n                                       <div className=\"table-cell border-b border-neutral6 dark:border-neutral3 p-4\">\n                                          <div className=\"inline-block pt-2 pb-1.5 px-2 rounded text-xs font-bold uppercase text-neutral8 bg-primary5\">7.46% APR</div>\n                                       </div>\n                                       <div className=\"table-cell border-b border-neutral6 dark:border-neutral3 p-4 text-right\">\n                                          <div className=\"font-medium\">\n                                             {Decimal.format(wallet?.balance, 0, ',')} {wallet?.currency?.toUpperCase()}\n                                          </div>\n                                          <div className=\"text-neutral4\">$10,098.36</div>\n                                       </div>\n                                       <div className=\"table-cell border-b border-neutral6 dark:border-neutral3 p-4 text-right\">\n                                          <div className=\"font-medium\">\n                                             {Decimal.format(wallet?.balance, 0, ',')} {wallet?.currency?.toUpperCase()}\n                                          </div>\n                                          <div className=\"text-neutral4\">$10,098.36</div>\n                                       </div>\n                                       <div className=\"table-cell border-b border-neutral6 dark:border-neutral3 p-4 !pr-8 text-right\">\n                                          <div className=\"font-medium\">\n                                             {Decimal.format(wallet?.balance, 0, ',')} {wallet?.currency?.toUpperCase()}\n                                          </div>\n                                          <div className=\"text-neutral4\">$10,098.36</div>\n                                       </div>\n                                    </Link>\n                                 )) : (\n                                    <>\n                                       <div className=\"table-row\">\n                                          <div className=\"table-cell pb-[10px] p-1.5 pl-0\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5 pr-0\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                       </div>\n                                       <div className=\"table-row\">\n                                          <div className=\"table-cell pb-[10px] p-1.5 pl-0\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5 pr-0\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                       </div>\n                                       <div className=\"table-row\">\n                                          <div className=\"table-cell pb-[10px] p-1.5 pl-0\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5 pr-0\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                       </div>\n                                    </>\n                                 )\n                           }\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   )\n});\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   user: selectUserInfo(state),\n   wallets: selectWallets(state),\n   withdrawSuccess: selectWithdrawSuccess(state),\n   walletsLoading: selectWalletsLoading(state),\n   historyList: selectHistory(state),\n   beneficiariesActivateSuccess: selectBeneficiariesActivateSuccess(state),\n   beneficiariesDeleteSuccess: selectBeneficiariesDeleteSuccess(state),\n   beneficiariesAddSuccess: selectBeneficiariesCreateSuccess(state),\n   currencies: selectCurrencies(state),\n   isLoggedIn: selectUserLoggedIn(state),\n   markets: selectMarkets(state),\n   marketLoading: selectMarketsLoading(state),\n   marketTickers: selectMarketTickers(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n   fetchBeneficiaries: params => dispatch(beneficiariesFetch(params)),\n   fetchAddress: ({ currency }) => dispatch(walletsAddressFetch({ currency })),\n   fetchWallets: () => dispatch(walletsFetch()),\n   walletsWithdrawCcy: params => dispatch(walletsWithdrawCcyFetch(params)),\n   fetchSuccess: payload => dispatch(alertPush(payload)),\n   currenciesFetch: () => dispatch(currenciesFetch()),\n   clearWallets: () => dispatch(walletsData([]))\n});\n\nexport const WalletMargin = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps),\n)(WalletMarginFC) as FunctionComponent;\n","import React, {\n   FunctionComponent,\n   memo,\n   useEffect,\n   useMemo,\n   useRef,\n   useState\n} from 'react';\nimport { compose } from 'redux';\nimport {\n   connect,\n   MapDispatchToPropsFunction\n} from 'react-redux';\nimport {\n   RouterProps,\n   withRouter\n} from 'react-router';\nimport { injectIntl } from 'react-intl';\nimport {\n   Button,\n   CellDetail,\n   Decimal,\n   Dialog,\n   InputGroup,\n   LayoutProfile,\n   ModalRequired,\n   Nav,\n   Portal,\n   Skeleton,\n   Listbox,\n   InputOtp,\n   Image,\n} from 'components';\n// import { Listbox } from '@headlessui/react'\nimport {\n   alertPush,\n   beneficiariesFetch,\n   beneficiariesCreate,\n   beneficiariesDelete,\n   beneficiariesResendPin,\n   beneficiariesActivate,\n   beneficiariesDataUpdate,\n   selectBeneficiaries,\n   selectBeneficiariesFetchLoading,\n   selectWallets,\n   walletsFetch,\n   memberLevelsFetch,\n   selectCurrentColorTheme,\n   MemberLevels,\n   selectMemberLevels,\n   BeneficiariesCreate,\n   BeneficiaryBank,\n   selectBeneficiariesDeleteLoading,\n   selectBeneficiariesDeleteSuccess,\n   selectBeneficiariesCreateLoading,\n   selectBeneficiariesCreateSuccess,\n   selectBeneficiariesActivateLoading,\n   selectBeneficiariesResendPinLoading,\n   selectBeneficiariesActivateSuccess,\n   selectBeneficiariesCreate,\n   walletsWithdrawCcyFetch,\n   WalletsWithdrawCcyFetch,\n   withdrawLimitFetch,\n   selectWithdrawLimit,\n   WithdrawLimit,\n   selectUserInfo,\n   User,\n   WithdrawLimits,\n   selectWithdrawLimits,\n   selectWithdrawSuccess,\n} from 'modules';\nimport type {\n   Beneficiary,\n   RootState,\n   Wallet,\n} from 'modules';\nimport {\n   arrayFilter,\n   cleanPositiveFloatInput,\n   copyToClipboard,\n   precisionRegExp,\n   renderCurrencyIcon,\n   scrollTo,\n   setDocumentTitle,\n   truncateMiddle\n} from 'helpers';\nimport {\n   IcEmty,\n   IcShorting\n} from 'assets';\nimport { SearchIcon } from '@heroicons/react/outline';\nimport { IntlProps } from 'index';\nimport { useForm, useModal } from 'hooks';\nimport { toast } from 'react-toastify';\nimport { getCurrencies, validate } from 'multicoin-address-validator';\nimport { defaultBeneficiary } from 'screens/WalletDetails/types';\n\ntype State = {\n   accountName: string;\n   accountNumber: string;\n   bank?: string;\n   address: string;\n   label: string;\n   description?: string;\n   destinationTag?: string;\n}\n\ntype ReduxProps = {\n   user: User;\n   theme: string;\n   wallets: Wallet[];\n   beneficiary: Beneficiary;\n   beneficiaries: Beneficiary[];\n   beneficiariesLoading: boolean;\n   beneficiariesCreateLoading: boolean;\n   beneficiariesCreateSuccess: boolean;\n   beneficiariesActivateLoading: boolean;\n   beneficiariesActivateSuccess: boolean;\n   beneficiariesDeleteLoading: boolean;\n   beneficiariesDeleteSuccess: boolean;\n   beneficiariesResendLoading: boolean;\n   memberLevels?: MemberLevels;\n   withdrawLimits: WithdrawLimits[];\n   withdrawLimit: WithdrawLimit;\n   withdrawSuccess: boolean;\n}\n\ntype OwnProps = {\n   location: {\n      state: {\n         wallet: Wallet;\n      };\n   };\n}\n\ninterface DispatchProps {\n   fecthWallets: typeof walletsFetch;\n   fetchMemberLevel: typeof memberLevelsFetch;\n   fetchBeneficiaries: typeof beneficiariesFetch;\n   createBeneficiary: typeof beneficiariesCreate;\n   updateBeneficiary: typeof beneficiariesDataUpdate;\n   activateBeneficiary: typeof beneficiariesActivate;\n   deleteBeneficiary: typeof beneficiariesDelete;\n   resendBeneficiary: typeof beneficiariesResendPin;\n   withdrawCcy: typeof walletsWithdrawCcyFetch;\n   withdrawLimitFetch: typeof withdrawLimitFetch;\n   fetchSuccess: typeof alertPush;\n}\n\ntype StateWithdraw = {\n   amount: string;\n   otp: string;\n   total: string;\n   amountError: boolean;\n}\n\ntype WithdrawalProps = ReduxProps & OwnProps & DispatchProps & RouterProps & IntlProps;\n\nconst WithdrawalFC = memo(({\n   user,\n   theme,\n   wallets,\n   beneficiary,\n   beneficiaries,\n   beneficiariesLoading,\n   beneficiariesCreateLoading,\n   beneficiariesCreateSuccess,\n   beneficiariesActivateLoading,\n   beneficiariesActivateSuccess,\n   beneficiariesDeleteLoading,\n   beneficiariesDeleteSuccess,\n   beneficiariesResendLoading,\n   memberLevels,\n   withdrawLimits,\n   withdrawLimit,\n   withdrawSuccess,\n   location,\n   fecthWallets,\n   fetchMemberLevel,\n   fetchBeneficiaries,\n   createBeneficiary,\n   updateBeneficiary,\n   activateBeneficiary,\n   deleteBeneficiary,\n   resendBeneficiary,\n   withdrawCcy,\n   withdrawLimitFetch,\n   fetchSuccess,\n   history,\n   intl\n}: WithdrawalProps) => {\n   let userWallets = wallets.length ? wallets.filter(wallet => wallet.networks.length) : [];\n\n   const { isShow, toggle } = useModal();\n   const [stepActive, setStepActive] = useState(1);\n   const [walletActive, setWalletActive] = useState<Wallet['currency']>('');\n   const [networkActive, setNetworkActive] = useState('');\n   const [searchMarket, setSearchMarket] = useState('');\n   const [pin, setPin] = useState('');\n\n   const [selectedNetwork, setSelectedNetwork] = useState(userWallets[0]?.networks[0]);\n   const [listNetwork, setListNetwork] = useState(userWallets[0]?.networks);\n   const [coinAddressValid, setCoinAddressValid] = useState(false);\n\n   const [id, setId] = useState(0);\n   const [modalDelete, setModalDelete] = useState(false);\n   const [modalConfirm, setModalConfirm] = useState(false);\n   const [modalConfirmWD, setModalConfirmWD] = useState(false);\n   const [isOpenBeneficiary, setIsOpenBeneficiary] = useState(false);\n   const [showModalSuccessPurchased, setShowModalSuccessPurchased] = useState(false);\n\n   const [{ address, label, description, destinationTag }, setField, setNewField] = useForm<State>({\n      accountName: '',\n      accountNumber: '',\n      bank: '',\n      address: '',\n      label: '',\n      description: '',\n      destinationTag: '',\n   });\n   const [state, setState] = useState<StateWithdraw>({\n      amount: '',\n      otp: '',\n      total: '',\n      amountError: false,\n   });\n\n   const { amount, otp } = state\n\n   const mainRef = useRef<HTMLDivElement>(null);\n\n   const resetField = () => {\n      setNewField({\n         address: '',\n         label: '',\n         description: ''\n      });\n   }\n\n   const resetFieldWD = () => {\n      setState({\n         amount: '',\n         otp: '',\n         total: '',\n         amountError: false,\n      })\n   }\n\n   useEffect(() => {\n      setDocumentTitle(`Withdrawal ${stepActive === 1 ? '' : userWallets[0]?.name.toUpperCase()}`);\n      fetchMemberLevel();\n      if (location.state?.wallet) {\n         setStepActive(2);\n         setSelectedNetwork(location.state?.wallet.networks[0]);\n         setListNetwork(location.state?.wallet.networks);\n         setWalletActive(location.state?.wallet.currency);\n         scrollTo(mainRef.current?.offsetTop);\n      }\n   }, []);\n\n   useEffect(() => {\n      if (!wallets.length) {\n         fecthWallets()\n      }\n   }, [wallets]);\n\n   useEffect(() => {\n      if (stepActive === 2) {\n         fetchBeneficiary();\n         setSelectedNetwork(userWallets[0]?.networks[0]);\n         setListNetwork(userWallets[0]?.networks);\n      }\n   }, [stepActive]);\n\n   useEffect(() => {\n      if (beneficiaries) {\n         setNetworkActive(beneficiaries[0]?.blockchain_key);\n      }\n   }, [beneficiaries]);\n\n   useEffect(() => {\n      if (listNetwork) {\n         if (address) {\n            validateCoinAddressFormat(address);\n         }\n      }\n   }, [listNetwork]);\n\n   useEffect(() => {\n      if (beneficiariesDeleteSuccess) {\n         if (modalDelete) {\n            fetchBeneficiary();\n            setModalDelete(!modalDelete);\n         }\n      }\n   }, [beneficiariesDeleteSuccess]);\n\n   useEffect(() => {\n      if (beneficiariesCreateSuccess) {\n         if (isOpenBeneficiary) {\n            handleShowBeneficiary();\n            resetField();\n            handleShowModalConfirm();\n         }\n      }\n      if (beneficiariesActivateSuccess) {\n         if (modalConfirm) {\n            handleShowModalConfirm();\n            resetField();\n            setPin('');\n         }\n      }\n      if (pin.length === 6) {\n         handleConfirmActivate();\n      }\n\n      if (!isOpenBeneficiary) {\n         resetField();\n      }\n   }, [beneficiariesCreateSuccess, beneficiariesActivateSuccess, isOpenBeneficiary, pin]);\n\n   useEffect(() => {\n      if (withdrawSuccess) {\n         handleShowModalConfirmWD();\n         handleSetShowModalSuccessPurchased();\n         resetFieldWD();\n      }\n   }, [withdrawSuccess]);\n\n   const fetchBeneficiary = () => fetchBeneficiaries({ currency_id: userWallets[0]?.currency ? userWallets[0]?.currency : location.state?.wallet.currency });\n\n   const handleConfirmActivate = () => activateBeneficiary({ id: id ? id : beneficiary.id, pin });\n\n   const translate = (id: string) => intl.formatMessage({ id });\n\n   const handleWithdraw = () => {\n      const payload: WalletsWithdrawCcyFetch['payload'] = {\n         beneficiary_id: String(beneficiaries.find(e => e.id === id)?.id),\n         amount,\n         currency: userWallets[0].currency,\n         otp\n      }\n      console.log('payload :>> ', payload);\n      withdrawCcy(payload)\n   }\n\n   if (searchMarket) {\n      userWallets = userWallets.length ? arrayFilter(userWallets, searchMarket) : [];\n   }\n\n   if (walletActive) {\n      userWallets = userWallets.length ? userWallets.filter(wallet => wallet.currency === walletActive) : [];\n   }\n\n   let filteredBeneficiary = beneficiaries || [defaultBeneficiary];\n\n   if (networkActive) {\n      filteredBeneficiary = filteredBeneficiary.length ? filteredBeneficiary.filter(e => e.blockchain_key === networkActive) : []\n   }\n\n   const handleToStepBeneficiary = (currency: Wallet['currency']) => {\n      setStepActive(2);\n      setWalletActive(currency);\n      scrollTo(mainRef.current?.offsetTop);\n   }\n   const handleToStepInfo = (id: number) => {\n      if (beneficiaries.find(e => e.id === id && e.state === 'pending')) {\n         handleShowModalConfirm();\n      } else {\n         setStepActive(3);\n         scrollTo(mainRef.current?.offsetTop);\n         withdrawLimitFetch();\n      }\n      setId(id);\n   }\n\n   const withdrawLimited = withdrawLimits.find(e => Number(e.kyc_level) === user.level) ? withdrawLimits.find(e => Number(e.kyc_level) === user.level) : withdrawLimits[0];\n   const network = userWallets[0]?.networks.find(e => e.blockchain_key === filteredBeneficiary?.find(e => e.id === id)?.blockchain_key);\n   const currency = userWallets[0]?.currency;\n   const withdrawFee = Decimal.format(network?.withdraw_fee, userWallets[0]?.fixed, ',');\n   const withdrawMinAmount = Decimal.format(network?.min_withdraw_amount, userWallets[0]?.fixed, ',');\n   const withdrawLimit24H = Decimal.format(Number(withdrawLimited?.limit_24_hour) - Number(withdrawLimit?.last_24_hours), userWallets[0]?.fixed, ',');\n   const withdrawLimit1M = Decimal.format(Number(withdrawLimited?.limit_1_month) - Number(withdrawLimit?.last_1_month), userWallets[0]?.fixed, ',');\n\n   const handleChangeAmount = (value: string) => {\n      const convertedValue = cleanPositiveFloatInput(value);\n      const fixed = userWallets[0]?.fixed;\n      const balance = userWallets[0]?.balance;\n      if (convertedValue.match(precisionRegExp(fixed))) {\n         const amount = (convertedValue !== '') ? Number(parseFloat(convertedValue).toFixed(fixed)) : '';\n         const total = amount !== '' ? (amount - Number(withdrawFee)).toFixed(fixed) : '';\n         console.log('convertedValue :>> ', convertedValue);\n         console.log('balance :>> ', userWallets[0]?.balance);\n         setState({\n            ...state,\n            amount: convertedValue,\n            amountError: Number(balance) < Number(convertedValue) ? true : false,\n            total: Number(total) > 0 ? total : (0).toFixed(fixed),\n         });\n      }\n   }\n   const handleChangeOtp = (otp: string) => setState({\n      ...state,\n      otp: otp.replace(/\\D/g, '')\n   });\n\n   const handleSetShowModalSuccessPurchased = () => setShowModalSuccessPurchased(!showModalSuccessPurchased);\n   const handleShowBeneficiary = () => setIsOpenBeneficiary(prev => !prev);\n   const handleShowModalDelete = (id: number) => {\n      setModalDelete(!modalDelete);\n      setId(id);\n   };\n\n   const handleShowModalConfirm = () => setModalConfirm(!modalConfirm);\n   const handleShowModalConfirmWD = () => setModalConfirmWD(!modalConfirmWD);\n\n   const isDisabled = () => {\n      const withdrawEnabled = selectedNetwork?.withdrawal_enabled;\n      return !withdrawEnabled || !address || !label || coinAddressValid;\n   }\n   const isDisbaledWithdraw = () => {\n      const limit = Number(withdrawLimited?.limit_24_hour) - Number(withdrawLimit?.last_24_hours);\n      const tax = Number(network?.withdraw_fee) + Number(network?.min_withdraw_amount);\n      const balance = userWallets[0]?.balance;\n      return limit < tax || !amount || otp.length < 6 || Number(balance) < Number(amount);\n   }\n\n   const renderAsset = useMemo(() => (\n      <>\n         <div className=\"mb-5 text-2xl leading-custom2 font-semibold tracking-custom1\">\n            Select crypto\n         </div>\n         <form className=\"relative shrink-0 mb-10\">\n            <InputGroup\n               placeholder=\"Search coin\"\n               onChange={setSearchMarket}\n               autoFocus\n               icon={\n                  <SearchIcon className=\"w-5 h-5 stroke-neutral4 transition-all duration-300\" />\n               }\n            />\n            <button\n               type=\"button\"\n               className=\"absolute top-0 right-0 h-12 w-12 bg-none flex items-center justify-center\"\n            >\n               <SearchIcon className=\"w-5 h-5 stroke-neutral4 transition-all duration-300\" />\n            </button>\n         </form>\n         <div className=\"overflow-x-auto\">\n            <table className=\"w-full table-auto\">\n               <thead>\n                  <tr>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer\">\n                           <div>#</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer\">\n                           <div>Name</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4 text-right\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer justify-end\">\n                           <div>Balance</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {userWallets.length ? userWallets.map((userWallet, index) => (\n                     <tr\n                        key={userWallet.currency}\n                        style={{ transition: 'background .2s' }}\n                        className=\"group\"\n                        onClick={() => {\n                           if ((userWallet.type === 'fiat' && Number(memberLevels?.withdraw.minimum_level) < 4)) {\n                              toggle();\n                           } else {\n                              handleToStepBeneficiary(userWallet.currency);\n                           }\n                        }}\n                     >\n                        <td className=\"rounded-l-xl text-neutral4 align-middle font-semibold text-xs p-4 leading-custom4 group-hover:bg-neutral7 dark:group-hover:bg-neutral2 transition-all duration-300\">\n                           <div className=\"flex space-x-2 items-center\">\n                              <svg className=\"w-4 h-4 fill-neutral4 hover:fill-secondary3 transition-all duration-300\">\n                                 <use xlinkHref=\"#icon-star-outline\"></use>\n                              </svg>\n                              <div>{index + 1}</div>\n                           </div>\n                        </td>\n                        <td className=\"p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 transition-all duration-300\">\n                           <div className=\"flex space-x-3 items-center\">\n                              <div className=\"shrink-0 w-8\">\n                                 <Image\n                                    className={`w-full ${renderCurrencyIcon(userWallet.currency, userWallet.iconUrl)?.includes('http') ? 'polygon' : ''}`}\n                                    src={renderCurrencyIcon(userWallet.currency, userWallet.iconUrl)}\n                                    alt={userWallet.name}\n                                    title={userWallet.name}\n                                    height={40}\n                                    width={40}\n                                 />\n                              </div>\n                              <div className=\"flex items-center space-x-1\">\n                                 <div>{userWallet.name}</div>\n                                 <div className=\"font-normal text-neutral4 uppercase\">{userWallet.currency}</div>\n                              </div>\n                           </div>\n                        </td>\n                        <td className=\"rounded-r-xl p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 text-right transition-all duration-300\">\n                           <div>{Decimal.format(userWallet.balance, userWallet.fixed, ',')}</div>\n                        </td>\n                     </tr>\n                  )) : (\n                     <tr>\n                        <td colSpan={3}>\n                           <div className=\"min-h-96 flex flex-col items-center justify-center space-y-3 transition-transform duration-1000\">\n                              <IcEmty className={theme === 'dark' ? 'brightness-75' : ''} />\n                              <div className=\"text-xs font-semibold text-neutral4\">\n                                 {translate('noResultFound')}\n                              </div>\n                           </div>\n                        </td>\n                     </tr>\n                  )}\n               </tbody>\n            </table>\n         </div>\n      </>\n   ), [userWallets, setSearchMarket, searchMarket]);\n\n   const renderBeneficiary = useMemo(() => (\n      <div className=\"space-y-8\">\n         <div className=\"flex items-center justify-between\">\n            <button\n               type=\"button\"\n               onClick={() => {\n                  setStepActive(1);\n                  setNetworkActive('');\n                  setWalletActive('');\n               }}\n               className=\"group flex items-center text-2xl font-semibold leading-custom2 tracking-custom1\"\n            >\n               <svg className=\"w-3.5 h-3.5 mr-4 fill-neutral4 group-hover:-translate-x-1 transition-all duration-300\">\n                  <use xlinkHref=\"#icon-arrow-prev\" />\n               </svg>\n               Select beneficiaries\n            </button>\n            <div className=\"flex items-center text-base font-medium\">\n               {userWallets[0]?.name || ''}\n               <img\n                  src={renderCurrencyIcon(userWallets[0]?.currency, userWallets[0]?.iconUrl)}\n                  className={`w-6 ml-3 ${renderCurrencyIcon(userWallets[0]?.currency, userWallets[0]?.iconUrl)?.includes('http') ? 'polygon' : ''}`}\n                  alt={userWallets[0]?.name}\n                  title={userWallets[0]?.name}\n               />\n            </div>\n         </div>\n         <div className=\"space-x-4 hidden\">\n            {userWallets[0]?.networks.map(network => (\n               <Button\n                  key={network.blockchain_key}\n                  text={network.protocol}\n                  size=\"small\"\n                  width=\"noFull\"\n                  rounded=\"lg\"\n                  fontDM={false}\n                  variant={networkActive === network.blockchain_key ? \"primary\" : \"outline\"}\n                  onClick={() => setNetworkActive(network.blockchain_key)}\n               />\n            ))}\n         </div>\n         <div className=\"\">\n            <div className=\"flex space-x-4\">\n               {userWallets[0]?.networks.map(network => (\n                  <Nav\n                     key={network.blockchain_key}\n                     title={network.protocol}\n                     onClick={() => setNetworkActive(network.blockchain_key)}\n                     theme=\"grey\"\n                     className=\"px-5\"\n                     isActive={networkActive === network.blockchain_key ? true : false}\n                  />\n               ))}\n            </div>\n         </div>\n         <div className=\"overflow-x-auto\">\n            <table className=\"w-full table-auto\">\n               <thead>\n                  <tr>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer\">\n                           <div>#</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer\">\n                           <div>Label</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer\">\n                           <div>Address</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer\">\n                           <div>Status</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4 text-right\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer justify-end\">\n                           <div>Action</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {beneficiariesLoading ? (\n                     <>\n                        <tr>\n                           <td colSpan={5} className=\"px-4 py-3 last:pb-0\">\n                              <Skeleton height={20} isWithFull rounded=\"md\" />\n                           </td>\n                        </tr>\n                        <tr>\n                           <td colSpan={5} className=\"px-4 py-3 last:pb-0\">\n                              <Skeleton height={20} isWithFull rounded=\"md\" />\n                           </td>\n                        </tr>\n                        <tr>\n                           <td colSpan={5} className=\"px-4 py-3 last:pb-0\">\n                              <Skeleton height={20} isWithFull rounded=\"md\" />\n                           </td>\n                        </tr>\n                     </>\n                  ) : filteredBeneficiary.length ? filteredBeneficiary.map(({ id, name, data: { address }, state, currency }, index) => (\n                     <tr\n                        key={index}\n                        style={{ transition: 'background .2s' }}\n                        className=\"group\"\n                     >\n                        <td\n                           onClick={() => handleToStepInfo(id)}\n                           className=\"rounded-l-xl text-neutral4 align-middle font-semibold text-xs p-4 leading-custom4 group-hover:bg-neutral7 dark:group-hover:bg-neutral2 transition-all duration-300\"\n                        >\n                           <div>{index + 1}</div>\n                        </td>\n                        <td\n                           onClick={() => handleToStepInfo(id)}\n                           className=\"p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 transition-all duration-300\"\n                        >\n                           <div>{name}</div>\n                        </td>\n                        <td\n                           onClick={() => handleToStepInfo(id)}\n                           className=\"p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 transition-all duration-300\"\n                        >\n                           <div>{truncateMiddle(String(address), 20)}</div>\n                        </td>\n                        <td\n                           onClick={() => handleToStepInfo(id)}\n                           className=\"p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 transition-all duration-300\"\n                        >\n                           <div className={state === 'active' ? 'text-primary5 dark:text-chart1' : 'text-primary4'}>{state}</div>\n                        </td>\n                        <td className=\"rounded-r-xl p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 text-right transition-all duration-300\">\n                           <div className=\"flex justify-end items-center\">\n                              <svg\n                                 onClick={() => handleShowModalDelete(id)}\n                                 className=\"w-6 h-6 fill-primary4 transition-colors duration-300 cursor-pointer\"\n                              >\n                                 <use xlinkHref=\"#icon-close-circle\" />\n                              </svg>\n                           </div>\n                        </td>\n                     </tr>\n                  )) : (\n                     <tr>\n                        <td colSpan={5}>\n                           <div className=\"min-h-96 flex flex-col items-center justify-center space-y-3\">\n                              <IcEmty />\n                              <div className=\"text-xs font-semibold text-neutral4\">\n                                 {translate('noResultFound')}\n                              </div>\n                           </div>\n                        </td>\n                     </tr>\n                  )}\n               </tbody>\n            </table>\n         </div>\n         <div className=\"text-center\">\n            <Button\n               text=\"Create beneficiary\"\n               width=\"noFull\"\n               onClick={handleShowBeneficiary}\n            />\n         </div>\n      </div >\n   ), [setStepActive, setNetworkActive, setWalletActive, userWallets, networkActive, filteredBeneficiary, beneficiariesLoading, handleShowBeneficiary, handleShowModalDelete, handleToStepInfo]);\n\n   const renderWithdrawInfo = useMemo(() => (\n      <>\n         <div className=\"flex items-center justify-between mb-16\">\n            <button onClick={() => {\n               setStepActive(2);\n               setState({ amount: '', amountError: false, otp: '', total: '' });\n            }} type=\"button\" className=\"group flex items-center text-2xl font-semibold leading-custom2 tracking-custom1\">\n               <svg className=\"w-3.5 h-3.5 mr-4 fill-neutral4 group-hover:-translate-x-1 transition-all duration-300\">\n                  <use xlinkHref=\"#icon-arrow-prev\"></use>\n               </svg>\n               Withdraw info\n            </button>\n            <div className=\"flex items-center text-base font-medium\">\n               {userWallets[0]?.name || ''}\n               <Image\n                  src={renderCurrencyIcon(userWallets[0]?.currency, userWallets[0]?.iconUrl)}\n                  className={`w-6 ml-3 ${renderCurrencyIcon(userWallets[0]?.currency, userWallets[0]?.iconUrl)?.includes('http') ? 'polygon' : ''}`}\n                  alt={userWallets[0]?.name}\n                  title={userWallets[0]?.name}\n                  height={40}\n                  width={40}\n               />\n            </div>\n         </div>\n         <div className=\"space-y-12\">\n            <div className=\"flex py-6 px-9 rounded-2xl bg-neutral7 dark:bg-neutral2\">\n               <div className=\"w-1/2\">\n                  <div className=\"flex space-x-2.5\">\n                     <div className=\"flex justify-center items-center shrink-0 w-10 h-10 rounded-full bg-primary3\">\n                        <svg className=\"w-5 h-5 fill-neutral8\">\n                           <use xlinkHref=\"#icon-wallet\"></use>\n                        </svg>\n                     </div>\n                     <div>\n                        <div className=\"text-xs text-neutral4 leading-custom4\">\n                           Available balance\n                        </div>\n                        <div className=\"font-medium uppercase\">\n                           {Decimal.format(userWallets[0]?.balance, userWallets[0]?.fixed, ',')} {userWallets[0]?.currency}\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"w-1/2\">\n                  <div className=\"flex space-x-2.5\">\n                     <div className=\"flex justify-center items-center shrink-0 w-10 h-10 rounded-full bg-primary5 dark:bg-chart1\">\n                        <svg className=\"w-5 h-5 fill-neutral8\">\n                           <use xlinkHref=\"#icon-lock\"></use>\n                        </svg>\n                     </div>\n                     <div>\n                        <div className=\"text-xs text-neutral4 leading-custom4\">\n                           Locked\n                        </div>\n                        <div className=\"font-medium uppercase\">\n                           {Decimal.format(userWallets[0]?.locked, userWallets[0]?.fixed, ',')} {userWallets[0]?.currency}\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"space-y-8\">\n               <InputGroup\n                  id=\"withdraw-address\"\n                  label=\"Withdraw address\"\n                  placeholder={filteredBeneficiary?.find(e => e.id === id)?.data?.address}\n                  disabled\n               />\n               <div className=\"flex space-x-4 justify-between\">\n                  <InputGroup\n                     id=\"withdraw-amount\"\n                     label=\"Withdraw amount\"\n                     placeholder=\"0.0\"\n                     value={state.amount}\n                     onChange={handleChangeAmount}\n                     withError={state.amountError}\n                     info={state.amountError ? translate('account.withdraw.insufficient_balance') : ''}\n                     parentClassName=\"w-full\"\n                     autoFocus\n                  />\n                  <InputGroup\n                     id=\"2fa-code\"\n                     label=\"2fa code\"\n                     placeholder=\"123456\"\n                     value={state.otp}\n                     onChange={handleChangeOtp}\n                     maxLength={6}\n                     parentClassName=\"w-full\"\n                  />\n               </div>\n            </div>\n            <div className=\"space-y-3\">\n               <div className=\"flex justify-between pb-3 border-b border-neutral6 text-base font-medium dark:border-neutral3\">\n                  <div onClick={handleWithdraw}>Total</div>\n                  <div className=\"uppercase\">\n                     {Decimal.format(state.total, userWallets[0]?.fixed, '')} {currency}\n                  </div>\n               </div>\n               <CellDetail\n                  title=\"Fee\"\n                  value={`${withdrawFee} ${currency}`}\n               />\n               <CellDetail\n                  title=\"Minimum withdraw\"\n                  value={`${withdrawMinAmount} ${currency}`}\n               />\n               <CellDetail\n                  title=\"Daily limit\"\n                  value={`${withdrawLimit24H} ${currency}`}\n               />\n               <CellDetail\n                  title=\"Monthly limit\"\n                  value={`${withdrawLimit1M} ${currency}`}\n               />\n            </div>\n            <div className=\"flex justify-between mt-12\">\n               <Button\n                  width=\"noFull\"\n                  text=\"Cancel\"\n                  variant=\"outline\"\n                  onClick={() => {\n                     setStepActive(1)\n                     setNetworkActive('');\n                     setWalletActive('');\n                  }}\n               />\n               <Button\n                  width=\"noFull\"\n                  text=\"I understand, continue\"\n                  disabled={isDisbaledWithdraw()}\n                  onClick={handleShowModalConfirmWD}\n               />\n            </div>\n         </div>\n      </>\n   ), [userWallets, state, handleChangeAmount, handleChangeOtp, id]);\n\n   const isRipple = userWallets[0]?.currency === 'xrp';\n   const handleCreateBeneficiary = () => {\n      const payloadCoin: BeneficiariesCreate['payload'] = {\n         currency: userWallets[0]?.currency,\n         blockchain_key: selectedNetwork.blockchain_key || '',\n         name: label,\n         data: JSON.stringify({\n            address: ((isRipple && destinationTag) ? `${address}?dt=${destinationTag}` : address)\n         }),\n         ...(description && { description })\n      }\n      const dataBeneficiary: BeneficiaryBank = {\n         full_name: '',\n         account_number: '',\n         bank_name: '',\n         bank_swift_code: '',\n         intermediary_bank_name: '',\n         intermediary_bank_swift_code: '',\n      }\n      const payloadFiat: BeneficiariesCreate['payload'] = {\n         currency: userWallets[0]?.currency,\n         name: label,\n         data: JSON.stringify(dataBeneficiary),\n         ...(description && { description })\n      }\n\n      createBeneficiary(userWallets[0]?.type === 'coin' ? payloadCoin : payloadFiat);\n   }\n   const handleCopy = (url: string, type: string) => {\n      copyToClipboard(url);\n      toast.info(`${type} Copied`);\n   };\n   const renderIconCopied = (title: string) => (\n      <button\n         className=\"cursor-copy group\"\n         onClick={() => handleCopy(address, title)}\n         title=\"Address referral\"\n      >\n         <svg className=\"w-6 h-6 group-hover:scale-110 fill-neutral4 group-hover:fill-neutral3 dark:group-hover:fill-neutral5 transition-transform duration-200\">\n            <use xlinkHref=\"#icon-copy\" />\n         </svg>\n      </button>\n   );\n   const validateCoinAddressFormat = (value: string) => {\n      if (getCurrencies().some(currency => currency.symbol === userWallets[0]?.currency)) {\n         const valid = validate(value, userWallets[0]?.currency, 'mainnet');\n         setCoinAddressValid(valid ? false : true);\n      }\n   };\n   const renderModalBeneficiary = useMemo(() => (\n      <>\n         {userWallets[0]?.type === 'coin' && (\n            <>\n               {userWallets[0]?.networks.filter(e => e?.protocol !== '').length && (\n                  <Listbox\n                     label=\"Network\"\n                     objectKey=\"protocol\"\n                     list={selectedNetwork}\n                     lists={userWallets[0]?.networks}\n                     onChange={setSelectedNetwork}\n                     info={!selectedNetwork?.withdrawal_enabled ? 'This network disabled' : ''}\n                  />\n               )}\n               {/* <Listbox\n                  value={selectedNetwork}\n                  onChange={setSelectedNetwork}\n               >\n                  <div className=\"relative\">\n                     <div className=\"space-y-2.5\">\n                        <div className=\"text-xs text-neutral5 leading-none font-bold uppercase\">\n                           Network\n                        </div>\n                        <Listbox.Button className={({ open }) => `relative w-full h-12 pl-4 pr-12 shadow-input outline-none ${open ? 'shadow-dropdown-1' : 'dark:shadow-border-dark'} bg-neutral8 dark:bg-neutral2 rounded-xl border-none font-medium leading-12 text-left transition-shadow duration-200 before:content-[''] before:absolute before:top-1/2 before:right-2 before:h-6 before:w-6 before:-translate-y-1/2 before:rounded-full before:transition-transform before:duration-200 before:icon-arrow ${open ? 'before:rotate-180' : ''}`}>\n                           <span className=\"block truncate font-medium\">\n                              {selectedNetwork?.protocol}\n                           </span>\n                        </Listbox.Button>\n                     </div>\n                     <Listbox.Options className={({ open }) => `absolute max-h-40 w-full overflow-auto z-[9] mt-0.5 rounded-xl outline-none bg-neutral8 dark:bg-neutral1 border-2 border-neutral6 dark:border-neutral1 shadow-dropdown-2 dark:shadow-dropdown-3 ${open ? 'opacity-100 visible scale-100 translate-y-0' : 'opacity-0 invisible scale-75 -translate-y-20'} transition-all duration-200`} style={{ transformOrigin: '50% 0' }}>\n                        {listNetwork?.map((wallet, index) => (\n                           <Listbox.Option\n                              key={index}\n                              className={({ active }) => `px-3.5 py-2.5 leading-[1.4] font-medium ${active ? 'bg-neutral7 dark:bg-neutral2' : ''} transition-all duration-200`}\n                              value={wallet}\n                           >\n                              {({ selected }) => (\n                                 <span className={`block truncate ${selected ? 'text-primary1' : ''}`}>\n                                    {wallet.protocol}\n                                 </span>\n                              )}\n                           </Listbox.Option>\n                        ))}\n                     </Listbox.Options>\n                  </div>\n               </Listbox> */}\n               <InputGroup\n                  id=\"address\"\n                  label=\"Address\"\n                  placeholder=\"1AF44SoxqtS5o4dLCzzwwJ9Js6AfknFvHb\"\n                  value={address}\n                  onChange={validateCoinAddressFormat}\n                  onChangeAlt={setField}\n                  icon={renderIconCopied('Address')}\n                  className=\"truncate\"\n                  withError={coinAddressValid}\n                  info={coinAddressValid && 'Invalid Address' || ''}\n               />\n            </>\n         )}\n         <InputGroup\n            id=\"label\"\n            label=\"Label\"\n            placeholder=\"Beneficiary name\"\n            value={label}\n            onChangeAlt={setField}\n         />\n         {userWallets[0]?.type === 'coin' && (\n            <InputGroup\n               id=\"description\"\n               label=\"Description\"\n               placeholder=\"Description\"\n               value={description}\n               onChangeAlt={setField}\n            />\n         )}\n         {isRipple && (\n            <InputGroup\n               id=\"destinationTag\"\n               label=\"Description\"\n               value={destinationTag}\n               onChangeAlt={setField}\n               placeholder=\"Enter destination tag (optional)\"\n            />\n         )}\n         <div className=\"bg-neutral7 dark:bg-neutral3 py-5 px-6 rounded text-center\">\n            <div className=\"text-base leading-normal font-medium\">\n               Attention\n            </div>\n            <div className=\"text-neutral4\">\n               Please note that transaction to wrong network and address will cause your asset to permanently lost, so fill correctly.\n            </div>\n         </div>\n         <Button\n            text=\"Create\"\n            onClick={handleCreateBeneficiary}\n            disabled={isDisabled()}\n            withLoading={beneficiariesCreateLoading}\n         />\n      </>\n   ), [selectedNetwork, setSelectedNetwork, userWallets, listNetwork, address, label, description, destinationTag, setField, handleCreateBeneficiary])\n\n   const renderModalDetail = () => (\n      <div className=\"mt-10 space-y-8\">\n         <div className=\"text-5xl text-center font-dm font-bold leading-custom1 tracking-custom\">Yay! 🎉</div>\n         <div className=\"max-w-71.25 mx-auto text-center text-base font-medium leading-normal\">\n            You successfully purchased <span className=\"text-primary5\">0.020202 BTC</span>  from Digiasset\n         </div>\n         <div className=\"flex flex-wrap p-6 rounded-xl border border-neutral6 dark:border-neutral3\">\n            <div className=\"mr-auto space-y-2.5\">\n               <div className=\"text-neutral4\">Status</div>\n               <div className=\"font-medium text-primary5\">Completed</div>\n            </div>\n            <div className=\"space-y-2.5\">\n               <div className=\"text-neutral4\">Transaction ID</div>\n               <div className=\"font-medium\">0msx836930...87r398</div>\n            </div>\n         </div>\n         <div className=\"flex space-x-4\">\n            <Button\n               text=\"Trade\"\n               onClick={() => history.push(`trading/${userWallets[0]?.currency || 'btcidr'}`)}\n               variant=\"outline\"\n            />\n            <Button\n               text=\"Wallets\"\n               onClick={() => history.push('/wallets')}\n            />\n         </div>\n      </div>\n   )\n\n   const renderContentDeleted = () => (\n      <div className=\"pt-10 space-y-8\">\n         <div className=\"space-y-3\">\n            <div className=\"font-dm text-2xl leading-9 text-center tracking-custom\">\n               Sure delete?\n            </div>\n            <div className=\"max-w-82 mx-auto text-center text-xs text-neutral4 leading-5\">\n               you will remove the beneficiary by name <span className=\"font-semibold text-primary4\">{beneficiaries.find(e => e.id === id)?.name}</span>\n            </div>\n         </div>\n         <Button\n            text=\"Confirm\"\n            withLoading={beneficiariesDeleteLoading}\n            onClick={() => deleteBeneficiary({ id })}\n         />\n      </div>\n   );\n   const handleActivate = () => activateBeneficiary({ id, pin });\n\n   const renderContentActivate = () => (\n      <div className=\"pt-10 space-y-8\">\n         <div className=\"space-y-3\">\n            <div className=\"font-dm text-2xl leading-9 text-center tracking-custom\">\n               Beneficiaries Activation\n            </div>\n            <div className=\"max-w-82 mx-auto text-center text-xs text-neutral4 leading-5\">\n               Save the new address, Please enter the code that we sent to your email.\n            </div>\n         </div>\n         <InputOtp\n            length={6}\n            className=\"flex -mx-2\"\n            isNumberInput\n            onChangeOTP={setPin}\n         />\n         <div className=\"space-y-3 text-center\">\n            <Button\n               text={'Confirm'}\n               disabled={pin.length !== 6}\n               onClick={handleActivate}\n               withLoading={beneficiariesActivateLoading}\n            />\n            <button\n               className={beneficiariesResendLoading ? '' : 'text-primary1 font-medium hover:underline hover:underline-offset-4'}\n               disabled={beneficiariesResendLoading}\n               onClick={() => resendBeneficiary({ id })}\n            >\n               {!beneficiariesResendLoading ? 'Resend code' : (\n                  <Skeleton width={100} height={20} />\n               )}\n            </button>\n         </div>\n      </div>\n   );\n\n   const render = () => {\n      switch (stepActive) {\n         case 2:\n            return renderBeneficiary;\n         case 3:\n            return renderWithdrawInfo;\n         default:\n            return renderAsset;\n      }\n   }\n\n   return (\n      <>\n         <LayoutProfile\n            title=\"Withdraw\"\n            withBreadcrumbs={{\n               display: 'Wallets',\n               href: '/wallets',\n               active: 'Withdraw',\n            }}\n         >\n            <div className=\"shrink-0 md-max:mb-6 lg-max:mb-8 mr-8 lg2:mr-12 1xl:mr-20 w-full lg:w-56 lg2:w-72 space-y-6 lg-max:hidden\">\n               <div className={`relative flex items-center space-x-4 h-12 px-2 rounded-3xl font-dm font-bold leading-custom3 transition-all duration-300 after:absolute after:content-[''] after:top-full after:left-5.75 after:h-6 after:border-l-2 after:border-dashed after:border-neutral5 ${(stepActive === 2 || stepActive === 3) && 'bg-neutral8 dark:bg-neutral2 dark:after:border-neutral4 shadow-step'}`}>\n                  <div className={`relative flex items-center justify-center w-8 h-8 rounded-full border-2 border-primary5 dark:border-chart1 ${(stepActive === 2 || stepActive === 3) && 'bidding__number bidding__number_dark'} after:absolute after:content-[''] after:top-0 after:left-0 after:w-full after:h-full after:rounded-full after:transition-opacity after:duration-200 transition-all duration-300`}>1</div>\n                  <div>Select asset</div>\n               </div>\n               <div className={`relative flex items-center space-x-4 h-12 px-2 rounded-3xl font-dm font-bold leading-custom3 transition-all duration-300 after:absolute after:content-[''] after:top-full after:left-5.75 after:h-6 after:border-l-2 after:border-dashed after:border-neutral5 ${(stepActive === 1) && 'text-neutral4'} ${(stepActive === 3) && 'bg-neutral8 dark:bg-neutral2 dark:after:border-neutral4 shadow-step'}`}>\n                  <div className={`relative flex items-center justify-center w-8 h-8 rounded-full border-2 ${(stepActive === 2 || stepActive === 3) ? 'border-primary5 dark:border-chart1' : 'border-neutral6 dark:border-neutral4'} ${(stepActive === 3) && 'bidding__number bidding__number_dark'} after:absolute after:content-[''] after:top-0 after:left-0 after:w-full after:h-full after:rounded-full after:transition-opacity after:duration-200 transition-all duration-300`}>2</div>\n                  <div>Select beneficiary</div>\n               </div>\n               <div className={`relative flex items-center space-x-4 h-12 px-2 rounded-3xl font-dm font-bold ${stepActive !== 3 && 'text-neutral4'} leading-custom3 transition-all duration-300`}>\n                  <div className={`relative flex items-center justify-center w-8 h-8 rounded-full border-2 ${stepActive === 3 ? 'border-primary5 dark:border-chart1' : 'border-neutral6 dark:border-neutral4'} transition-all duration-300`}>4</div>\n                  <div>Withdraw info</div>\n               </div>\n            </div>\n            <div\n               ref={mainRef}\n               className=\"grow p-4 md:px-8 md:py-10 lg:p-10 shadow-card2 rounded-2xl bg-neutral8 dark:bg-shade1\"\n               style={{ animationDuration: '100ms' }}\n            >\n               {render()}\n            </div>\n         </LayoutProfile>\n         <ModalRequired\n            show={isShow}\n            close={toggle}\n            push={history.push}\n         />\n         <Dialog\n            isOpen={isOpenBeneficiary}\n            setIsOpen={handleShowBeneficiary}\n            title=\"Create Beneficiary\"\n         >\n            {renderModalBeneficiary}\n         </Dialog>\n\n         <Portal\n            show={modalDelete}\n            close={handleShowModalDelete}\n         >\n            {renderContentDeleted()}\n         </Portal>\n         <Portal\n            show={modalConfirm}\n            close={handleShowModalConfirm}\n         >\n            {renderContentActivate()}\n         </Portal>\n\n         <Portal\n            show={modalConfirmWD}\n            close={handleShowModalConfirmWD}\n            title=\"Confirmation\"\n         >\n            <div className=\"space-y-2\">\n               <div className=\"text-center font-medium leading-normal\">\n                  Receive amount\n               </div>\n               <div className=\"text-center font-dm font-bold text-3.5xl leading-tight tracking-custom1\">\n                  {Decimal.format(state.total, userWallets[0]?.fixed, '')} {state.total ? userWallets[0]?.currency?.toUpperCase() : ''}\n               </div>\n            </div>\n            <div className=\"space-y-3\">\n               <CellDetail\n                  title=\"Balance\"\n                  value={Decimal.format(userWallets[0]?.balance, userWallets[0]?.fixed, ',')}\n                  rightAlt={userWallets[0]?.currency?.toUpperCase()}\n               />\n               <CellDetail\n                  title=\"Withdraw\"\n                  value={Decimal.format(state.amount, userWallets[0]?.fixed, '')}\n                  rightAlt={userWallets[0]?.currency?.toUpperCase()}\n               />\n               <CellDetail\n                  title=\"Fee\"\n                  value={withdrawFee}\n                  rightAlt={userWallets[0]?.currency?.toUpperCase()}\n               />\n               <CellDetail\n                  title=\"Currencies\"\n                  value={userWallets[0]?.name}\n               />\n               <CellDetail\n                  title=\"Address\"\n                  value={truncateMiddle(String(filteredBeneficiary?.find(e => e.id === id)?.data?.address), 20)}\n               />\n            </div>\n            <div className=\"bg-neutral7 dark:bg-neutral3 p-4 rounded-2xl space-y-3\">\n               <div className=\"text-center text-base font-medium\">\n                  Attention\n               </div>\n               <div className=\"text-xs leading-custom4\">\n                  Please note that withdrawing tokens to the wrong address will cause your asset to be permanently lost\n               </div>\n            </div>\n            <Button\n               text={translate('transfer')}\n               onClick={handleWithdraw}\n            />\n         </Portal>\n\n         <Portal\n            show={showModalSuccessPurchased}\n            close={handleSetShowModalSuccessPurchased}\n         >\n            {renderModalDetail()}\n         </Portal>\n      </>\n   );\n});\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   user: selectUserInfo(state),\n   theme: selectCurrentColorTheme(state),\n   wallets: selectWallets(state),\n   beneficiary: selectBeneficiariesCreate(state),\n   beneficiaries: selectBeneficiaries(state),\n   beneficiariesLoading: selectBeneficiariesFetchLoading(state),\n   beneficiariesCreateLoading: selectBeneficiariesCreateLoading(state),\n   beneficiariesCreateSuccess: selectBeneficiariesCreateSuccess(state),\n   beneficiariesActivateLoading: selectBeneficiariesActivateLoading(state),\n   beneficiariesActivateSuccess: selectBeneficiariesActivateSuccess(state),\n   beneficiariesDeleteLoading: selectBeneficiariesDeleteLoading(state),\n   beneficiariesDeleteSuccess: selectBeneficiariesDeleteSuccess(state),\n   beneficiariesResendLoading: selectBeneficiariesResendPinLoading(state),\n   memberLevels: selectMemberLevels(state),\n   withdrawLimits: selectWithdrawLimits(state),\n   withdrawLimit: selectWithdrawLimit(state),\n   withdrawSuccess: selectWithdrawSuccess(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   fecthWallets: () => dispatch(walletsFetch()),\n   fetchMemberLevel: () => dispatch(memberLevelsFetch()),\n   fetchBeneficiaries: params => dispatch(beneficiariesFetch(params)),\n   createBeneficiary: payload => dispatch(beneficiariesCreate(payload)),\n   updateBeneficiary: payload => dispatch(beneficiariesDataUpdate(payload)),\n   activateBeneficiary: payload => dispatch(beneficiariesActivate(payload)),\n   deleteBeneficiary: id => dispatch(beneficiariesDelete(id)),\n   resendBeneficiary: id => dispatch(beneficiariesResendPin(id)),\n   withdrawCcy: payload => dispatch(walletsWithdrawCcyFetch(payload)),\n   withdrawLimitFetch: () => dispatch(withdrawLimitFetch()),\n   fetchSuccess: payload => dispatch(alertPush(payload)),\n});\n\nexport const Withdrawal = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps)\n)(WithdrawalFC) as FunctionComponent;\n","import React, {\n   useState,\n   FunctionComponent,\n   memo,\n} from 'react';\nimport { Link } from 'react-router-dom';\nimport { RouterProps, withRouter } from 'react-router';\nimport { connect, MapDispatchToProps } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectIntl } from 'react-intl';\nimport { Decimal, WalletSidebar } from 'components';\nimport {\n   alertPush,\n   beneficiariesFetch,\n   Beneficiary,\n   currenciesFetch,\n   Currency,\n   Market,\n   RootState,\n   selectBeneficiariesActivateSuccess,\n   selectBeneficiariesCreateSuccess,\n   selectBeneficiariesDeleteSuccess,\n   selectCurrencies,\n   selectHistory,\n   selectMarkets,\n   selectMarketsLoading,\n   selectMarketTickers,\n   selectUserInfo,\n   selectUserLoggedIn,\n   selectWallets,\n   selectWalletsLoading,\n   selectWithdrawSuccess,\n   Ticker,\n   User, Wallet,\n   WalletHistoryList,\n   walletsAddressFetch,\n   walletsData,\n   walletsFetch,\n   walletsWithdrawCcyFetch\n} from 'modules';\nimport { IntlProps } from 'index';\nimport { useMarketsFetch } from 'hooks';\nimport { SearchIcon } from '@heroicons/react/outline';\nimport { ICChevronRight } from 'assets';\nimport { arrayFilter } from 'helpers';\n\n// const defaultBeneficiary: Beneficiary = {\n//    id: 0,\n//    currency: '',\n//    name: '',\n//    state: '',\n//    data: {\n//       address: ''\n//    }\n// }\n\n// const defaultWallet: Wallet = {\n//    name: '',\n//    currency: '',\n//    balance: '',\n//    type: 'coin',\n//    fixed: 0,\n//    fee: 0\n// }\n\n\ninterface State {\n   activeIndex: number;\n   currentTabIndex: number;\n   otpCode: string;\n   beneficiary: Beneficiary;\n   selectWalletIndex: number;\n   withdrawSubmitModal: boolean;\n   withdrawConfirmModal: boolean;\n   bchAddress?: string;\n   filteredWallets?: Wallet[] | null;\n   tab: string;\n   withdrawDone: boolean;\n   amount: string;\n   total: string;\n}\n\ninterface ReduxProps {\n   user: User;\n   wallets: Wallet[];\n   withdrawSuccess: boolean;\n   walletsLoading?: boolean;\n   historyList: WalletHistoryList;\n   beneficiariesActivateSuccess: boolean;\n   beneficiariesDeleteSuccess: boolean;\n   beneficiariesAddSuccess: boolean;\n   currencies: Currency[];\n   markets: Market[] | [];\n   marketLoading?: boolean;\n   marketTickers: {\n      [key: string]: Ticker;\n   };\n   isLoggedIn: boolean;\n}\n\ninterface DispatchProps {\n   fetchBeneficiaries: typeof beneficiariesFetch;\n   fetchAddress: typeof walletsAddressFetch;\n   fetchWallets: typeof walletsFetch;\n   walletsWithdrawCcy: typeof walletsWithdrawCcyFetch;\n   fetchSuccess: typeof alertPush;\n   currenciesFetch: typeof currenciesFetch;\n   clearWallets: () => void;\n}\n\ninterface OwnProps {\n   walletsError: {\n      message: string;\n   }\n}\n\ntype Props = RouterProps & ReduxProps & DispatchProps & OwnProps & IntlProps;\n\nconst WalletFIatAndSpotFC = memo((props: Props, state: State) => {\n   useMarketsFetch();\n   const { wallets, markets, walletsLoading } = props;\n   console.log('props :>> ', props);\n   const combainById = (a1, a2) =>\n      a1.map((market, i) => ({\n         ...a2.find(wallet => wallet?.currency === market.base_unit),\n         amount_precision: market.amount_precision,\n         price_precision: market.price_precision,\n      }));\n   const combineWallets = combainById(markets, wallets.length > 0 ? wallets : []) || [];\n   console.log('combineWallets :>> ', combineWallets);\n\n   console.log('wallets', wallets);\n\n   const [q, setQ] = useState<string>('');\n   let formatedWallets = wallets || [];\n   if (q) {\n      formatedWallets = formatedWallets.length ? arrayFilter(formatedWallets, q) : [];\n   }\n\n   return (\n      <div className=\"block lg:flex pt-8 pb-4 px-4 lg:!p-1 bg-neutral7 dark:bg-neutral1\">\n         <WalletSidebar />\n         <div className=\"grow h-auto lg:h-[calc(100vh-88px)] pl-0 lg:pl-1 overflow-auto\">\n            <div className=\"p-8 rounded bg-neutral8 dark:bg-shade2\">\n               <div className=\"mb-5 text-3.5xl font-dm font-bold leading-tight tracking-custom1\">\n                  Fiat and Spot\n               </div>\n               <div className=\"flex items-start justify-between\">\n                  <div>\n                     <div className=\"mb-1 text-neutral3 font-medium\">\n                        Fiat and Spot balance\n                     </div>\n                     <div className=\"flex items-center space-x-2\">\n                        <div className=\"text-2xl font-semibold tracking-custom1 leading-custom2\">\n                           0.27894652\n                        </div>\n                        <div className=\"inline-block px-2 py-1.5 rounded text-xs font-bold uppercase text-neutral8 bg-primary5\">\n                           BTC\n                        </div>\n                     </div>\n                     <div className=\"text-base text-neutral4\">\n                        $10,098.36\n                     </div>\n                  </div>\n                  <div>\n                     <div className=\"mb-1 text-neutral3 font-medium\">\n                        Spot balance\n                     </div>\n                     <div className=\"flex items-center space-x-2\">\n                        <div className=\"text-2xl font-semibold tracking-custom1 leading-custom2\">\n                           0.13894652\n                        </div>\n                        <div className=\"inline-block px-2 py-1.5 rounded text-xs font-bold uppercase text-neutral8 bg-primary5\">\n                           BTC\n                        </div>\n                     </div>\n                     <div className=\"text-base text-neutral4\">\n                        $10,098.36\n                     </div>\n                  </div>\n                  <div>\n                     <div className=\"mb-1 text-neutral3 font-medium\">\n                        Fiat balance\n                     </div>\n                     <div className=\"flex items-center space-x-2\">\n                        <div className=\"text-2xl font-semibold tracking-custom1 leading-custom2\">\n                           0.18564652\n                        </div>\n                        <div className=\"inline-block px-2 py-1.5 rounded text-xs font-bold uppercase text-neutral8 bg-primary5\">\n                           BTC\n                        </div>\n                     </div>\n                     <div className=\"text-base text-neutral4\">\n                        $10,098.36\n                     </div>\n                  </div>\n                  <div>\n                     <div className=\"mb-1 text-neutral3 font-medium\">\n                        Yesterday's PNL\n                     </div>\n                     <div className=\"flex items-center space-x-2\">\n                        <div className=\"text-2xl font-semibold tracking-custom1 leading-custom2\">\n                           0.00000000\n                        </div>\n                        <div className=\"inline-block px-2 py-1.5 rounded text-xs font-bold uppercase text-neutral8 bg-primary5\">\n                           BTC\n                        </div>\n                     </div>\n                     <div className=\"text-base text-neutral4\">\n                        $10,098.36\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div>\n               <div>\n                  <div className=\"pt-5 pb-2 px-8 text-xs text-neutral4 font-medium leading-relaxed\">Funds</div>\n                  <div className=\"bg-neutral8 dark:bg-shade2 rounded overflow-hidden\">\n                     <div className=\"pt-5\">\n                        <div className=\"flex items-center px-8\">\n                           <div className=\"relative w-64 mr-auto\">\n                              <input\n                                 type=\"text\"\n                                 className=\"h-10 text-xs w-full pt-0 pr-12 pb-0 pl-3.5 rounded-3xl border-2 border-neutral6 outline-none focus:border-neutral4 dark:border-neutral3 dark:bg-transparent dark:focus:border-neutral4\"\n                                 style={{ transition: 'border-color .2s' }}\n                                 placeholder=\"Search coins\"\n                                 onChange={e => setQ(e.target.value)}\n                              />\n                              <button\n                                 type=\"button\"\n                                 className=\"absolute top-0 right-0 h-10 w-10 bg-none flex items-center justify-center\"\n                              >\n                                 <SearchIcon className=\"w-5 h-5 stroke-neutral4 transition-all duration-300\" />\n                              </button>\n                           </div>\n                           <Link to=\"/wallet-margin\" className=\"flex items-center text-xs font-medium leading-custom1 text-neutral4 hover:text-neutral2 transition-colors duration-300\">\n                              Borrowing history\n                              <ICChevronRight className=\"w-6 h-6 ml-1 fill-neutral4 transition-colors duration-200\" />\n                           </Link>\n                        </div>\n                        <div className=\"table w-full\">\n                           <div className=\"table-row\" style={{ transition: 'background .2s' }}>\n                              <div className=\"table-cell p-4 !pl-8 !pt-5 border-b border-neutral7 dark:border-neutral3 text-xs leading-custom1 font-semibold text-neutral3 dark:text-neutral8\">\n                                 Asset\n                              </div>\n                              <div className=\"table-cell p-4 !pt-5 border-b border-neutral7 dark:border-neutral3 text-xs leading-custom1 font-semibold text-neutral3 dark:text-neutral8\">\n                                 Earn\n                              </div>\n                              <div className=\"table-cell p-4 !pt-5 border-b border-neutral7 dark:border-neutral3 text-xs leading-custom1 font-semibold text-neutral3 dark:text-neutral8 text-right\">\n                                 On orders\n                              </div>\n                              <div className=\"table-cell p-4 !pt-5 border-b border-neutral7 dark:border-neutral3 text-xs leading-custom1 font-semibold text-neutral3 dark:text-neutral8 text-right\">\n                                 Available balance\n                              </div>\n                              <div className=\"table-cell p-4 !pr-8 !pt-5 border-b border-neutral7 dark:border-neutral3 text-xs leading-custom1 font-semibold text-neutral3 dark:text-neutral8 text-right\">\n                                 Total balance\n                              </div>\n                           </div>\n                           {\n                              (formatedWallets.length > 0 || walletsLoading)\n                                 ? formatedWallets.map(wallet => (\n                                    <Link to=\"/\" className=\"table-row hover:bg-neutral7 dark:hover:bg-neutral3\" style={{ transition: 'background .2s' }}>\n                                       <div className={`table-cell p-4 !pl-8 align-middle ${wallet[Object.keys(wallet)[Object.keys(wallet).length - 1]] ? 'border-none' : 'border-b border-neutral6 dark:border-neutral3'}`}>\n                                          <div className=\"flex\">\n                                             <div className=\"shrink-0 w-8 mr-5\">\n                                                <img className=\"w-full\" style={{\n                                                   clipPath: 'polygon(50% 0, 5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%)',\n                                                }} src={wallet?.iconUrl} alt={wallet?.name} />\n                                             </div>\n                                             <div>\n                                                <div className=\"font-medium uppercase\">\n                                                   {wallet?.currency}\n                                                </div>\n                                                <div className=\"text-neutral4\">\n                                                   {wallet?.name}\n                                                </div>\n                                             </div>\n                                          </div>\n                                       </div>\n                                       <div className=\"table-cell border-b border-neutral6 dark:border-neutral3 p-4\">\n                                          <div className=\"inline-block pt-2 pb-1.5 px-2 rounded text-xs font-bold uppercase text-neutral8 bg-primary5\">7.46% APR</div>\n                                       </div>\n                                       <div className=\"table-cell border-b border-neutral6 dark:border-neutral3 p-4 text-right\">\n                                          <div className=\"font-medium\">\n                                             {Decimal.format(wallet?.balance, 0, ',')} {wallet?.currency?.toUpperCase()}\n                                          </div>\n                                          <div className=\"text-neutral4\">$10,098.36</div>\n                                       </div>\n                                       <div className=\"table-cell border-b border-neutral6 dark:border-neutral3 p-4 text-right\">\n                                          <div className=\"font-medium\">\n                                             {Decimal.format(wallet?.balance, 0, ',')} {wallet?.currency?.toUpperCase()}\n                                          </div>\n                                          <div className=\"text-neutral4\">$10,098.36</div>\n                                       </div>\n                                       <div className=\"table-cell border-b border-neutral6 dark:border-neutral3 p-4 !pr-8 text-right\">\n                                          <div className=\"font-medium\">\n                                             {Decimal.format(wallet?.balance, 0, ',')} {wallet?.currency?.toUpperCase()}\n                                          </div>\n                                          <div className=\"text-neutral4\">$10,098.36</div>\n                                       </div>\n                                    </Link>\n                                 )) : (\n                                    <>\n                                       <div className=\"table-row\">\n                                          <div className=\"table-cell pb-[10px] p-1.5 pl-0\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5 pr-0\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                       </div>\n                                       <div className=\"table-row\">\n                                          <div className=\"table-cell pb-[10px] p-1.5 pl-0\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5 pr-0\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                       </div>\n                                       <div className=\"table-row\">\n                                          <div className=\"table-cell pb-[10px] p-1.5 pl-0\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                          <div className=\"table-cell pb-[10px] p-1.5 pr-0\">\n                                             <div className=\"h-5 w-full rounded-lg bg-neutral6 dark:bg-neutral4 animate-pulse\" />\n                                          </div>\n                                       </div>\n                                    </>\n                                 )\n                           }\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </div>\n   )\n});\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   user: selectUserInfo(state),\n   wallets: selectWallets(state),\n   withdrawSuccess: selectWithdrawSuccess(state),\n   walletsLoading: selectWalletsLoading(state),\n   historyList: selectHistory(state),\n   beneficiariesActivateSuccess: selectBeneficiariesActivateSuccess(state),\n   beneficiariesDeleteSuccess: selectBeneficiariesDeleteSuccess(state),\n   beneficiariesAddSuccess: selectBeneficiariesCreateSuccess(state),\n   currencies: selectCurrencies(state),\n   isLoggedIn: selectUserLoggedIn(state),\n   markets: selectMarkets(state),\n   marketLoading: selectMarketsLoading(state),\n   marketTickers: selectMarketTickers(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n   fetchBeneficiaries: params => dispatch(beneficiariesFetch(params)),\n   fetchAddress: ({ currency }) => dispatch(walletsAddressFetch({ currency })),\n   fetchWallets: () => dispatch(walletsFetch()),\n   walletsWithdrawCcy: params => dispatch(walletsWithdrawCcyFetch(params)),\n   fetchSuccess: payload => dispatch(alertPush(payload)),\n   currenciesFetch: () => dispatch(currenciesFetch()),\n   clearWallets: () => dispatch(walletsData([]))\n});\n\nexport const WalletFIatAndSpot = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps),\n)(WalletFIatAndSpotFC) as FunctionComponent;\n","import React, {\n   useEffect,\n   FunctionComponent,\n   useRef,\n   memo,\n} from 'react';\nimport {\n   Link,\n   useParams,\n   withRouter,\n} from 'react-router-dom';\nimport { RouterProps } from 'react-router';\nimport { compose } from 'redux';\nimport {\n   connect,\n   MapDispatchToProps,\n} from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport {\n   Badge,\n   Button,\n   Decimal,\n   PriceChart3,\n   TableFinance,\n   WalletSidebar\n} from 'components';\nimport {\n   Currency,\n   RootState,\n   selectCurrencies,\n   Wallet,\n   walletsFetch,\n   selectWallets,\n   User,\n   selectUserInfo,\n   walletsData,\n} from 'modules';\nimport { arrayFilter, setDocumentTitle } from 'helpers';\nimport { IntlProps } from 'index';\nimport { Params } from './types';\nimport { DEFAULT_WALLET } from '../../constants';\nimport { useMarket } from 'hooks';\n\ninterface ReduxProps {\n   user: User;\n   wallets: Wallet[];\n   currencies: Currency[];\n}\n\ninterface DispatchProps {\n   fetchWallets: typeof walletsFetch;\n   clearWallets: () => void;\n}\n\ntype OwnProps = {\n   location: {\n      state: {\n         estimateValue: string;\n      }\n   }\n}\n\ntype Props = ReduxProps & DispatchProps & IntlProps & RouterProps & OwnProps;\n\nconst WalletDetailsFC = memo(({\n   user,\n   wallets,\n   currencies,\n   fetchWallets,\n   clearWallets,\n   history: { push },\n   intl,\n   location\n}: Props) => {\n   const { id = '' } = useParams<Params>();\n   const sliderRef = useRef<HTMLDivElement>(null);\n   const { marketsData, handleRedirectToTrading } = useMarket();\n\n   useEffect(() => {\n      setDocumentTitle(`${name} wallet details`);\n      if (!wallets.length) {\n         fetchWallets();\n      }\n      return () => clearWallets();\n   }, []);\n\n   const translate = (id: string) => intl.formatMessage({ id });\n   const wallet = wallets.length ? wallets.filter(e => id === e.currency) : [DEFAULT_WALLET];\n   const {\n      currency,\n      balance,\n      fixed,\n      name,\n      networks,\n      status,\n   } = wallet[0];\n\n   const friendsMarket = arrayFilter(marketsData, currency);\n\n   const handleSlideRight = () => {\n      if (sliderRef.current) {\n         let scrollAmount = 0;\n         const clientWidth = Math.max(scrollAmount += sliderRef.current.clientWidth / 2);\n         sliderRef.current.scrollBy({\n            top: 0,\n            left: clientWidth,\n            behavior: 'smooth',\n         });\n      }\n   };\n\n   return (\n      <>\n         <div className=\"block lg:flex pt-8 pb-4 px-4 lg:!p-1 bg-neutral7 dark:bg-neutral1\">\n            <WalletSidebar />\n            <div className=\"grow h-auto lg:h-[calc(100vh-88px)] pl-0 lg:pl-1 overflow-auto\">\n               <div className={`p-8 ${friendsMarket.length ? 'pb-0' : ''} rounded bg-neutral8 dark:bg-shade2`}>\n                  <div className=\"flex items-center mb-5\">\n                     <div className=\"flex items-center mr-auto\">\n                        <Link\n                           className=\"mr-3 group\"\n                           to=\"/wallets\"\n                           title=\"Back to Wallets\"\n                        >\n                           <svg className=\"w-8 h-8 fill-neutral4 group-hover:fill-neutral1 group-hover:-translate-x-3 group-hover:scale-105 transition-transform duration-300\">\n                              <use xlinkHref=\"#icon-arrow-left\" />\n                           </svg>\n                        </Link>\n                        <div className=\"mr-auto text-3.5xl font-dm font-bold leading-tight tracking-custom1\">\n                           {currency?.toUpperCase()}\n                           <span className=\"ml-3 text-neutral5\"> {name}</span>\n                        </div>\n                     </div>\n                     <div className=\"flex items-center space-x-3\">\n                        <Button\n                           text=\"Deposit\"\n                           size=\"normal\"\n                           onClick={() => push('/wallets/deposit', currencies.find(e => e.id === currency))}\n                           disabled={!networks.length || status !== 'enabled'}\n                        />\n                        <Button\n                           text=\"Withdraw\"\n                           size=\"normal\"\n                           variant=\"outline\"\n                           onClick={() => push('/wallets/withdraw', { wallet: wallet[0] })}\n                           disabled={!networks.length || status !== 'enabled'}\n                        />\n                        <Button\n                           text=\"Transfer\"\n                           size=\"normal\"\n                           variant=\"outline\"\n                           onClick={() => push('/wallets/transfer', currencies.find(e => e.id === currency))}\n                        />\n                     </div>\n                  </div>\n                  <div className=\"relative\">\n                     <div className=\"flex gap-10 justify-between\">\n                        <div>\n                           <div className=\"mb-1 font-medium\">\n                              {translate('page.body.history.trade.header.total')} {translate('page.body.history.trade.header.balance')}\n                           </div>\n                           <div className=\"flex items-center space-x-2\">\n                              <div className=\"text-2xl font-semibold tracking-custom1 leading-custom2\">\n                                 {Decimal.format(balance, currency === 'idr' ? 0 : fixed, ',')}\n                              </div>\n                              <Badge\n                                 variant=\"green\"\n                                 text={currency}\n                              />\n                           </div>\n                           <div className=\"text-base text-neutral4\">\n                              &asymp; {location.state ? location.state?.estimateValue : `${Decimal.format((Number(balance) * Number(0)), 0, ',')} USDT`}\n                           </div>\n                        </div>\n                        {friendsMarket.length > 0 && (\n                           <div ref={sliderRef} className={`relative w-[668px] flex ${friendsMarket.length === 1 ? 'justify-end' : ''} gap-10 lg:gap-20 snap-x snap-mandatory overflow-x-auto pb-8 transition-transform duration-500`}>\n                              {friendsMarket.length > 0 && friendsMarket.map(market => {\n                                 const klinesData: number[] = market.kline;\n                                 let labels: number[], data: number[];\n                                 labels = klinesData.map(e => e[0]);\n                                 data = klinesData.map(e => e[2]);\n                                 const change = market.price_change_percent.includes('+');\n                                 return (\n                                    <div\n                                       key={market.id}\n                                       className=\"snap-end shrink-0 first:pl-3 last:pr-3\"\n                                       onClick={() => handleRedirectToTrading(market.id)}\n                                    >\n                                       <div className=\"rounded-xl hover:shadow-lg dark:hover:bg-neutral2 p-6 cursor-pointer transition-all duration-200\">\n                                          <div className=\"flex items-center gap-3\">\n                                             <div className=\"text-xs leading-custom4 text-neutral4 font-semibold uppercase\">\n                                                {market.name}\n                                             </div>\n                                             <Badge rounded=\"2xl\" variant={change ? 'green' : 'orange'} text={market.price_change_percent} />\n                                          </div>\n                                          <div className=\"text-2xl font-semibold tracking-custom1 leading-custom2 mt-1 mb-4 uppercase\">\n                                             {Decimal.format(market.last.includes(',') ? market?.last?.split(',')?.join('') : market.last, market.price_precision, ',')} {market.base_unit}\n                                          </div>\n                                          <div className=\"w-60 h-14\">\n                                             <PriceChart3\n                                                id={market.id}\n                                                theme={change ? 'positive' : 'negative'}\n                                                labels={labels}\n                                                data={data}\n                                                maintainAspectRatio={false}\n                                                gradientOpacityTop={.5}\n                                                gradientOpacityBottom={.07}\n                                             />\n                                          </div>\n                                       </div>\n                                    </div>\n                                 );\n                              })}\n                           </div>\n                        )}\n                     </div>\n                     {(friendsMarket.length > 2) && (\n                        <div className=\"absolute top-[36%] right-0\">\n                           <div\n                              onClick={handleSlideRight}\n                              className=\"group flex items-center justify-center bg-shade5 hover:bg-neutral6 dark:bg-neutral2 animate-right hover:animate-none shadow-card rounded-full w-10 h-10 cursor-pointer hover:scale-110 transition-all duration-300\"\n                           >\n                              <svg className=\"w-6 h-6 fill-neutral4 group-hover:w-7 group-hover:h-7 transition-colors duration-300\">\n                                 <use xlinkHref=\"#icon-arrow-right\" />\n                              </svg>\n                           </div>\n                        </div>\n                     )}\n                  </div>\n               </div>\n               <div className=\"mt-1 bg-neutral8 dark:bg-shade2 p-8 rounded\">\n                  <TableFinance\n                     title=\"Finances\"\n                     hiddenCategory={[0, 4]}\n                  />\n               </div>\n            </div>\n         </div>\n      </>\n   );\n});\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   user: selectUserInfo(state),\n   wallets: selectWallets(state),\n   currencies: selectCurrencies(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n   fetchWallets: () => dispatch(walletsFetch()),\n   clearWallets: () => dispatch(walletsData([])),\n});\n\nexport const WalletDetails = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps),\n)(WalletDetailsFC) as FunctionComponent;\n","// import React, {\n//    useState,\n//    FunctionComponent,\n//    memo,\n//    useEffect,\n//    FC,\n// } from 'react';\n// import { Link } from 'react-router-dom';\n// import { RouterProps, withRouter } from 'react-router';\n// import { connect, MapDispatchToProps } from 'react-redux';\n// import { compose } from 'redux';\n// import { injectIntl } from 'react-intl';\n// import { Badge, Button, Decimal, LayoutWallet, Portal, Skeleton, } from 'components';\n// import {\n//    alertPush,\n//    beneficiariesFetch,\n//    Beneficiary,\n//    currenciesFetch,\n//    Currency,\n//    RootState,\n//    selectBeneficiariesActivateSuccess,\n//    selectBeneficiariesCreateSuccess,\n//    selectBeneficiariesDeleteSuccess,\n//    selectCurrencies,\n//    selectHistory,\n//    selectUserInfo,\n//    selectUserLoggedIn,\n//    selectWallets,\n//    selectWalletsLoading,\n//    selectWithdrawSuccess,\n//    User,\n//    Wallet,\n//    WalletHistoryList,\n//    walletsAddressFetch,\n//    walletsData,\n//    walletsFetch,\n//    walletsWithdrawCcyFetch\n// } from 'modules';\n// import { IntlProps } from 'index';\n// import { SearchIcon } from '@heroicons/react/outline';\n// import { IcEmty, ImgBarcode, ImgTfa } from 'assets';\n// import { useDocumentTitle } from 'hooks';\n\n// interface State {\n//    activeIndex: number;\n//    currentTabIndex: number;\n//    otpCode: string;\n//    beneficiary: Beneficiary;\n//    selectWalletIndex: number;\n//    withdrawSubmitModal: boolean;\n//    withdrawConfirmModal: boolean;\n//    bchAddress?: string;\n//    filteredWallets?: Wallet[] | null;\n//    tab: string;\n//    withdrawDone: boolean;\n//    amount: string;\n//    total: string;\n// }\n\n// interface ReduxProps {\n//    user: User;\n//    wallets: Wallet[];\n//    currencies: Currency[];\n//    withdrawSuccess: boolean;\n//    walletsLoading?: boolean;\n//    historyList: WalletHistoryList;\n//    beneficiariesActivateSuccess: boolean;\n//    beneficiariesDeleteSuccess: boolean;\n//    beneficiariesAddSuccess: boolean;\n//    isLoggedIn: boolean;\n// }\n\n// interface DispatchProps {\n//    fetchBeneficiaries: typeof beneficiariesFetch;\n//    fetchAddress: typeof walletsAddressFetch;\n//    fetchWallets: typeof walletsFetch;\n//    fetchCurrencies: typeof currenciesFetch;\n//    walletsWithdrawCcy: typeof walletsWithdrawCcyFetch;\n//    fetchSuccess: typeof alertPush;\n//    clearWallets: () => void;\n// }\n\n// interface OwnProps {\n//    walletsError: {\n//       message: string;\n//    }\n// }\n\n// type Props = RouterProps & ReduxProps & DispatchProps & OwnProps & IntlProps;\n\n// const WalletTradeFC: FC<Props> = memo(({\n//    user,\n//    wallets,\n//    currencies,\n//    withdrawSuccess,\n//    walletsLoading,\n//    historyList,\n//    beneficiariesActivateSuccess,\n//    beneficiariesDeleteSuccess,\n//    beneficiariesAddSuccess,\n//    isLoggedIn,\n//    walletsError,\n//    fetchBeneficiaries,\n//    fetchAddress,\n//    fetchWallets,\n//    fetchCurrencies,\n//    walletsWithdrawCcy,\n//    fetchSuccess,\n//    clearWallets,\n//    history: { push },\n//    intl,\n// }, state: State) => {\n//    const [isOpen, setIsOpen] = useState<boolean>(false);\n//    const [q, setQ] = useState<string>('');\n//    useDocumentTitle('Trades');\n//    useEffect(() => {\n//       if (!wallets.length || !currencies.length) {\n//          fetchWallets();\n//          fetchCurrencies();\n//       }\n//    }, [wallets, currencies]);\n\n//    let balances: Wallet[] = wallets || [];\n//    if (q) {\n//       balances = balances.length\n//          ? balances.filter(market =>\n//             Object.keys(market).reduce(\n//                (acc, curr) =>\n//                   acc ||\n//                   market[curr]\n//                      ?.toString()\n//                      ?.toLowerCase()\n//                      ?.match(q.toLowerCase())\n//                      ?.includes(q.toLowerCase()),\n//                false\n//             )\n//          )\n//          : [];\n//    }\n\n//    const wallet = wallets.find(pair => pair.currency === 'idr');\n\n//    const handleShowPortal = () => setIsOpen(prev => !prev);\n\n//    const renderHeaderModal = () => {\n//       if (user.level < 2) {\n//          return 'Verify your identity';\n//       }\n//       if (!user.otp) {\n//          return 'Activate two factor authentication';\n//       }\n//       return;\n//    }\n\n//    const renderContentModal = () => {\n//       if (user.level < 2) {\n//          return 'Please verify your identity through the mobile application, scan the barcode below to download.';\n//       }\n//       if (!user.otp) {\n//          return 'Please strengthen your account security by activate google two-factor authentication';\n//       }\n//       return;\n//    }\n\n//    const handleActionModal = () => {\n//       if (user.level < 2) {\n//          return handleShowPortal()\n//       }\n//       if (!user.otp) {\n//          return push('/2fa');\n//       }\n//       return;\n//    }\n\n//    return (\n//       <>\n//          <LayoutWallet>\n//             <div className=\"p-8 rounded bg-neutral8 dark:bg-shade2\">\n//                <div className=\"flex items-center mb-5\">\n//                   <div className=\"mr-auto text-3.5xl font-dm font-bold leading-tight tracking-custom1\">\n//                      Summary\n//                   </div>\n//                   <div className=\"flex items-center space-x-2\">\n//                      <div>\n//                         <div className=\"relative w-64\">\n//                            <input\n//                               type=\"text\"\n//                               className=\"h-10 text-xs w-full pt-0 pr-12 pb-0 pl-3.5 rounded-3xl border-2 border-neutral6 dark:border-neutral4 dark:bg-transparent focus:border-neutral4 outline-none\"\n//                               style={{ transition: 'border-color .2s' }}\n//                               placeholder=\"Search...\"\n//                               onChange={e => setQ(e.target.value)}\n//                            />\n//                            <button\n//                               type=\"button\"\n//                               className=\"absolute top-0 right-0 h-10 w-10 bg-none flex items-center justify-center\"\n//                            >\n//                               <SearchIcon className=\"w-5 h-5 stroke-neutral4 transition-all duration-300\" />\n//                            </button>\n//                         </div>\n//                      </div>\n//                      <Button\n//                         text=\"Filter\"\n//                         variant=\"outline\"\n//                         size=\"normal\"\n//                         icRight={\n//                            <svg className=\"ml-3 w-3.5 h-3.5 fill-neutral4 group-hover:fill-neutral8 transition-colors duration-300\">\n//                               <use xlinkHref=\"#icon-filter\" />\n//                            </svg>\n//                         }\n//                      />\n//                   </div>\n//                </div>\n//                <div className=\"flex items-center\">\n//                   <div className=\"mr-auto\">\n//                      <div className=\"mb-1 font-medium\">Total balance</div>\n//                      <div className=\"flex items-center space-x-2\">\n//                         <div className=\"text-2xl font-semibold tracking-custom1 leading-custom2\">\n//                            {Decimal.format(wallet?.balance, Number(wallet?.fixed), ',')}\n//                         </div>\n//                         {wallet?.currency ? (\n//                            <Badge text={String(wallet?.currency.toUpperCase())} />\n//                         ) : (\n//                            <Skeleton height={26} width={36} />\n//                         )}\n//                      </div>\n//                      <div className=\"text-base text-neutral4\">\n//                         $10,098.36\n//                      </div>\n//                   </div>\n//                </div>\n//             </div>\n//             <div className=\"pt-1\">\n//                <div className=\"bg-neutral8 dark:bg-shade2 rounded overflow-hidden\">\n//                   <div className=\"pb-1\">\n//                      <div className=\"table w-full\">\n//                         <div className=\"table-row\" style={{ transition: 'background .2s' }}>\n//                            <div className=\"table-cell p-4 !pl-8 !pt-5 border-b border-neutral7 dark:border-neutral3 text-xs leading-custom1 font-semibold text-neutral3 dark:text-neutral8\">\n//                               Asset\n//                            </div>\n//                            <div className=\"table-cell p-4 !pt-5 border-b border-neutral7 dark:border-neutral3 text-xs leading-custom1 font-semibold text-neutral3 dark:text-neutral8 text-right\">\n//                               On orders\n//                            </div>\n//                            <div className=\"table-cell p-4 !pt-5 border-b border-neutral7 dark:border-neutral3 text-xs leading-custom1 font-semibold text-neutral3 dark:text-neutral8 text-right\">\n//                               Available balance\n//                            </div>\n//                            <div className=\"table-cell p-4 !pr-8 !pt-5 border-b border-neutral7 dark:border-neutral3 text-xs leading-custom1 font-semibold text-neutral3 dark:text-neutral8 text-right\">\n//                               Total balance\n//                            </div>\n//                         </div>\n//                         {\n//                            // walletsLoading ? (\n//                            //    <>\n//                            //       <div className=\"table-row\">\n//                            //          <div className=\"table-cell pb-[10px] p-1.5 pl-0\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //          <div className=\"table-cell pb-[10px] p-1.5\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //          <div className=\"table-cell pb-[10px] p-1.5\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //          <div className=\"table-cell pb-[10px] p-1.5\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //          <div className=\"table-cell pb-[10px] p-1.5 pr-0\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //       </div>\n//                            //       <div className=\"table-row\">\n//                            //          <div className=\"table-cell pb-[10px] p-1.5 pl-0\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //          <div className=\"table-cell pb-[10px] p-1.5\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //          <div className=\"table-cell pb-[10px] p-1.5\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //          <div className=\"table-cell pb-[10px] p-1.5\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //          <div className=\"table-cell pb-[10px] p-1.5 pr-0\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //       </div>\n//                            //       <div className=\"table-row\">\n//                            //          <div className=\"table-cell pb-[10px] p-1.5 pl-0\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //          <div className=\"table-cell pb-[10px] p-1.5\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //          <div className=\"table-cell pb-[10px] p-1.5\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //          <div className=\"table-cell pb-[10px] p-1.5\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //          <div className=\"table-cell pb-[10px] p-1.5 pr-0\">\n//                            //             <div className=\"h-5 w-full rounded-lg bg-neutral6 animate-pulse\" />\n//                            //          </div>\n//                            //       </div>\n//                            //    </>\n//                            // ) :\n//                            balances.length > 0\n//                               ? balances.map(wallet => (\n//                                  <Link to={`/wallets/${wallet.currency}`} className=\"table-row hover:bg-neutral7 dark:hover:bg-neutral3\" style={{ transition: 'background .2s' }}>\n//                                     <div className={`table-cell p-4 !pl-8 align-middle [&:not(:last-child)]:border-b [&:not(:last-child)]:border-neutral6 [&:not(:last-child)]:dark:border-neutral3`}>\n//                                        <div className=\"flex\">\n//                                           <div className=\"shrink-0 w-8 mr-5\">\n//                                              <img className=\"w-full\" style={{\n//                                                 clipPath: 'polygon(50% 0, 5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%)',\n//                                              }} src={wallet?.iconUrl} alt={wallet?.name} />\n//                                           </div>\n//                                           <div>\n//                                              <div className=\"font-medium uppercase\">\n//                                                 {wallet?.currency}\n//                                              </div>\n//                                              <div className=\"text-neutral4\">\n//                                                 {wallet?.name}\n//                                              </div>\n//                                           </div>\n//                                        </div>\n//                                     </div>\n//                                     <div className=\"table-cell [&:not(:last-child)]:border-b [&:not(:last-child)]:border-neutral6 [&:not(:last-child)]:dark:border-neutral3 p-4 text-right\">\n//                                        <div className=\"font-medium\">\n//                                           {Decimal.format(wallet?.balance, wallet?.currency === 'idr' ? 0 : wallet?.fixed, ',')} {wallet?.currency?.toUpperCase()}\n//                                        </div>\n//                                        <div className=\"text-neutral4\">$10,098.36</div>\n//                                     </div>\n//                                     <div className=\"table-cell [&:not(:last-child)]:border-b [&:not(:last-child)]:border-neutral6 [&:not(:last-child)]:dark:border-neutral3 p-4 text-right\">\n//                                        <div className=\"font-medium\">\n//                                           {Decimal.format(wallet?.balance, 0, ',')} {wallet?.currency?.toUpperCase()}\n//                                        </div>\n//                                        <div className=\"text-neutral4\">$10,098.36</div>\n//                                     </div>\n//                                     <div className=\"table-cell [&:not(:last-child)]:border-b [&:not(:last-child)]:border-neutral6 [&:not(:last-child)]:dark:border-neutral3 p-4 !pr-8 text-right\">\n//                                        <div className=\"font-medium\">\n//                                           {Decimal.format(wallet?.balance, 0, ',')} {wallet?.currency?.toUpperCase()}\n//                                        </div>\n//                                        <div className=\"text-neutral4\">$10,098.36</div>\n//                                     </div>\n//                                  </Link>\n//                               )) : (\n//                                  <div className=\"table-row hover:bg-neutral7 dark:hover:bg-neutral3\">\n//                                     <div className=\"table-cell\">&nbsp;</div>\n//                                     <div className=\"table-cell\">&nbsp;</div>\n//                                     <div className=\"table-cell align-middle\">\n//                                        <div className=\"flex flex-col items-center space-y-3\">\n//                                           <IcEmty />\n//                                           <div className=\"text-xs leading-normal font-medium text-neutral4\">No result found...</div>\n//                                        </div>\n//                                     </div>\n//                                     <div className=\"table-cell\">&nbsp;</div>\n//                                     <div className=\"table-cell\">&nbsp;</div>\n//                                  </div>\n//                               )\n//                         }\n//                      </div>\n//                   </div>\n//                </div>\n//             </div>\n//          </LayoutWallet>\n//          <Portal\n//             show={isOpen}\n//             close={handleShowPortal}\n//          >\n//             <div className=\"pt-10 space-y-8\">\n//                <div className=\"space-y-3\">\n//                   <div className=\"font-dm font-bold text-2xl leading-9 text-center tracking-custom\">\n//                      {renderHeaderModal()}\n//                   </div>\n//                   <div className=\"max-w-82 mx-auto text-center text-xs text-neutral4 leading-5\">\n//                      {renderContentModal()}\n//                   </div>\n//                </div>\n//                {\n//                   user.level < 2 ? (\n//                      <div className=\"h-40 w-40 mx-auto p-4 rounded-lg border-2 border-dashed border-primary1\">\n//                         <ImgBarcode className=\"max-w-full max-h-full\" />\n//                      </div>\n//                   ) : <ImgTfa className=\"mx-auto\" />\n//                }\n//                <Button\n//                   text={user.level < 2 ? 'Close' : 'Enable 2FA'}\n//                   onClick={handleActionModal}\n//                />\n//             </div>\n//          </Portal>\n//       </>\n//    )\n// });\n\n// const mapStateToProps = (state: RootState): ReduxProps => ({\n//    user: selectUserInfo(state),\n//    wallets: selectWallets(state),\n//    currencies: selectCurrencies(state),\n//    withdrawSuccess: selectWithdrawSuccess(state),\n//    walletsLoading: selectWalletsLoading(state),\n//    historyList: selectHistory(state),\n//    beneficiariesActivateSuccess: selectBeneficiariesActivateSuccess(state),\n//    beneficiariesDeleteSuccess: selectBeneficiariesDeleteSuccess(state),\n//    beneficiariesAddSuccess: selectBeneficiariesCreateSuccess(state),\n//    isLoggedIn: selectUserLoggedIn(state),\n// });\n\n// const mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n//    fetchBeneficiaries: params => dispatch(beneficiariesFetch(params)),\n//    fetchAddress: ({ currency }) => dispatch(walletsAddressFetch({ currency })),\n//    fetchWallets: () => dispatch(walletsFetch()),\n//    fetchCurrencies: () => dispatch(currenciesFetch()),\n//    walletsWithdrawCcy: params => dispatch(walletsWithdrawCcyFetch(params)),\n//    fetchSuccess: payload => dispatch(alertPush(payload)),\n//    clearWallets: () => dispatch(walletsData([]))\n// });\n\n// export const WalletTrade = compose(\n//    injectIntl,\n//    withRouter,\n//    connect(mapStateToProps, mapDispatchToProps),\n// )(WalletTradeFC) as FunctionComponent;\n\n\nimport { LayoutWallet, TableFinance } from 'components'\nimport React from 'react'\n\nexport const WalletTrade = () => {\n   return (\n      <LayoutWallet>\n         <div className=\"h-full p-8 rounded bg-neutral8 dark:bg-shade2\">\n            <TableFinance\n               title=\"Trade History\"\n               hiddenCategory={[0, 1, 2, 3]}\n            />\n         </div>\n      </LayoutWallet>\n   )\n}\n","import * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapStateToProps } from 'react-redux';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { setDocumentTitle } from '../../helpers';\nimport { RootState, selectPlatformAccessStatus } from '../../modules';\n\ninterface ReduxProps {\n    status: string;\n}\n\ntype Props = RouterProps & IntlProps & ReduxProps;\n\nclass Restricted extends React.Component<Props> {\n    public componentDidMount() {\n        setDocumentTitle('404');\n        if (this.props.status.length && this.props.status !== 'restricted') {\n            this.props.history.replace('/');\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: Props) {\n        if (!this.props.status.length && nextProps.status.length && nextProps.status !== 'restricted') {\n            this.props.history.replace('/');\n        }\n    }\n\n    public render() {\n        return(\n            <div className=\"pg-restricted-screen\">\n                <div className=\"pg-restricted-screen__title\">\n                    404\n                </div>\n                <div className=\"pg-restricted-screen__content\">\n                    {this.translate('page.body.restricted')}\n                </div>\n            </div>\n        );\n    }\n\n    private translate = (key: string) => this.props.intl.formatMessage({id: key});\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n    status: selectPlatformAccessStatus(state),\n});\n\nexport const RestrictedScreen = compose(\n    injectIntl,\n    withRouter,\n    connect(mapStateToProps),\n)(Restricted) as React.ComponentClass;\n","import * as React from 'react';\n\ninterface BackgroundMaintenanceProps {\n    className?: string;\n}\n\nexport const BackgroundMaintenance: React.FC<BackgroundMaintenanceProps> = (props: BackgroundMaintenanceProps) => (\n    <svg width=\"514\" height=\"486\" viewBox=\"0 0 514 486\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g opacity=\"0.08\">\n            <path d=\"M284.899 139.731C281.96 136.792 277.195 136.791 274.257 139.73L265.987 147.999C263.047 150.938 263.047 155.703 265.986 158.641C267.456 160.111 269.382 160.845 271.308 160.845C273.234 160.845 275.16 160.111 276.629 158.642L284.899 150.373C287.838 147.434 287.838 142.669 284.899 139.731V139.731Z\" fill=\"rgb(var(--rgb-icons))\"/>\n            <path d=\"M291.829 181.368C293.754 181.368 295.681 180.633 297.151 179.163L305.419 170.893C308.358 167.954 308.358 163.189 305.418 160.252C302.481 157.314 297.715 157.313 294.777 160.253L286.508 168.522C283.569 171.461 283.569 176.226 286.509 179.164C287.977 180.632 289.903 181.368 291.829 181.368Z\" fill=\"rgb(var(--rgb-icons))\"/>\n            <path d=\"M315.299 180.774L307.03 189.044C304.091 191.983 304.091 196.748 307.031 199.686C308.5 201.155 310.427 201.889 312.352 201.889C314.278 201.889 316.204 201.155 317.674 199.685L325.943 191.415C328.882 188.476 328.882 183.711 325.942 180.773C323.004 177.835 318.239 177.834 315.299 180.774Z\" fill=\"rgb(var(--rgb-icons))\"/>\n            <path d=\"M327.552 220.208C329.022 221.677 330.948 222.411 332.874 222.411C334.799 222.411 336.726 221.677 338.196 220.208L346.465 211.938C349.404 208.998 349.404 204.234 346.465 201.295C343.525 198.357 338.761 198.357 335.823 201.295L327.553 209.565C324.613 212.504 324.613 217.268 327.552 220.208Z\" fill=\"rgb(var(--rgb-icons))\"/>\n            <path d=\"M62.1022 413.45L48.2169 427.335C45.2768 430.274 45.2768 435.039 48.2159 437.977C51.1539 440.915 55.9191 440.918 58.8581 437.978L72.7435 424.094C75.6835 421.155 75.6835 416.389 72.7445 413.451C69.8054 410.513 65.0412 410.511 62.1022 413.45V413.45Z\" fill=\"rgb(var(--rgb-icons))\"/>\n            <path d=\"M349.973 357.016L305.013 331.059C299.976 328.151 293.721 328.151 288.685 331.059L243.722 357.016C238.687 359.924 235.56 365.343 235.56 371.158V423.073C235.56 428.888 238.687 434.306 243.723 437.215L288.685 463.172C291.203 464.626 294.026 465.353 296.849 465.353C299.673 465.353 302.496 464.626 305.014 463.172L349.975 437.215C355.011 434.308 358.139 428.888 358.139 423.073V371.158C358.137 365.343 355.009 359.924 349.973 357.016V357.016ZM343.086 423.074C343.086 423.529 342.841 423.953 342.447 424.181L297.487 450.139C297.092 450.366 296.603 450.366 296.209 450.139L251.249 424.181C250.855 423.953 250.61 423.53 250.61 423.074V371.159C250.61 370.704 250.855 370.28 251.248 370.052L296.209 344.094C296.406 343.981 296.628 343.924 296.848 343.924C297.069 343.924 297.29 343.981 297.488 344.094L342.448 370.052C342.842 370.28 343.087 370.703 343.087 371.159V423.074H343.086Z\" fill=\"rgb(var(--rgb-icons))\"/>\n            <path d=\"M296.849 369.339C281.532 369.339 269.07 381.8 269.07 397.118C269.07 412.435 281.532 424.895 296.849 424.895C312.166 424.895 324.627 412.435 324.627 397.118C324.627 381.8 312.166 369.339 296.849 369.339ZM296.849 409.843C289.831 409.843 284.122 404.134 284.122 397.117C284.122 390.099 289.83 384.389 296.849 384.389C303.866 384.389 309.575 390.098 309.575 397.117C309.575 404.134 303.866 409.843 296.849 409.843Z\" fill=\"rgb(var(--rgb-icons))\"/>\n            <path d=\"M424.661 336.398C424.661 351.715 437.123 364.176 452.44 364.176C467.757 364.176 480.217 351.715 480.217 336.398C480.217 321.081 467.757 308.62 452.44 308.62C437.123 308.62 424.661 321.081 424.661 336.398ZM465.165 336.398C465.165 343.416 459.457 349.125 452.439 349.125C445.421 349.125 439.711 343.417 439.711 336.398C439.711 329.381 445.42 323.671 452.439 323.671C459.457 323.671 465.165 329.381 465.165 336.398Z\" fill=\"rgb(var(--rgb-icons))\"/>\n            <path d=\"M505.563 296.298L460.603 270.341C455.568 267.434 449.311 267.433 444.274 270.341L399.312 296.298C394.276 299.206 391.148 304.626 391.148 310.439V362.355C391.148 368.169 394.276 373.588 399.313 376.497L444.273 402.454C446.792 403.908 449.615 404.635 452.439 404.635C455.262 404.635 458.086 403.908 460.603 402.454L476.732 393.142C480.331 391.064 481.565 386.461 479.486 382.862C477.409 379.262 472.804 378.032 469.206 380.108L453.076 389.42C452.684 389.647 452.194 389.647 451.801 389.42L406.841 363.462C406.446 363.234 406.201 362.811 406.201 362.355V310.439C406.201 309.985 406.446 309.56 406.84 309.333L451.802 283.375C452.194 283.147 452.684 283.147 453.077 283.375L498.038 309.333C498.433 309.56 498.678 309.984 498.678 310.439V362.355C498.678 362.81 498.433 363.234 498.04 363.462L495.337 365.022C491.737 367.099 490.504 371.702 492.582 375.301C494.659 378.903 499.263 380.133 502.861 378.057L505.565 376.496C510.602 373.589 513.729 368.169 513.729 362.355V310.439C513.728 304.626 510.601 299.206 505.563 296.298V296.298Z\" fill=\"rgb(var(--rgb-icons))\"/>\n            <path d=\"M323.657 267.183C368.24 276.431 414.27 262.853 446.653 230.47C484.771 192.354 495.552 136.785 478.028 88.6927C477.147 86.2775 475.095 84.4783 472.584 83.9225C470.074 83.3676 467.454 84.1312 465.635 85.9484L403.818 147.766L352.246 133.948L338.427 82.3762L345.839 74.9659C348.778 72.0259 348.778 67.2617 345.839 64.3227C342.899 61.3856 338.135 61.3836 335.195 64.3227L324.712 74.8054C322.811 76.7079 322.069 79.4783 322.766 82.0752L338.835 142.041C339.53 144.637 341.559 146.665 344.156 147.362L404.121 163.429C406.718 164.124 409.489 163.384 411.391 161.483L467.451 105.422C477.727 146.048 465.993 189.848 436.013 219.828C407.34 248.501 366.483 260.697 326.716 252.447C304.816 247.904 282.119 255.371 267.482 271.933L107.648 452.763C107.625 452.789 107.602 452.816 107.579 452.842C102.604 458.63 96.587 463.173 89.6976 466.342C85.9207 468.078 84.268 472.548 86.005 476.323C87.7439 480.104 92.2141 481.75 95.986 480.015C104.839 475.944 112.569 470.116 118.959 462.692L278.76 281.9C289.829 269.375 307.03 263.731 323.657 267.183V267.183Z\" fill=\"rgb(var(--rgb-icons))\"/>\n            <path d=\"M63.3593 470.973C50.946 469.966 39.2562 464.558 30.4462 455.747C8.89272 434.196 9.96638 398.721 33.3541 378.617C33.3802 378.595 33.4073 378.572 33.4324 378.549L214.263 218.714C230.824 204.077 238.291 181.379 233.749 159.48C225.5 119.715 237.694 78.8568 266.367 50.1841C296.346 20.2039 340.144 8.46793 380.773 18.746L356.471 43.0468C353.532 45.9868 353.532 50.751 356.471 53.69C359.411 56.6281 364.176 56.6281 367.115 53.69L400.246 20.5591C402.064 18.7409 402.827 16.12 402.271 13.6094C401.716 11.0989 399.916 9.0469 397.501 8.1659C349.404 -9.35883 293.841 1.42492 255.724 39.5398C223.454 71.8108 209.729 117.79 219.012 162.535C222.46 179.161 216.82 196.366 204.296 207.437L23.5015 367.24C-6.28802 392.887 -8.01891 438.568 19.8029 466.39C31.1355 477.723 46.1718 484.679 62.1412 485.975C66.2733 486.308 69.9137 483.236 70.2508 479.083C70.588 474.94 67.5025 471.309 63.3593 470.973V470.973Z\" fill=\"rgb(var(--rgb-icons))\"/>\n        </g>\n    </svg>\n);\n","import * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapStateToProps } from 'react-redux';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../';\nimport { BackgroundMaintenance } from '../../assets/images/BackgroundMaintenance';\nimport { LogoIcon } from '../../assets/images/LogoIcon';\nimport { setDocumentTitle } from '../../helpers';\nimport { RootState, selectPlatformAccessStatus } from '../../modules';\n\ninterface ReduxProps {\n    status: string;\n}\n\ntype Props = RouterProps & IntlProps & ReduxProps;\n\nclass Maintenance extends React.Component<Props> {\n    public componentDidMount() {\n        setDocumentTitle('500');\n        if (this.props.status.length && this.props.status !== 'maintenance') {\n            this.props.history.replace('/');\n        }\n    }\n\n    public componentWillReceiveProps(nextProps: Props) {\n        if (!this.props.status.length && nextProps.status.length && nextProps.status !== 'maintenance') {\n            this.props.history.replace('/');\n        }\n    }\n\n    public render() {\n        return (\n            <div className=\"pg-maintenance-screen\">\n                <div className=\"pg-maintenance-screen__container\">\n                    <div className=\"pg-maintenance-screen__container-header\">\n                        <LogoIcon />\n                    </div>\n                    <div className=\"pg-maintenance-screen__container-body\">\n                        <div className=\"pg-maintenance-screen__container-body-title\">\n                            {this.translate('page.body.500.maintenance')}\n                        </div>\n                        <div className=\"pg-maintenance-screen__container-body-subtitle\">\n                            {this.translate('page.body.500.availableSoon')}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"pg-maintenance-screen__background\">\n                    <BackgroundMaintenance />\n                </div>\n            </div>\n        );\n    }\n\n    private translate = (key: string) => this.props.intl.formatMessage({id: key});\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n    status: selectPlatformAccessStatus(state),\n});\n\nexport const MaintenanceScreen = compose(\n    injectIntl,\n    withRouter,\n    connect(mapStateToProps),\n)(Maintenance) as React.ComponentClass;\n","import React, { Component, ComponentClass } from 'react';\nimport { compose } from 'redux';\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { IntlProps } from '../../..';\nimport { captchaLogin } from 'api';\nimport { EMAIL_REGEX, ERROR_EMPTY_PASSWORD, ERROR_INVALID_EMAIL, PASSWORD_REGEX, setDocumentTitle } from 'helpers';\nimport {\n   Configs,\n   GeetestCaptchaResponse,\n   resetCaptchaState,\n   RootState,\n   selectAlertState,\n   selectCaptchaDataObjectLoading,\n   selectCaptchaResponse,\n   selectConfigs,\n   selectGeetestCaptchaSuccess,\n   selectRecaptchaSuccess,\n   selectSignInError,\n   selectSignInLoading,\n   selectSignInRequire2FA,\n   selectSignUpRequireVerification,\n   selectUserFetching,\n   selectUserLoggedIn,\n   signIn,\n   signInError,\n   signInRequire2FA,\n   signUpRequireVerification,\n} from 'modules';\nimport { CommonError } from 'modules/types';\nimport { Captcha, FormLogin, TFA } from 'components';\n\ninterface ReduxProps {\n   error?: CommonError;\n   isLoggedIn: boolean;\n   loading?: boolean;\n   isLoading: boolean;\n   require2FA?: boolean;\n   requireEmailVerification?: boolean;\n   configs: Configs;\n   captcha_response?: string | GeetestCaptchaResponse;\n   reCaptchaSuccess: boolean;\n   geetestCaptchaSuccess: boolean;\n   captchaLoading: boolean;\n}\n\ninterface DispatchProps {\n   signIn: typeof signIn;\n   signInError: typeof signInError;\n   signInRequire2FA: typeof signInRequire2FA;\n   resetCaptchaState: typeof resetCaptchaState;\n   signUpRequireVerification: typeof signUpRequireVerification;\n}\n\ninterface LoginState {\n   email: string;\n   emailError: string;\n   emailFocused: boolean;\n   password: string;\n   passwordError: string;\n   passwordFocused: boolean;\n   otpCode: string;\n   error2fa: string;\n   codeFocused: boolean;\n}\n\ninterface OwnProps {\n   location: {\n      state: {\n         email: string;\n         password: string;\n      };\n   };\n}\n\ntype Props = ReduxProps & DispatchProps & RouterProps & OwnProps & IntlProps;\n\nclass LoginClass extends Component<Props, LoginState> {\n   public constructor(props) {\n      super(props);\n      this.geetestCaptchaRef = React.createRef<HTMLButtonElement>();\n   }\n   private geetestCaptchaRef;\n\n   public state = {\n      email: (this.props.location.state && this.props.location.state.email) || '',\n      password: (this.props.location.state && this.props.location.state.password) || '',\n      emailError: '',\n      emailFocused: false,\n      passwordError: '',\n      passwordFocused: false,\n      otpCode: '',\n      error2fa: '',\n      codeFocused: false,\n   }\n\n   public componentDidMount() {\n      setDocumentTitle('Login');\n      this.props.signInError({ code: 0, message: [''] });\n      this.props.signUpRequireVerification({ requireVerification: false });\n   }\n\n   public componentDidUpdate(prevProps: Readonly<Props>, prevState: Readonly<LoginState>, snapshot?: any) {\n      const { otpCode } = this.state;\n      if (!prevState.otpCode && otpCode.length === 6) {\n         this.handle2FASignIn();\n      }\n   }\n\n   public componentWillReceiveProps(nextProps: Props) {\n      const { email } = this.state;\n      const {\n         isLoggedIn,\n         resetCaptchaState,\n         history: { push },\n      } = this.props;\n\n      if (!isLoggedIn && nextProps.isLoggedIn) {\n         resetCaptchaState();\n         push('/wallets', { email });\n      }\n\n      if (nextProps.requireEmailVerification) {\n         push('/email-verification', { email })\n      };\n\n      // if (captcha_type !== 'none' && captchaLogin() && error && !require2FA) {\n      //    resetCaptchaState();\n      // }\n   }\n\n   public componentWillUnmount() {\n      this.props.resetCaptchaState();\n   }\n\n   public renderCaptcha = () => <Captcha geetestCaptchaRef={this.geetestCaptchaRef} />;\n\n   public render() {\n      const { require2FA } = this.props;\n      return require2FA ? this.render2FA() : this.renderSignInForm();\n   }\n\n   private render2FA = () => {\n      const { isLoading } = this.props;\n      const { otpCode, error2fa, codeFocused } = this.state;\n      const translate = (id: string) => this.props.intl.formatMessage({ id });\n\n      return <TFA\n         isLoading={isLoading}\n         onSubmit={this.handle2FASignIn}\n         title={translate('page.auth.2fa.title')}\n         subTitle={translate('page.auth.2fa.subtitle')}\n         buttonLabel={translate('page.body.kyc.next')}\n         modalTitle={translate('page.auth.2fa.modal.title')}\n         modalButton={translate('page.auth.2fa.modal.button')}\n         // message={this.props.intl.formatMessage({ id: 'page.password2fa.message' })}\n         codeFocused={codeFocused}\n         otpCode={otpCode}\n         error={error2fa}\n         handleOtpCodeChange={this.handleChangeOtpCode}\n         handleChangeFocusField={this.handle2faFocus}\n         handleClose2fa={this.handleClose}\n      />\n\n   }\n\n   private renderSignInForm = () => {\n      const {\n         configs,\n         isLoading,\n         captcha_response,\n         reCaptchaSuccess,\n         geetestCaptchaSuccess,\n      } = this.props;\n\n      const {\n         email, emailError, emailFocused, password, passwordError, passwordFocused\n      } = this.state;\n      const { intl: { formatMessage }, captchaLoading } = this.props;\n\n      return (\n         <>\n            <FormLogin\n               geetestCaptchaRef={this.geetestCaptchaRef}\n               title=\"Login to Digiasset\"\n               subTitle=\"Please ensure you are visiting the correct url.\"\n               email={email}\n               emailError={emailError}\n               emailFocused={emailFocused}\n               emailPlaceholder={formatMessage({ id: 'page.header.signIn.email' })}\n               password={password}\n               passwordError={passwordError}\n               passwordFocused={passwordFocused}\n               passwordPlaceholder={formatMessage({ id: 'page.header.signIn.password' })}\n               labelSignIn={formatMessage({ id: 'page.header.signIn' })}\n               labelSignUp={formatMessage({ id: 'page.header.signUp' })}\n               emailLabel={formatMessage({ id: 'page.header.signIn.email' })}\n               passwordLabel={formatMessage({ id: 'page.header.signIn.password' })}\n               receiveConfirmationLabel={formatMessage({ id: 'page.header.signIn.receiveConfirmation' })}\n               forgotPasswordLabel={formatMessage({ id: 'page.header.signIn.forgotPassword' })}\n               isLoading={isLoading || captchaLoading}\n               onForgotPassword={this.forgotPassword}\n               onSignUp={this.handleSignUp}\n               onSignIn={this.handleSignIn}\n               handleChangeFocusField={this.handleFieldFocus}\n               isFormValid={this.validateForm}\n               refreshError={this.refreshError}\n               changeEmail={this.handleChangeEmailValue}\n               resetEmail={this.resetEmail}\n               changePassword={this.handleChangePasswordValue}\n               captchaType={configs.captcha_type}\n               renderCaptcha={this.renderCaptcha()}\n               reCaptchaSuccess={reCaptchaSuccess}\n               geetestCaptchaSuccess={geetestCaptchaSuccess}\n               captcha_response={captcha_response}\n            />\n         </>\n      )\n\n   }\n\n   private handle2FASignIn = () => {\n      const { email, password, otpCode } = this.state;\n      const { configs: { captcha_type }, captcha_response, signIn } = this.props;\n\n      if (!otpCode) {\n         this.setState({\n            error2fa: 'Please enter 2fa code',\n         });\n      } else {\n         if (captcha_type !== 'none' && captchaLogin()) {\n            signIn({ email, password, captcha_response, otp_code: otpCode });\n         } else {\n            signIn({ email, password, otp_code: otpCode });\n         }\n      }\n   };\n\n   private handleChangeOtpCode = (value: string) => this.setState({ error2fa: '', otpCode: value });\n\n   private handle2faFocus = () => this.setState(prev => ({ codeFocused: !prev.codeFocused }));\n\n   private handleClose = () => this.props.signInRequire2FA({ require2fa: false });\n\n   private forgotPassword = () => this.props.history.push('/forgot_password');\n\n   private handleSignUp = () => this.props.history.push('/register');\n\n   private handleSignIn = () => {\n      const { email, password } = this.state;\n      const { configs: { captcha_type }, captcha_response } = this.props;\n\n      if (captcha_type !== 'none' && captchaLogin()) {\n         this.props.signIn({ email, password, captcha_response });\n      } else {\n         this.props.signIn({ email, password });\n      }\n   };\n\n   private handleFieldFocus = (field: string) => {\n      switch (field) {\n         case 'email':\n            this.setState(prev => ({\n               emailFocused: !prev.emailFocused,\n            }));\n            break;\n         case 'password':\n            this.setState(prev => ({\n               passwordFocused: !prev.passwordFocused,\n            }));\n            break;\n         default:\n            break;\n      }\n   };\n\n   private validateForm = () => {\n      const { email, password } = this.state;\n      const isEmailValid = email.match(EMAIL_REGEX);\n\n      if (!isEmailValid) {\n         this.setState({\n            emailError: this.props.intl.formatMessage({ id: ERROR_INVALID_EMAIL }),\n            passwordError: '',\n         });\n         return;\n      }\n      if (!password) {\n         this.setState({\n            emailError: '',\n            passwordError: this.props.intl.formatMessage({ id: ERROR_EMPTY_PASSWORD }),\n         });\n         return;\n      }\n   };\n\n   private refreshError = () => this.setState({ emailError: '', passwordError: '' });\n\n   private resetEmail = () => this.setState({ email: '', emailFocused: true, emailError: 'Email must be filled' });\n\n   private handleChangeEmailValue = (email: string) => {\n      const isEmailValid = email.match(EMAIL_REGEX);\n      this.setState({\n         email,\n         emailError: !email.length ? 'Email must be filled' : (email.length && !isEmailValid) ? this.props.intl.formatMessage({ id: ERROR_INVALID_EMAIL }) : ''\n      });\n   };\n\n   private handleChangePasswordValue = (password: string) => {\n      const isPasswordValid = password.match(PASSWORD_REGEX);\n      this.setState({\n         password,\n         passwordError: !password.length ? 'Password must be filled' : !isPasswordValid ? this.props.intl.formatMessage({ id: ERROR_EMPTY_PASSWORD }) : ''\n      })\n   }\n\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   alert: selectAlertState(state),\n   error: selectSignInError(state),\n   isLoggedIn: selectUserLoggedIn(state),\n   loading: selectUserFetching(state),\n   isLoading: selectSignInLoading(state),\n   require2FA: selectSignInRequire2FA(state),\n   requireEmailVerification: selectSignUpRequireVerification(state),\n   configs: selectConfigs(state),\n   captcha_response: selectCaptchaResponse(state),\n   reCaptchaSuccess: selectRecaptchaSuccess(state),\n   geetestCaptchaSuccess: selectGeetestCaptchaSuccess(state),\n   captchaLoading: selectCaptchaDataObjectLoading(state)\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   signIn: data => dispatch(signIn(data)),\n   signInError: error => dispatch(signInError(error)),\n   signInRequire2FA: payload => dispatch(signInRequire2FA(payload)),\n   resetCaptchaState: () => dispatch(resetCaptchaState()),\n   signUpRequireVerification: data => dispatch(signUpRequireVerification(data))\n});\n\nexport const Login = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps)\n)(LoginClass) as ComponentClass;\n","import React, {\n   Component\n} from 'react';\nimport { History } from 'history';\nimport { injectIntl } from 'react-intl';\nimport {\n   connect,\n   MapDispatchToPropsFunction,\n   MapStateToProps,\n} from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../../';\nimport { isUsernameEnabled } from 'api';\nimport {\n   Captcha,\n   FormRegister,\n   LayoutAuth\n} from 'components';\nimport {\n   EMAIL_REGEX,\n   ERROR_INVALID_EMAIL,\n   ERROR_INVALID_PASSWORD,\n   ERROR_PASSWORD_CONFIRMATION,\n   PASSWORD_REGEX,\n   setDocumentTitle,\n} from 'helpers';\nimport {\n   Configs,\n   entropyPasswordFetch, GeetestCaptchaResponse,\n   GeetestCaptchaV4Response,\n   LanguageState,\n   resetCaptchaState,\n   RootState,\n   selectCaptchaDataObjectLoading,\n   selectCaptchaResponse,\n   selectConfigs,\n   selectCurrentLanguage,\n   selectCurrentPasswordEntropy,\n   selectGeetestCaptchaSuccess,\n   selectRecaptchaSuccess,\n   selectSignUpError,\n   selectSignUpLoading,\n   selectSignUpRequireVerification,\n   signUp,\n} from 'modules';\n\ninterface ReduxProps {\n   configs: Configs;\n   requireVerification?: boolean;\n   loading?: boolean;\n   currentPasswordEntropy: number;\n   captcha_response?: string | GeetestCaptchaResponse | GeetestCaptchaV4Response;\n   reCaptchaSuccess: boolean;\n   geetestCaptchaSuccess: boolean;\n   isLoading: boolean;\n   captchaLoading: boolean;\n}\n\ninterface DispatchProps {\n   signUp: typeof signUp;\n   fetchCurrentPasswordEntropy: typeof entropyPasswordFetch;\n   resetCaptchaState: typeof resetCaptchaState;\n}\n\ninterface RouterProps {\n   location: {\n      search: string;\n   };\n   history: History;\n}\n\ninterface OwnProps {\n   signUpError: boolean;\n   i18n: LanguageState['lang'];\n}\n\ntype Props = ReduxProps & DispatchProps & RouterProps & IntlProps & OwnProps;\n\nexport const extractRefID = (props: RouterProps) => new URLSearchParams(props.location.search).get('refid');\n\nclass RegisterClass extends Component<Props> {\n   public constructor(props) {\n      super(props);\n\n      this.geetestCaptchaRef = React.createRef<HTMLButtonElement>();\n   }\n\n   private geetestCaptchaRef;\n\n   public readonly state = {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      refId: '',\n      hasConfirmed: false,\n      usernameError: '',\n      emailError: '',\n      passwordError: '',\n      confirmationError: '',\n      usernameFocused: false,\n      emailFocused: false,\n      passwordFocused: false,\n      confirmPasswordFocused: false,\n      refIdFocused: false,\n   };\n\n   public componentDidMount() {\n      setDocumentTitle('Register');\n      const localReferralCode = localStorage.getItem('referralCode');\n      const refId = this.extractRefID(this.props.location.search);\n      const referralCode = refId || localReferralCode || '';\n      this.setState({ refId: referralCode });\n      if (refId && refId !== localReferralCode) {\n         localStorage.setItem('referralCode', referralCode);\n      }\n   }\n\n   public componentDidUpdate(prev: Props) {\n      const { email, password } = this.state;\n      if (!prev.requireVerification && this.props.requireVerification)\n         this.props.history.push('/email-verification', { email, password });\n   }\n\n   public renderCaptcha = () => {\n      // const { signUpError } = this.props;\n      // const { confirmationError, emailError } = this.state;\n      // const error = signUpError || confirmationError || emailError;\n      return <Captcha geetestCaptchaRef={this.geetestCaptchaRef} />;\n   };\n\n   public render() {\n      const {\n         configs,\n         isLoading,\n         captcha_response,\n         reCaptchaSuccess,\n         geetestCaptchaSuccess,\n         intl: { formatMessage },\n         captchaLoading,\n      } = this.props;\n      const {\n         username,\n         email,\n         password,\n         confirmPassword,\n         refId,\n         hasConfirmed,\n         emailError,\n         passwordError,\n         confirmationError,\n         usernameFocused,\n         emailFocused,\n         passwordFocused,\n         confirmPasswordFocused,\n         refIdFocused\n      } = this.state;\n      return (\n         <LayoutAuth\n            descLinkTo=\"Already have an account?\"\n            linkTo=\"/login\"\n            linkToTxt=\"Login\"\n            title=\"Register\"\n            subTitle=\"Please fill in the data below with honest and accurate information.\"\n         >\n            <FormRegister\n               geetestCaptchaRef={this.geetestCaptchaRef}\n               captchaType={configs.captcha_type}\n               renderCaptcha={this.renderCaptcha()}\n               captcha_response={captcha_response}\n               isReCaptchaSuccess={reCaptchaSuccess}\n               isGeetestCaptchaSuccess={geetestCaptchaSuccess}\n               hasConfirmed={hasConfirmed}\n               isLoading={isLoading || captchaLoading}\n               onRegister={this.handleSignUp}\n               onLogin={this.handleSignIn}\n               validateForm={this.handleValidateForm}\n               clickCheckBox={this.handleCheckboxClick}\n\n               username={username}\n               email={email}\n               password={password}\n               confirmPassword={confirmPassword}\n               refid={refId}\n\n               handleChangeUsername={this.handleChangeUsername}\n               handleChangeEmail={this.handleChangeEmail}\n               handleChangePassword={this.handleChangePassword}\n               handleChangeConfirmPassword={this.handleChangeConfirmPassword}\n               handleChangeRefId={this.handleChangeRefId}\n\n               focusUsername={usernameFocused}\n               focusEmail={emailFocused}\n               focusPassword={passwordFocused}\n               focusConfirmPassword={confirmPasswordFocused}\n               focusRefId={refIdFocused}\n\n               handleFocusUsername={this.handleFocusUsername}\n               handleFocusEmail={this.handleFocusEmail}\n               handleFocusPassword={this.handleFocusPassword}\n               handleFocusConfirmPassword={this.handleFocusConfirmPassword}\n               handleFocusRefId={this.handleFocusRefId}\n\n               handleResetEmail={this.handleResetEmail}\n\n               usernameLabel={`Username`}\n               emailLabel={formatMessage({ id: 'page.header.signUp.email' })}\n               passwordLabel={formatMessage({ id: 'page.header.signUp.password' })}\n               confirmPasswordLabel={formatMessage({ id: 'page.header.signUp.confirmPassword' })}\n               refIdLabel={`${formatMessage({ id: 'page.header.signUp.referalCode' })} (optional)`}\n\n               emailError={emailError}\n               passwordError={passwordError}\n               confirmPasswordError={confirmationError}\n\n               termsMessage={formatMessage({ id: 'page.header.signUp.terms' })}\n\n               translate={this.translate}\n            />\n         </LayoutAuth>\n      )\n   }\n\n   private translate = (key: string) => this.props.intl.formatMessage({ id: key });\n\n\n   private handleCheckboxClick = () => {\n      this.setState({\n         hasConfirmed: !this.state.hasConfirmed,\n      });\n   };\n\n   private handleChangeUsername = (value: string) => {\n      this.setState({\n         username: value.replace(/[^A-Za-z0-9]+/g, '').toLowerCase(),\n      });\n   };\n\n   private handleResetEmail = () => this.setState({ email: '', emailFocused: true, emailError: 'Email must be filled' });\n   private handleChangeEmail = (email: string) => {\n      const isEmailValid = email.match(EMAIL_REGEX);\n      this.setState({\n         email,\n         emailError: !email.length ? 'Email must be filled' : (email.length && !isEmailValid) ? this.props.intl.formatMessage({ id: ERROR_INVALID_EMAIL }) : ''\n      });\n   };\n   private handleChangePassword = (password: string) => {\n      this.setState({ password });\n   };\n\n   private handleChangeConfirmPassword = (value: string) => {\n      this.setState({\n         confirmPassword: value,\n      });\n   };\n\n   private handleChangeRefId = (value: string) => {\n      this.setState({\n         refId: value,\n      });\n   };\n\n   private handleFocusUsername = () => {\n      this.setState({\n         usernameFocused: !this.state.usernameFocused,\n      });\n   };\n\n   private handleFocusEmail = () => {\n      this.setState({\n         emailFocused: !this.state.emailFocused,\n      });\n   };\n\n   private handleFocusPassword = () => {\n      this.setState({\n         passwordFocused: !this.state.passwordFocused,\n      });\n   };\n\n   private handleFocusConfirmPassword = () => {\n      this.setState({\n         confirmPasswordFocused: !this.state.confirmPasswordFocused,\n      });\n   };\n\n   private handleFocusRefId = () => {\n      this.setState({\n         refIdFocused: !this.state.refIdFocused,\n      });\n   };\n\n   private handleSignIn = () => {\n      this.props.history.push('/login');\n   };\n\n   private handleSignUp = () => {\n      const { configs, i18n, captcha_response, signUp } = this.props;\n      const {\n         username,\n         email,\n         password,\n         refId,\n      } = this.state;\n      let payload: any = {\n         email,\n         password,\n         data: JSON.stringify({\n            language: i18n,\n         }),\n      };\n\n      if (isUsernameEnabled()) {\n         payload = { ...payload, username };\n      }\n\n      if (refId) {\n         payload = { ...payload, refid: refId };\n      }\n\n      switch (configs.captcha_type) {\n         case 'recaptcha':\n         case 'geetest':\n            payload = { ...payload, captcha_response };\n\n            signUp(payload);\n            break;\n         default:\n            signUp(payload);\n            break;\n      }\n      this.props.resetCaptchaState();\n   };\n\n   private handleValidateForm = () => {\n      const { email, password, confirmPassword } = this.state;\n      const { intl: { formatMessage } } = this.props;\n      const isEmailValid = email.match(EMAIL_REGEX);\n      const isPasswordValid = password.match(PASSWORD_REGEX);\n      const isConfirmPasswordValid = password === confirmPassword;\n\n      if (!isEmailValid && !isPasswordValid) {\n         this.setState({\n            confirmationError: '',\n            emailError: formatMessage({ id: ERROR_INVALID_EMAIL }),\n            passwordError: formatMessage({ id: ERROR_INVALID_PASSWORD }),\n            hasConfirmed: false,\n         });\n\n         return;\n      }\n\n      if (!isEmailValid) {\n         this.setState({\n            confirmationError: '',\n            emailError: formatMessage({ id: ERROR_INVALID_EMAIL }),\n            passwordError: '',\n            hasConfirmed: false,\n         });\n\n         return;\n      }\n\n      if (!isPasswordValid) {\n         this.setState({\n            confirmationError: '',\n            emailError: '',\n            passwordError: formatMessage({ id: ERROR_INVALID_PASSWORD }),\n            hasConfirmed: false,\n         });\n\n         return;\n      }\n\n      if (!isConfirmPasswordValid) {\n         this.setState({\n            confirmationError: formatMessage({ id: ERROR_PASSWORD_CONFIRMATION }),\n            emailError: '',\n            passwordError: '',\n            hasConfirmed: false,\n         });\n\n         return;\n      }\n   };\n\n   private extractRefID = (url: string) => new URLSearchParams(url).get('refid');\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   configs: selectConfigs(state),\n   i18n: selectCurrentLanguage(state),\n   requireVerification: selectSignUpRequireVerification(state),\n   signUpError: selectSignUpError(state),\n   currentPasswordEntropy: selectCurrentPasswordEntropy(state),\n   captcha_response: selectCaptchaResponse(state),\n   reCaptchaSuccess: selectRecaptchaSuccess(state),\n   geetestCaptchaSuccess: selectGeetestCaptchaSuccess(state),\n   isLoading: selectSignUpLoading(state),\n   captchaLoading: selectCaptchaDataObjectLoading(state)\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n   dispatch => ({\n      signUp: credentials => dispatch(signUp(credentials)),\n      fetchCurrentPasswordEntropy: payload => dispatch(entropyPasswordFetch(payload)),\n      resetCaptchaState: () => dispatch(resetCaptchaState()),\n   });\n\nexport const Register = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps),\n)(RegisterClass) as React.ComponentClass;\n","import React, { FC, FunctionComponent, KeyboardEvent, useRef, useState } from 'react';\nimport { injectIntl } from 'react-intl';\nimport {\n   connect,\n   MapDispatchToPropsFunction,\n   MapStateToProps,\n} from 'react-redux';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../..';\nimport { Captcha, FormForgotPassword, LayoutAuth } from 'components';\nimport {\n   EMAIL_REGEX,\n   ERROR_INVALID_EMAIL,\n} from 'helpers';\nimport {\n   Configs,\n   forgotPassword,\n   GeetestCaptchaResponse,\n   GeetestCaptchaV4Response,\n   resetCaptchaState,\n   RootState,\n   selectCaptchaResponse,\n   selectConfigs,\n   selectForgotPasswordError,\n   selectForgotPasswordSuccess,\n   selectGeetestCaptchaSuccess,\n   selectRecaptchaSuccess,\n} from 'modules';\nimport { CommonError } from 'modules/types';\nimport { useDocumentTitle } from 'hooks';\n\ninterface ReduxProps {\n   success: boolean;\n   error?: CommonError;\n   configs: Configs;\n   captcha_response?: string | GeetestCaptchaResponse | GeetestCaptchaV4Response;\n   reCaptchaSuccess: boolean;\n   geetestCaptchaSuccess: boolean;\n   isLoading: boolean;\n}\n\ninterface DispatchProps {\n   forgotPassword: typeof forgotPassword;\n   resetCaptchaState: typeof resetCaptchaState;\n}\n\ninterface ForgotPasswordState {\n   email: string;\n   emailError: string;\n}\n\ntype Props = RouterProps & ReduxProps & DispatchProps & IntlProps;\n\nconst ForgotPasswordFC: FC<Props> = ({\n   success,\n   error,\n   configs,\n   captcha_response,\n   reCaptchaSuccess,\n   geetestCaptchaSuccess,\n   isLoading,\n   forgotPassword,\n   resetCaptchaState,\n   history,\n   intl\n}) => {\n   useDocumentTitle('Forgot Password');\n   const geetestCaptchaRef = useRef<HTMLButtonElement>(null);\n   const [state, setState] = useState<ForgotPasswordState>({\n      email: '',\n      emailError: '',\n   });\n   const { email, emailError } = state;\n\n   const translate = (id: string) => intl.formatMessage({ id });\n\n   const handleChangePassword = () => {\n      switch (configs.captcha_type) {\n         case 'recaptcha':\n         case 'geetest':\n            forgotPassword({ email, captcha_response });\n            break;\n         default:\n            forgotPassword({ email });\n            break;\n      }\n      setState({ ...state, email: '' });\n      resetCaptchaState();\n   };\n\n   const handleInputEmail = (email: string) => {\n      const isEmailValid = email.match(EMAIL_REGEX);\n      setState({\n         ...state,\n         email,\n         emailError: !email ? `Email ${translate('mustBeFilled')}` : (email && !isEmailValid) ? translate(ERROR_INVALID_EMAIL) : ''\n      });\n   };\n\n   const validateForm = () => {\n      const isEmailValid = email ? email.match(EMAIL_REGEX) : true;\n      if (!isEmailValid) {\n         setState({\n            ...state,\n            emailError: ERROR_INVALID_EMAIL,\n         });\n         return;\n      }\n   };\n\n   const handleEnterPress = (e: KeyboardEvent<HTMLDivElement>) => {\n      if (e.key === 'Enter') {\n         e.preventDefault();\n         handleChangePassword();\n      }\n   };\n\n   const handleRenderInputNewPass = () => history.push('/accounts/password_reset', { email });\n\n   const renderCaptcha = () => <Captcha geetestCaptchaRef={geetestCaptchaRef} error={error} success={success} />;\n\n   return (\n      <LayoutAuth\n         linkTo=\"/register\"\n         linkToTxt=\"Register for free\"\n         descLinkTo=\"Don’t have an account?\"\n         onKeyPress={handleEnterPress}\n         title={translate('page.forgotPassword')}\n         subTitle={translate('page.forgotPassword.subtitle')}\n      >\n         <FormForgotPassword\n            geetestCaptchaRef={geetestCaptchaRef}\n            buttonLabel={translate('page.body.kyc.next')}\n            isLoading={isLoading}\n            onSubmit={handleChangePassword}\n            emailLabel={translate('page.forgotPassword.label')}\n            email={email}\n            emailError={emailError}\n            placeholder={translate('page.header.signIn.email')}\n            validateForm={validateForm}\n            handleChangeEmail={handleInputEmail}\n            captchaType={configs.captcha_type}\n            renderCaptcha={renderCaptcha()}\n            reCaptchaSuccess={reCaptchaSuccess}\n            geetestCaptchaSuccess={geetestCaptchaSuccess}\n            captcha_response={captcha_response}\n            handleRenderInputNewPass={handleRenderInputNewPass}\n         />\n      </LayoutAuth>\n   )\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   success: selectForgotPasswordSuccess(state),\n   error: selectForgotPasswordError(state),\n   configs: selectConfigs(state),\n   captcha_response: selectCaptchaResponse(state),\n   reCaptchaSuccess: selectRecaptchaSuccess(state),\n   geetestCaptchaSuccess: selectGeetestCaptchaSuccess(state),\n   isLoading: selectForgotPasswordSuccess(state)\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   forgotPassword: credentials => dispatch(forgotPassword(credentials)),\n   resetCaptchaState: () => dispatch(resetCaptchaState())\n});\n\nexport const ForgotPassword = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps)\n)(ForgotPasswordFC) as FunctionComponent;\n","import React, {\n   FunctionComponent,\n   useEffect,\n   useState,\n   KeyboardEvent,\n   useRef\n} from 'react';\nimport { injectIntl } from 'react-intl';\nimport {\n   connect,\n   MapDispatchToPropsFunction,\n   MapStateToProps,\n} from 'react-redux';\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from '../../..';\nimport {\n   Captcha,\n   FormChangeNewPassword,\n   LayoutAuth\n} from 'components';\nimport { truncateMiddle } from 'helpers';\nimport {\n   changeForgotPasswordFetch,\n   CommonError,\n   Configs,\n   forgotPassword,\n   GeetestCaptchaResponse,\n   GeetestCaptchaV4Response,\n   resetCaptchaState,\n   RootState,\n   selectCaptchaResponse,\n   selectChangeForgotPasswordLoading,\n   selectChangeForgotPasswordSuccess,\n   selectConfigs,\n   selectForgotPasswordError,\n   selectForgotPasswordSuccess,\n   selectGeetestCaptchaSuccess,\n   selectRecaptchaSuccess,\n} from 'modules';\nimport { useDocumentTitle, useShowGeetestCaptcha } from 'hooks';\n\ntype State = {\n   isRendered: 0 | 1;\n   otpCode: string;\n   password: string;\n}\n\ninterface ReduxProps {\n   forgotPasswordRequested: boolean;\n   forgotPasswordChanged: boolean;\n   configs: Configs;\n   captcha_response?: string | GeetestCaptchaResponse | GeetestCaptchaV4Response;\n   reCaptchaSuccess: boolean;\n   geetestCaptchaSuccess: boolean;\n   success: boolean;\n   error?: CommonError;\n   isLoading?: boolean;\n}\n\ninterface DispatchProps {\n   changeForgotPasswordFetch: typeof changeForgotPasswordFetch;\n   fetchForgotPassword: typeof forgotPassword;\n   resetCaptchaState: typeof resetCaptchaState;\n}\n\ntype OwnProps = {\n   location: {\n      state: {\n         email: string;\n      };\n   };\n}\n\ntype PasswordProps = {\n   password: string;\n   confirm_password: string;\n}\n\ntype Props = RouterProps & DispatchProps & OwnProps & ReduxProps & IntlProps;\n\nconst ChangeForgotPasswordFC = ({\n   forgotPasswordRequested,\n   forgotPasswordChanged,\n   configs,\n   captcha_response,\n   history,\n   location,\n   intl,\n   changeForgotPasswordFetch,\n   fetchForgotPassword,\n   resetCaptchaState,\n   reCaptchaSuccess,\n   geetestCaptchaSuccess,\n   success,\n   error,\n   isLoading,\n}: Props) => {\n   const geetestCaptchaRef = useRef<HTMLButtonElement>(null);\n   const [state, setState] = useState<State>({\n      isRendered: 0,\n      otpCode: '',\n      password: '',\n   });\n   const { isRendered, otpCode, password } = state;\n\n   useDocumentTitle('Change forgotten password');\n   useEffect(() => {\n      forgotPasswordChanged && history.push('/login', { email: location.state?.email, password });\n   }, [forgotPasswordChanged]);\n   useEffect(() => {\n      if (configs.captcha_type !== 'none') {\n         if (reCaptchaSuccess || geetestCaptchaSuccess) {\n            handleResendGenerateCode();\n         }\n      }\n   }, [reCaptchaSuccess, geetestCaptchaSuccess]);\n\n   const translate = (id: string) => intl.formatMessage({ id });\n\n   const handleChangeOTP = (otpCode: string) => setState({\n      ...state,\n      otpCode\n   });\n\n   const handleChangeRendered = () => setState({\n      ...state,\n      isRendered: isRendered == 1 ? 0 : 1\n   });\n\n   const handleSendNewPassword = ({\n      password,\n      confirm_password\n   }: PasswordProps) => {\n      changeForgotPasswordFetch({\n         password,\n         confirm_password,\n         reset_password_token: otpCode,\n         email: location.state?.email\n      });\n      setState({\n         ...state,\n         password\n      });\n   }\n\n   const handleResendGenerateCode = () => {\n      if (location.state?.email && isRendered === 0) {\n         switch (configs.captcha_type) {\n            case 'recaptcha':\n            case 'geetest':\n               fetchForgotPassword({ email: location.state?.email, captcha_response });\n               break;\n            default:\n               fetchForgotPassword({ email: location.state?.email });\n               break;\n         }\n         resetCaptchaState();\n      } else {\n         history.push('/forgot_password');\n      }\n   }\n\n   const renderCaptcha = () => <Captcha geetestCaptchaRef={geetestCaptchaRef} />;\n\n   const handleOnKeyPress = (e: KeyboardEvent<HTMLDivElement>) => {\n      if (e.key === 'Enter') {\n         switch (isRendered) {\n            case 0:\n               return handleChangeRendered()\n            case 1:\n               return handleResendGenerateCode()\n            default:\n               return;\n         }\n      }\n   }\n\n   const isDisabled = () => {\n      if (isRendered === 0 && otpCode.length < 6) {\n         return true;\n      }\n      if (isRendered === 1) {\n         return true;\n      }\n      return false;\n   }\n\n   return (\n      <LayoutAuth\n         linkTo=\"/register\"\n         linkToTxt={translate('page.body.landing.header.button3')}\n         descLinkTo=\"Don’t have an account?\"\n         title={`${isRendered === 0 ? 'PIN forgot password' : translate('page.header.signIn.resetPassword.newPassword')}`}\n         subTitle={`${isRendered === 0 ? 'To reset your password, please complete the following verification. Enter the 6 digit code received by ' : ''}`}\n         withSubTitleOneOfBold={`${isRendered === 0 ? (location?.state && (truncateMiddle(location?.state?.email ?? '', 12, '***'))) : ''}`}\n         onKeyPress={handleOnKeyPress}\n      >\n         <FormChangeNewPassword\n            geetestCaptchaRef={geetestCaptchaRef}\n            isRendered={isRendered}\n            otpCode={otpCode}\n            forgotPasswordRequested={forgotPasswordRequested}\n            handleChangeOTP={handleChangeOTP}\n            handleChangeRendered={handleChangeRendered}\n            changeForgotPasswordFetch={handleSendNewPassword}\n            isDisabled={isDisabled()}\n            isLoading={isLoading}\n            translate={translate}\n            renderCaptcha={renderCaptcha()}\n            handleResendGenerateCode={configs.captcha_type !== 'none' ? useShowGeetestCaptcha : handleResendGenerateCode}\n         />\n      </LayoutAuth>\n   )\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   forgotPasswordRequested: selectForgotPasswordSuccess(state),\n   forgotPasswordChanged: selectChangeForgotPasswordSuccess(state),\n   configs: selectConfigs(state),\n   captcha_response: selectCaptchaResponse(state),\n   reCaptchaSuccess: selectRecaptchaSuccess(state),\n   geetestCaptchaSuccess: selectGeetestCaptchaSuccess(state),\n   success: selectForgotPasswordSuccess(state),\n   error: selectForgotPasswordError(state),\n   isLoading: selectChangeForgotPasswordLoading(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   changeForgotPasswordFetch: credentials => dispatch(changeForgotPasswordFetch(credentials)),\n   fetchForgotPassword: credentials => dispatch(forgotPassword(credentials)),\n   resetCaptchaState: () => dispatch(resetCaptchaState())\n});\n\nexport const ChangeForgotPassword = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps),\n)(ChangeForgotPasswordFC) as FunctionComponent;\n","import { History } from 'history';\nimport React, { FC, FunctionComponent, useEffect, useState } from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapStateToProps } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { IntlProps } from 'index';\nimport { Button, LayoutAuth, InputOtp, Captcha } from 'components';\nimport { EMAIL_REGEX, setDocumentTitle } from 'helpers';\nimport {\n   Configs,\n   verificationFetch,\n   emailVerificationFetch,\n   GeetestCaptchaResponse,\n   resetCaptchaState,\n   RootState,\n   selectCaptchaResponse,\n   selectConfigs,\n   selectCurrentLanguage,\n   selectGeetestCaptchaSuccess,\n   selectMobileDeviceState,\n   selectRecaptchaSuccess,\n   selectSendEmailVerificationError,\n   selectSendEmailVerificationLoading,\n   selectSendEmailVerificationSuccess,\n   selectUserInfo,\n   User,\n   selectEmailVerified,\n   GeetestCaptchaV4Response,\n} from 'modules';\nimport type { CommonError } from 'modules/types';\n\ninterface OwnProps {\n   history: History;\n   location: {\n      state: {\n         email: string;\n         password: string;\n      };\n   };\n   success: boolean;\n   error?: CommonError;\n}\n\ninterface DispatchProps {\n   verificationFetch: typeof verificationFetch;\n   emailVerificationFetch: typeof emailVerificationFetch;\n   resetCaptchaState: typeof resetCaptchaState;\n}\n\ninterface ReduxProps {\n   emailVerificationLoading: boolean;\n   emailVerified: boolean;\n   isMobileDevice: boolean;\n   configs: Configs;\n   captcha_response?: string | GeetestCaptchaResponse | GeetestCaptchaV4Response;\n   reCaptchaSuccess: boolean;\n   geetestCaptchaSuccess: boolean;\n   user: User;\n}\n\ntype Props = DispatchProps & ReduxProps & OwnProps & IntlProps;\n\nconst EmailVerificationComponent: FC<Props> = ({\n   history: { push },\n   location: { state },\n   success,\n   error,\n\n   emailVerificationLoading,\n   emailVerified,\n   isMobileDevice,\n   configs: { captcha_type },\n   captcha_response,\n   reCaptchaSuccess,\n   geetestCaptchaSuccess,\n   user,\n\n   verificationFetch,\n   emailVerificationFetch,\n   resetCaptchaState,\n\n   intl: { formatMessage },\n}) => {\n   const [code, setCode] = useState<string>('');\n\n   const initialMinute = 0;\n   const [initialSeconds, setInitialSeconds] = useState<number>(60);\n   const [minutes, setMinutes] = useState(initialMinute);\n   const [seconds, setSeconds] = useState(initialSeconds);\n   useEffect(() => {\n      let myInterval = setInterval(() => {\n         if (seconds > 0) {\n            setSeconds(seconds - 1);\n         }\n         if (seconds === 0) {\n            if (minutes === 0) {\n               clearInterval(myInterval)\n            } else {\n               setMinutes(minutes - 1);\n               setSeconds(59);\n            }\n         }\n      }, 1000)\n      return () => clearInterval(myInterval);\n   }, [minutes, seconds]);\n\n   useEffect(() => {\n      setDocumentTitle('Email verification');\n      if (!state) {\n         push('/login');\n      }\n   }, []);\n\n   useEffect(() => {\n      const { email, password } = state;\n      if (emailVerified === true) {\n         push('/login', { email, password });\n      }\n   }, [emailVerified]);\n\n   useEffect(() => {\n      if (code.length === 6) {\n         handleVerification();\n      }\n   }, [code]);\n\n   const translate = (id: string) => formatMessage({ id });\n\n   const renderCaptcha = () => {\n      return <Captcha error={error} success={success} />;\n   };\n\n   const handleResendCode = () => {\n      const { email } = state;\n      switch (captcha_type) {\n         case 'recaptcha':\n         case 'geetest':\n            emailVerificationFetch({\n               email,\n               captcha_response,\n            });\n            break;\n         default:\n            emailVerificationFetch({ email });\n            break;\n      }\n      resetCaptchaState();\n      setInitialSeconds(60);\n   };\n\n\n   const handleVerification = () => {\n      const { email } = state;\n      verificationFetch({ email, code });\n   }\n\n   const disableButton = (): boolean => {\n      if (state && state.email && !state.email.match(EMAIL_REGEX)) {\n         return true;\n      }\n      if (captcha_type === 'recaptcha' && !reCaptchaSuccess) {\n         return true;\n      }\n      if (captcha_type === 'geetest' && !geetestCaptchaSuccess) {\n         return true;\n      }\n      return false;\n   };\n\n   const title = translate('page.header.signUp.modal.header');\n   const text = translate('page.header.signUp.modal.body');\n   const button = translate('page.resendConfirmation');\n\n   return (\n      <LayoutAuth\n         linkTo=\"/login\"\n         linkToTxt=\"Login\"\n         descLinkTo=\"Already have an account?\"\n         title={title}\n         subTitle={text}\n      >\n         <InputOtp\n            length={6}\n            className=\"flex mb-8 -mx-2\"\n            isNumberInput\n            onChangeOTP={otp => setCode(otp)}\n         />\n         {renderCaptcha()}\n         <div className=\"flex justify-between items-center\">\n            {\n               minutes === 0 && seconds === 0\n                  ? (\n                     <Button\n                        text={button || 'Resend Code'}\n                        size=\"small\"\n                        variant=\"outline\"\n                        width=\"noFull\"\n                        onClick={handleResendCode}\n                        disabled={disableButton()}\n                        withLoading={emailVerificationLoading}\n                     />\n                  )\n                  : (<div> {minutes}:{seconds < 10 ? `0${seconds}` : seconds}</div>)\n            }\n            <Button\n               text={emailVerificationLoading ? 'Loading...' : 'Continue'}\n               size=\"small\"\n               width=\"noFull\"\n               onClick={handleVerification}\n               disabled={emailVerificationLoading}\n               withLoading={emailVerificationLoading}\n            />\n         </div>\n      </LayoutAuth>\n   );\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   emailVerificationLoading: selectSendEmailVerificationLoading(state),\n   emailVerified: selectEmailVerified(state),\n   i18n: selectCurrentLanguage(state),\n   isMobileDevice: selectMobileDeviceState(state),\n   configs: selectConfigs(state),\n   error: selectSendEmailVerificationError(state),\n   success: selectSendEmailVerificationSuccess(state),\n   captcha_response: selectCaptchaResponse(state),\n   reCaptchaSuccess: selectRecaptchaSuccess(state),\n   geetestCaptchaSuccess: selectGeetestCaptchaSuccess(state),\n   user: selectUserInfo(state),\n});\n\nconst mapDispatchToProps = {\n   emailVerificationFetch,\n   resetCaptchaState,\n   verificationFetch,\n};\n\nexport const EmailVerification = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps),\n)(EmailVerificationComponent) as FunctionComponent;\n","import React, {\n   FunctionComponent,\n   useEffect,\n   useState\n} from 'react';\nimport { History } from 'history'\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport {\n   MapDispatchToPropsFunction,\n   MapStateToProps,\n   connect\n} from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport {\n   Configs,\n   GeetestCaptchaResponse,\n   LanguageState,\n   RootState,\n   SignUpFetch,\n   resetCaptchaState,\n   selectCaptchaResponse,\n   selectConfigs,\n   selectGeetestCaptchaSuccess,\n   selectRecaptchaSuccess,\n   selectSignUpLoading,\n   selectSignUpRequireVerification,\n   signUp\n} from 'modules';\nimport { IntlProps } from 'index';\nimport {\n   EMAIL_REGEX,\n   ERROR_INVALID_EMAIL,\n   ERROR_INVALID_PASSWORD,\n   ERROR_PASSWORD_CONFIRMATION,\n   PASSWORD_REGEX,\n   USERNAME_REGEX,\n   setDocumentTitle\n} from 'helpers';\nimport { Captcha, FormRegisterKu, LayoutAuth } from 'components';\nimport { isUsernameEnabled } from 'api';\n\ntype RegisterState = {\n   username: string;\n   email: string;\n   password: string;\n   confirmPassword: string;\n   refId: string;\n   hasConfirmed: boolean;\n\n   emailError: string;\n   passwordError: string;\n   confirmationError: string;\n\n   usernameFocused: boolean;\n   emailFocused: boolean;\n   passwordFocused: boolean;\n   confirmPasswordFocused: boolean;\n   refIdFocused: boolean;\n}\n\ntype OwnProps = {\n   signUpError: boolean;\n   i18n: LanguageState['lang'];\n}\n\ntype ReduxProps = {\n   configs: Configs;\n   requireVerification?: boolean;\n   loading?: boolean;\n   captcha_response?: string | GeetestCaptchaResponse;\n   reCaptchaSuccess: boolean;\n   geetestCaptchaSuccess: boolean;\n}\n\ninterface RouterProps {\n   location: {\n      search: string;\n   };\n   history: History;\n}\n\ntype DispatchProps = {\n   register: typeof signUp;\n   resetCaptchaState: typeof resetCaptchaState;\n}\n\ntype Props = ReduxProps & RouterProps & DispatchProps & IntlProps & OwnProps;\n\nconst RegisterKuFC = ({\n   configs,\n   signUpError,\n   i18n,\n   requireVerification,\n   loading,\n   captcha_response,\n   reCaptchaSuccess,\n   geetestCaptchaSuccess,\n   location,\n   history: { push },\n   register,\n   resetCaptchaState,\n   intl\n}: Props) => {\n   const [state, setState] = useState<RegisterState>({\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      refId: '',\n      hasConfirmed: false,\n\n      emailError: '',\n      passwordError: '',\n      confirmationError: '',\n\n      usernameFocused: false,\n      emailFocused: false,\n      passwordFocused: false,\n      confirmPasswordFocused: false,\n      refIdFocused: false,\n   });\n\n   const {\n      username,\n      email,\n      password,\n      confirmPassword,\n      refId,\n      hasConfirmed,\n\n      emailError,\n      passwordError,\n      confirmationError,\n\n      usernameFocused,\n      emailFocused,\n      passwordFocused,\n      confirmPasswordFocused,\n      refIdFocused,\n   } = state;\n\n   useEffect(() => {\n      setDocumentTitle('Register');\n      const localReferralCode = localStorage.getItem('referralCode');\n      const refid = extractRefId(location.search);\n      const referralCode = refid || localReferralCode || '';\n      handleChangeRefid(referralCode);\n      if (refid && refid !== localReferralCode) {\n         localStorage.setItem('referralCode', referralCode);\n      }\n   }, []);\n\n   useEffect(() => {\n      if (requireVerification) {\n         push('/email-verification', { email });\n      }\n   }, [requireVerification]);\n\n   const extractRefId = (url: string) => new URLSearchParams(url).get('refid');\n   const handleChangeRefid = (refId: string) => setState({ ...state, refId });\n\n   const handleResetEmail = () => setState({ ...state, email: '' });\n\n   const handleChangeUsername = (username: string) => setState({\n      ...state,\n      username: username.replace(/[^A-Za-z0-9]+/g, '').toLowerCase()\n   });\n   const handleChangeEmail = (email: string) => setState({ ...state, email });\n   const handleChangePassword = (password: string) => setState({\n      ...state,\n      password,\n   });\n   const handleChangeConfirmPassword = (confirmPassword: string) => setState({\n      ...state,\n      confirmPassword,\n      confirmationError: password !== confirmPassword ? translate(ERROR_PASSWORD_CONFIRMATION) : ''\n   });\n   const handleChangeRefId = (refId: string) => setState({ ...state, refId });\n\n   const handleFocusUsername = () => setState({\n      ...state,\n      usernameFocused: !usernameFocused\n   });\n   const handleFocusEmail = () => setState({\n      ...state,\n      emailFocused: !emailFocused\n   });\n   const handleFocusPassword = () => setState({\n      ...state,\n      passwordFocused: !passwordFocused,\n   });\n   const handleFocusConfirmPassword = () => setState({\n      ...state,\n      confirmPasswordFocused: !confirmPasswordFocused,\n   });\n   const handleFocusRefId = () => setState({\n      ...state,\n      refIdFocused: !refIdFocused,\n   });\n\n   const handleLogin = () => push('/login');\n   const handleRegister = () => {\n      const payload: SignUpFetch['payload'] = {\n         email,\n         password,\n         data: JSON.stringify({\n            language: i18n,\n         }),\n         ...(isUsernameEnabled() && { username }),\n         ...(refId && { refid: refId }),\n         ...(configs.captcha_type !== 'none' && { captcha_response }),\n      }\n      register(payload);\n      resetCaptchaState();\n   }\n\n   const handleValidateForm = () => {\n      const isEmailValid = email.match(EMAIL_REGEX);\n      const isPasswordValid = password.match(PASSWORD_REGEX);\n      const isConfirmPasswordValid = password === confirmPassword;\n\n      if (!isEmailValid && !isPasswordValid) {\n         setState({\n            ...state,\n            confirmationError: '',\n            emailError: translate(ERROR_INVALID_EMAIL),\n            passwordError: translate(ERROR_INVALID_PASSWORD),\n            hasConfirmed: false,\n         });\n         return;\n      }\n\n      if (!isEmailValid) {\n         setState({\n            ...state,\n            confirmationError: '',\n            emailError: '',\n            passwordError: translate(ERROR_INVALID_PASSWORD),\n            hasConfirmed: false,\n         });\n         return;\n      }\n\n      if (!isConfirmPasswordValid) {\n         setState({\n            ...state,\n            confirmationError: translate(ERROR_PASSWORD_CONFIRMATION),\n            emailError: '',\n            passwordError: '',\n            hasConfirmed: false,\n         });\n         return;\n      }\n   }\n\n   const handleCheckboxClick = () => setState({\n      ...state,\n      hasConfirmed: !hasConfirmed,\n      confirmationError: '',\n      emailError: '',\n      passwordError: '',\n   });\n\n   const translate = (id: string) => intl.formatMessage({ id });\n\n   const renderCaptcha = () => {\n      const error = signUpError || confirmationError || emailError;\n      return <Captcha error={error} />;\n   }\n\n   return (\n      <LayoutAuth\n         descLinkTo=\"Already have an account?\"\n         linkTo=\"/login\"\n         linkToTxt=\"Login\"\n         title=\"Register\"\n         subTitle=\"Please fill in the data below with honest and accurate information.\"\n      >\n         <FormRegisterKu\n            captchaType={configs.captcha_type}\n            renderCaptcha={renderCaptcha()}\n            captcha_response={captcha_response}\n            isReCaptchaSuccess={reCaptchaSuccess}\n            isGeetestCaptchaSuccess={geetestCaptchaSuccess}\n            hasConfirmed={hasConfirmed}\n            isLoading={loading}\n            onRegister={handleRegister}\n            onLogin={handleLogin}\n            validateForm={handleValidateForm}\n            clickCheckBox={handleCheckboxClick}\n\n            username={username}\n            email={email}\n            password={password}\n            confirmPassword={confirmPassword}\n            refid={refId}\n\n            handleChangeUsername={handleChangeUsername}\n            handleChangeEmail={handleChangeEmail}\n            handleChangePassword={handleChangePassword}\n            handleChangeConfirmPassword={handleChangeConfirmPassword}\n            handleChangeRefId={handleChangeRefId}\n\n            focusUsername={usernameFocused}\n\n            handleFocusUsername={handleFocusUsername}\n            handleFocusEmail={handleFocusEmail}\n            handleFocusPassword={handleFocusPassword}\n            handleFocusConfirmPassword={handleFocusConfirmPassword}\n            handleFocusRefId={handleFocusRefId}\n\n            handleResetEmail={handleResetEmail}\n\n            usernameLabel={'username'}\n            emailLabel={translate('page.header.signUp.email')}\n            passwordLabel={translate('page.header.signUp.password')}\n            confirmPasswordLabel={translate('page.header.signUp.confirmPassword')}\n            refIdLabel={translate('page.header.signUp.referalCode')}\n\n            emailError={emailError}\n            passwordError={passwordError}\n            confirmPasswordError={confirmationError}\n\n            USERNAME_REGEXP={USERNAME_REGEX}\n            EMAIL_REGEXP={EMAIL_REGEX}\n            PASSWORD_REGEXP={PASSWORD_REGEX}\n\n            termsMessage={translate('page.header.signUp.terms')}\n\n            translate={translate}\n            isUsernameEnabled={isUsernameEnabled()}\n         />\n      </LayoutAuth>\n   )\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   configs: selectConfigs(state),\n   requireVerification: selectSignUpRequireVerification(state),\n   loading: selectSignUpLoading(state),\n   captcha_response: selectCaptchaResponse(state),\n   reCaptchaSuccess: selectRecaptchaSuccess(state),\n   geetestCaptchaSuccess: selectGeetestCaptchaSuccess(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   register: credentials => dispatch(signUp(credentials)),\n   resetCaptchaState: () => dispatch(resetCaptchaState())\n});\n\nexport const RegisterKu = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps)\n)(RegisterKuFC) as FunctionComponent;\n","import React, { FunctionComponent, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, LayoutProfile, ModalRequired, ProfileSidebar } from 'components';\nimport { injectIntl } from 'react-intl';\n// import { RouterProps } from 'react-router';\nimport { compose } from 'redux';\nimport { copyToClipboard, setDocumentTitle } from '../../helpers';\nimport { alertPush, changePasswordError, changePasswordFetch, Configs, entropyPasswordFetch, RootState, selectChangePasswordSuccess, selectConfigs, selectCurrentPasswordEntropy, selectUserInfo, toggle2faFetch, User } from 'modules';\nimport { IntlProps } from 'index';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { useModal } from 'hooks';\n\ninterface ReduxProps {\n   user: User;\n   passwordChangeSuccess?: boolean;\n   configs: Configs;\n   currentPasswordEntropy: number;\n}\n\ninterface RouterProps {\n   history: History;\n}\n\ninterface OnChangeEvent {\n   target: {\n      value: string;\n   };\n}\n\ninterface DispatchProps {\n   changePassword: typeof changePasswordFetch;\n   clearPasswordChangeError: () => void;\n   toggle2fa: typeof toggle2faFetch;\n   fetchCurrentPasswordEntropy: typeof entropyPasswordFetch;\n   fetchSuccess: typeof alertPush;\n}\n\ninterface ProfileProps {\n   showModal: boolean;\n}\n\ninterface State {\n   showChangeModal: boolean;\n   showModal: boolean;\n   code2FA: string;\n   code2FAFocus: boolean;\n}\n\ntype Props = ReduxProps & DispatchProps & RouterProps & ProfileProps & IntlProps & OnChangeEvent;\n\nconst ProfileFC = ({\n   user,\n   fetchSuccess\n}: Props, { code2FA }: State) => {\n   const { profiles, } = user;\n   const { isShow, toggle } = useModal();\n   useEffect(() => {\n      setDocumentTitle('Profile');\n   }, []);\n   const level = user.level;\n   const referralLink = `${window.document.location.origin}/register?refid=${user.uid}`;\n\n   const handleCopy = (url: string, type: string) => {\n      copyToClipboard(url);\n      fetchSuccess({ message: [`${type} Copied`], type: 'success' });\n   };\n\n   const renderIconCheck = () => (\n      <svg className=\"w-6 h-6 fill-primary1 transition-colors duration-300\">\n         <use xlinkHref=\"#icon-check\" />\n      </svg>\n   )\n\n   return (\n      <>\n         <LayoutProfile\n            title=\"Withdraw\"\n            withBreadcrumbs={{\n               display: 'Home',\n               href: '/',\n               active: 'Profile',\n            }}\n         >\n            <ProfileSidebar />\n            <div className=\"grow p-4 md:px-8 md:py-10 lg:p-10 shadow-card2 rounded-2xl bg-neutral8 dark:bg-shade1 space-y-12\" style={{ animationDuration: '100ms' }}>\n               <div className=\"flex justify-between mb-5\">\n                  <div className=\"space-y-3\">\n                     <div className=\"text-2xl leading-custom2 font-semibold tracking-custom1\">\n                        {user.username ?? profiles[0]?.first_name ?? ''}\n                     </div>\n                     <div className=\"font-medium text-neutral4\">\n                        {user.email}\n                     </div>\n                     <div className=\"flex items-center space-x-3\">\n                        <div className=\"font-medium text-neutral4 select-none\">\n                           {referralLink}\n                        </div>\n                        <button\n                           className=\"cursor-copy group\"\n                           onClick={() => handleCopy(referralLink, 'Refferal')}\n                           title=\"Copy referral\"\n                        >\n                           <svg className=\"w-6 h-6 group-hover:scale-110 fill-neutral4 group-hover:fill-neutral3 dark:group-hover:fill-neutral5 transition-transform duration-200\">\n                              <use xlinkHref=\"#icon-copy\" />\n                           </svg>\n                        </button>\n                     </div>\n                  </div>\n                  <Button\n                     text={`Level ${user.level} verified`}\n                     size=\"small\"\n                     variant=\"outline\"\n                     width=\"noFull\"\n                     color={user.level === 1 ? 'orange' : user.level === 2 ? 'yellow' : 'primary'}\n                     className=\"pointer-events-none select-none\"\n                  />\n               </div>\n               <div className=\"space-y-10\">\n                  <div className=\"text-2xl font-medium leading-custom2 tracking-custom1\">\n                     Features\n                  </div>\n                  <div className=\"space-y-6\">\n                     <div className={`flex justify-between pb-6 border-b border-neutral6 dark:border-neutral3 ${level >= 1 ? 'text-primary1' : 'text-primary4'} text-xs leading-none font-bold uppercase`}>\n                        <div>level 1</div>\n                        <div>{level >= 1 ? 'Verified' : 'Unverified'}</div>\n                     </div>\n                     <div className=\"flex items-center justify-between\">\n                        <div>Deposit assets</div>\n                        {renderIconCheck()}\n                     </div>\n                     <div className=\"flex items-center justify-between\">\n                        <div>Withdraw assets</div>\n                        {renderIconCheck()}\n                     </div>\n                     <div className=\"flex items-center justify-between\">\n                        <div>Transactions</div>\n                        {renderIconCheck()}\n                     </div>\n                     <div className=\"flex items-center justify-between\">\n                        <div>USDT withdrawals</div>\n                        <div className=\"text-right text-neutral4\">5,000 USDT /Day</div>\n                     </div>\n                  </div>\n                  <div className=\"space-y-6\">\n                     <div className={`flex justify-between pb-6 border-b border-neutral6 dark:border-neutral3 ${level >= 2 ? 'text-primary1' : 'text-primary4'} text-xs leading-none font-bold uppercase`}>\n                        <div>level 2</div>\n                        <div>{level >= 2 ? 'Verified' : 'Unverified'}</div>\n                     </div>\n                     <div className=\"flex items-center justify-between\">\n                        <div>Internal transfer</div>\n                        {renderIconCheck()}\n                     </div>\n                     <div className=\"flex items-center justify-between\">\n                        <div>USDT withdrawals</div>\n                        <div className=\"text-right text-neutral4\">10,000 USDT /Day</div>\n                     </div>\n                  </div>\n                  <div className=\"space-y-6\">\n                     <div className={`flex justify-between pb-6 border-b border-neutral6 dark:border-neutral3 ${level >= 3 ? 'text-primary1' : 'text-primary4'} text-xs leading-none font-bold uppercase`}>\n                        <div>level 3</div>\n                        <div>{level >= 3 ? 'Verified' : 'Unverified'}</div>\n                     </div>\n                     <div className=\"flex items-center justify-between\">\n                        <div>IDR Transaction</div>\n                        {renderIconCheck()}\n                     </div>\n                     <div className=\"flex items-center justify-between\">\n                        <div>USDT withdrawals</div>\n                        <div className=\"text-right text-neutral4\">50,000 USDT /Day</div>\n                     </div>\n                  </div>\n               </div>\n               {level < 3 && (\n                  <div className=\"mt-10 text-right\">\n                     <Button\n                        text=\"Verify your identity\"\n                        width=\"noFull\"\n                        onClick={toggle}\n                     />\n                  </div>\n               )}\n            </div>\n         </LayoutProfile>\n         <ModalRequired\n            show={isShow}\n            close={toggle}\n         />\n      </>\n   )\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   user: selectUserInfo(state),\n   passwordChangeSuccess: selectChangePasswordSuccess(state),\n   currentPasswordEntropy: selectCurrentPasswordEntropy(state),\n   configs: selectConfigs(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   changePassword: ({ old_password, new_password, confirm_password }) =>\n      dispatch(changePasswordFetch({ old_password, new_password, confirm_password })),\n   toggle2fa: ({ code, enable }) => dispatch(toggle2faFetch({ code, enable })),\n   fetchCurrentPasswordEntropy: payload => dispatch(entropyPasswordFetch(payload)),\n   fetchSuccess: payload => dispatch(alertPush(payload)),\n   clearPasswordChangeError: () => dispatch(changePasswordError({ code: 0, message: [] }))\n});\n\nexport const Profile = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps)\n)(ProfileFC) as FunctionComponent;\n","import React, {\n   FunctionComponent,\n   useEffect,\n   useState\n} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { IntlProps } from 'index';\nimport {\n   InputGroup,\n   LayoutProfile,\n   ProfileSidebar,\n   Skeleton\n} from 'components';\nimport {\n   copyToClipboard,\n   setDocumentTitle\n} from 'helpers';\nimport {\n   RootState,\n   selectUserInfo,\n   User\n} from 'modules';\nimport { toast } from 'react-toastify';\nimport { Referral } from './types';\n\nimport axios from 'axios';\n\ninterface Me extends User {\n   referral?: any;\n}\ninterface ReduxProps {\n   user: Me;\n}\n\ntype Props = ReduxProps & IntlProps;\n\nconst ReferralsFC = ({ intl, user }: Props) => {\n   const { uid } = user;\n   const [referrals, setReferrals] = useState<Referral>();\n   const [isLoading, setIsLoading] = useState(false);\n   useEffect(() => {\n      setDocumentTitle('Referrals');\n      (async () => {\n         setIsLoading(true);\n         const res: Referral = await (await axios.get('https://api.npoint.io/ff687718826ee5ecd3d9')).data;\n         setIsLoading(false);\n         setReferrals(res);\n      })();\n   }, []);\n\n   const renderIconCopied = (title: string, value: string) => (\n      <button\n         className=\"cursor-copy group\"\n         onClick={() => handleCopy(value, title)}\n         title=\"Copy referral\"\n      >\n         <svg className=\"w-6 h-6 group-hover:scale-110 fill-neutral4 group-hover:fill-neutral3 dark:group-hover:fill-neutral5 transition-transform duration-200\">\n            <use xlinkHref=\"#icon-copy\" />\n         </svg>\n      </button>\n   );\n\n   const handleCopy = (url: string, type: string) => {\n      copyToClipboard(url);\n      toast.success(`${type} Copied`)\n   }\n\n   const referralLink = `${window.document.location.origin}/register?refid=${uid}`;\n   const referralCode = (): string => uid;\n\n   return (\n      <LayoutProfile\n         title=\"API keys\"\n         withBreadcrumbs={{\n            display: 'Home',\n            href: '/',\n            active: 'Referrals',\n         }}\n      >\n         <ProfileSidebar />\n         <div className=\"grow p-4 md:px-8 md:py-10 lg:p-10 shadow-card2 rounded-2xl bg-neutral8 dark:bg-shade1 space-y-12\">\n            <div className=\"space-y-3\">\n               <div className=\"flex justify-between\">\n                  <div>\n                     <div className=\"font-medium text-neutral3 dark:text-neutral6\">\n                        Total rewards\n                     </div>\n                     <div className=\"font-dm text-4.5xl leading-1.2 tracking-custom1\">\n                        {referrals?.reff || '1,056.00'}\n                        <span className=\"text-primary1\"> USDT</span>\n                     </div>\n                  </div>\n                  <div className=\"text-right\">\n                     <div className=\"font-medium text-neutral3 dark:text-neutral6 whitespace-nowrap\">\n                        Your referral\n                     </div>\n                     <div className=\"font-dm text-4.5xl leading-1.2 tracking-custom1\">\n                        {referrals?.reff_active || 0}\n                     </div>\n                  </div>\n               </div>\n               <div className=\"text-xs leading-custom4 text-neutral4\">\n                  Invite your friends to register digiassetindo exchange through the referral link or QR codes and get reward once they complete a trade\n               </div>\n            </div>\n            <div className=\"space-y-12\">\n               <div className=\"p-8 space-y-8 rounded-2xl bg-shade4 dark:bg-neutral2\">\n                  <div className=\"text-2xl font-semibold leading-custom2 tracking-custom1\">\n                     Invite friends to earn 20%\n                  </div>\n                  <div className=\"flex space-x-4\">\n                     <InputGroup\n                        label=\"referral link\"\n                        parentClassName=\"w-full\"\n                        lableClassName=\"!text-neutral2\"\n                        className=\"!bg-neutral8 dark:!bg-neutral1 border-0 focus:border-2 focus:border-neutral3 truncate\"\n                        value={referralLink}\n                        icon={renderIconCopied('Referral link', referralLink)}\n                     />\n                     <InputGroup\n                        label=\"referral code\"\n                        parentClassName=\"w-full\"\n                        lableClassName=\"!text-neutral2\"\n                        className=\"!bg-neutral8 dark:!bg-neutral1 border-0 focus:border-2 focus:border-neutral3 truncate\"\n                        value={referralCode()}\n                        readOnly\n                        icon={renderIconCopied('Referral code', referralCode())}\n                     />\n                  </div>\n               </div>\n               {referrals?.reff_list && (\n                  <div>\n                     <div className=\"text-2xl leading-custom2 font-semibold tracking-custom1\">\n                        My referrals\n                     </div>\n                     <div className=\"overflow-x-auto\">\n                        <table className=\"w-full table-auto\">\n                           <thead className=\"divide-y divide-neutral7 dark:divide-neutral2\">\n                              <tr>\n                                 <td className=\"py-4 pr-2 text-xs leading-custom4 font-semibold text-left\">\n                                    No.\n                                 </td>\n                                 <td className=\"py-4 pr-2 text-xs leading-custom4 font-semibold text-left\">\n                                    UID\n                                 </td>\n                                 <td className=\"py-4 px-2 text-xs leading-custom4 font-semibold text-left\">\n                                    Email\n                                 </td>\n                                 <td className=\"py-4 px-2 text-xs leading-custom4 font-semibold text-left\">\n                                    Kyc Level\n                                 </td>\n                                 <td className=\"py-4 pl-2 text-xs leading-custom4 font-semibold text-right\">\n                                    Tier\n                                 </td>\n                              </tr>\n                           </thead>\n                           <tbody>\n                              {isLoading ? (\n                                 <>\n                                    <tr>\n                                       <td colSpan={5} className=\"px-4 py-3 last:pb-0\">\n                                          <Skeleton height={20} isWithFull rounded=\"md\" />\n                                       </td>\n                                    </tr>\n                                    <tr>\n                                       <td colSpan={5} className=\"px-4 py-3 last:pb-0\">\n                                          <Skeleton height={20} isWithFull rounded=\"md\" />\n                                       </td>\n                                    </tr>\n                                    <tr>\n                                       <td colSpan={5} className=\"px-4 py-3 last:pb-0\">\n                                          <Skeleton height={20} isWithFull rounded=\"md\" />\n                                       </td>\n                                    </tr>\n                                 </>\n                              ) : referrals.reff_list?.length > 0 ? referrals.reff_list.map((e, i) => (\n                                 <tr key={i}>\n                                    <td className=\"py-4 pr-2 font-medium\">\n                                       {i + 1}.\n                                    </td>\n                                    <td className=\"py-4 px-2 font-medium\">\n                                       {e.uid}\n                                    </td>\n                                    <td className=\"py-4 px-2 font-medium\">\n                                       {e.email}\n                                    </td>\n                                    <td className=\"py-4 px-2 font-medium\">\n                                       {e.kyc_level}\n                                    </td>\n                                    <td className=\"py-4 pl-2 font-medium text-right\">\n                                       {e.tier}\n                                    </td>\n                                 </tr>\n                              )) : (\n                                 <div className=\"\">\n                                    Kosong\n                                 </div>\n                              )}\n                           </tbody>\n                        </table>\n                     </div>\n                  </div>\n               )}\n            </div>\n         </div>\n      </LayoutProfile>\n   )\n};\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   user: selectUserInfo(state),\n});\n\nexport const Referrals = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, null)\n)(ReferralsFC) as FunctionComponent;\n","import React, {\n   useEffect,\n   useState,\n   FunctionComponent,\n} from 'react';\nimport {\n   useHistory,\n   withRouter\n} from 'react-router-dom';\nimport {\n   connect,\n   MapDispatchToPropsFunction\n} from 'react-redux';\nimport { compose } from 'redux';\nimport { injectIntl } from 'react-intl';\nimport {\n   Button,\n   InputGroup,\n   InputOtp,\n   LayoutProfile,\n   Pagination,\n   Portal,\n   ProfileSidebar,\n   Skeleton,\n   Switch\n} from 'components';\nimport {\n   copyToClipboard,\n   localeDate,\n   setDocumentTitle\n} from 'helpers';\nimport {\n   alertPush,\n   ApiKeyCreateFetch,\n   apiKeyCreateFetch,\n   ApiKeyDataInterface,\n   ApiKeyDeleteFetch,\n   apiKeyDeleteFetch,\n   ApiKeys2FAModal,\n   apiKeys2FAModal,\n   apiKeysFetch,\n   ApiKeyStateModal,\n   ApiKeyUpdateFetch,\n   apiKeyUpdateFetch,\n   RootState,\n   selectUserInfo,\n   User\n} from 'modules';\nimport {\n   selectApiKeys,\n   selectApiKeysDataLoaded,\n   selectApiKeysFirstElemIndex,\n   selectApiKeysLastElemIndex,\n   selectApiKeysLoading,\n   selectApiKeysModal,\n   selectApiKeysNextPageExists,\n   selectApiKeysPageIndex\n} from 'modules';\nimport { IntlProps } from 'index';\nimport { IcEmty, imgLock, imgLock2 } from 'assets';\n\ninterface ReduxProps {\n   apiKeys: ApiKeyDataInterface[];\n   dataLoaded: boolean;\n   isLoading: boolean;\n   modal: ApiKeyStateModal;\n   user: User;\n   pageIndex: number;\n   firstElemIndex: number;\n   lastElemIndex: number;\n   nextPageExists: boolean;\n}\n\ninterface DispatchProps {\n   toggleApiKeys2FAModal: typeof apiKeys2FAModal;\n   apiKeysFetch: typeof apiKeysFetch;\n   createApiKey: typeof apiKeyCreateFetch;\n   updateApiKey: typeof apiKeyUpdateFetch;\n   deleteApiKey: typeof apiKeyDeleteFetch;\n   fetchSuccess: typeof alertPush;\n}\n\ntype Props = ReduxProps & DispatchProps & IntlProps;\n\nconst ApiKeysFC = ({\n   apiKeysFetch,\n   apiKeys,\n   dataLoaded,\n   isLoading,\n   firstElemIndex,\n   lastElemIndex,\n   nextPageExists,\n   pageIndex,\n   user,\n   intl,\n   toggleApiKeys2FAModal,\n   modal,\n   createApiKey,\n   deleteApiKey,\n   fetchSuccess,\n   updateApiKey\n}: Props) => {\n   const history = useHistory();\n   const [otpCode, setOtpCode] = useState<string>('');\n   useEffect(() => {\n      setDocumentTitle('My API Keys');\n      apiKeysFetch({ pageIndex: 0, limit: 2 });\n   }, []);\n\n   useEffect(() => {\n      if (otpCode.length === 6) {\n         renderOnClick()\n      }\n   }, [otpCode]);\n\n   const translate = (key: string) => intl.formatMessage({ id: key });\n\n   const onClickPrevPage = () => apiKeysFetch({ pageIndex: Number(pageIndex) - 1, limit: 4 });\n   const onClickNextPage = () => apiKeysFetch({ pageIndex: Number(pageIndex) + 1, limit: 4 });\n\n   const handleUpdateAPIKey = apiKey => {\n      const payload: ApiKeys2FAModal['payload'] = { active: true, action: 'updateKey', apiKey };\n      toggleApiKeys2FAModal(payload);\n   };\n\n   const handleDestroyAPIKey = apiKey => {\n      const payload: ApiKeys2FAModal['payload'] = { active: true, action: 'deleteKey', apiKey };\n      toggleApiKeys2FAModal(payload);\n   };\n\n   const handleCloseTFAModal = () => {\n      const payload: ApiKeys2FAModal['payload'] = { active: false };\n      toggleApiKeys2FAModal(payload);\n      setOtpCode('');\n   };\n\n   // const renderModal = () => {\n\n   // }\n\n   const { otp } = user;\n\n   const handleCopy = (url: string, type: string) => {\n      copyToClipboard(url);\n      fetchSuccess({ message: [`success.api_keys.copied.${type}`], type: 'success' });\n   }\n\n   const handleAddCreateKey = () => {\n      const payload: ApiKeys2FAModal['payload'] = { active: true, action: 'createKey' };\n      toggleApiKeys2FAModal(payload);\n      setOtpCode('');\n   };\n\n   const handleCreateKey = () => {\n      const payload: ApiKeyCreateFetch['payload'] = { totp_code: otpCode };\n      createApiKey(payload);\n      setOtpCode('');\n   };\n\n   const handleCreateSuccess = () => {\n      const payload: ApiKeys2FAModal['payload'] = { active: false };\n      toggleApiKeys2FAModal(payload);\n      setOtpCode('');\n   };\n\n   const handleUpdateKey = () => {\n      const apiKey: ApiKeyDataInterface = { ...modal.apiKey } as any;\n      apiKey.state = apiKey.state === 'active' ? 'disabled' : 'active';\n      const payload: ApiKeyUpdateFetch['payload'] = { totp_code: otpCode, apiKey: apiKey };\n      updateApiKey(payload);\n      setOtpCode('');\n   };\n\n   const handleDeleteKey = () => {\n      const payload: ApiKeyDeleteFetch['payload'] = { kid: (modal.apiKey && modal.apiKey.kid) || '', totp_code: otpCode };\n      deleteApiKey(payload);\n      setOtpCode('');\n   };\n\n   const renderOnClick = () => {\n      switch (modal.action) {\n         case 'createKey':\n            handleCreateKey();\n            break;\n         case 'createSuccess':\n            handleCreateSuccess();\n            break;\n         case 'updateKey':\n            handleUpdateKey();\n            break;\n         case 'deleteKey':\n            handleDeleteKey();\n            break;\n         default:\n            break;\n      }\n   };\n\n   const handleEnterPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n         e.preventDefault();\n         if (otpCode.length === 6) {\n            renderOnClick();\n         }\n      }\n   };\n\n   const renderModalBody = () => {\n      const secret = (modal && modal.apiKey) ? modal.apiKey.secret : '';\n      let body;\n      let button;\n      const isDisabled = !otpCode.match(/.{6}/g);\n      switch (modal.action) {\n         case 'createKey':\n            button = <Button\n               text={translate('page.body.profile.apiKeys.modal.btn.create')}\n               disabled={isDisabled}\n               onClick={handleCreateKey}\n               withLoading={isLoading}\n            />;\n            break;\n         case 'createSuccess':\n            button = <Button\n               text={translate('page.body.profile.apiKeys.modal.btn.create')}\n               onClick={handleCreateSuccess}\n               withLoading={isLoading}\n            />;\n            body = (\n               <>\n                  <InputGroup\n                     label={translate('page.body.profile.apiKeys.modal.access_key')}\n                     parentClassName=\"w-full\"\n                     value={(modal.apiKey && modal.apiKey.kid) || ''}\n                     icon={\n                        <div\n                           onClick={() => handleCopy((modal.apiKey && modal.apiKey.kid) || '', 'access')}\n                           className=\"bg-primary1 rounded p-1 text-neutral8 text-x font-medium hover:p-1.5 transition-all duration-300 cursor-copy\"\n                        >\n                           {translate('page.body.profile.content.copyLink')}\n                        </div>\n                     }\n                  />\n                  <div className=\"flex space-x-3\">\n                     <span className=\"text-primary4 text-5xl font-bold\">&#9888;</span>\n                     <div>\n                        <div className=\"font-medium\">\n                           {translate('page.body.profile.apiKeys.modal.secret_key')}\n                        </div>\n                        <div className=\"text-neutral4 text-xs leading-custom4 tracking-wider\">\n                           {translate('page.body.profile.apiKeys.modal.secret_key_info')} {translate('page.body.profile.apiKeys.modal.secret_key_store')}\n                        </div>\n                     </div>\n                  </div>\n                  <InputGroup\n                     label={translate('page.body.profile.apiKeys.modal.secret_key')}\n                     parentClassName=\"w-full\"\n                     value={secret || ''}\n                     icon={\n                        <div onClick={() => handleCopy(secret || '', 'secret')} className=\"bg-primary1 rounded p-1 text-neutral8 text-x font-medium hover:p-1.5 transition-all duration-300\">\n                           {translate('page.body.profile.content.copyLink')}\n                        </div>\n                     }\n                  />\n                  <div>\n                     <div className=\"font-medium\">\n                        {translate('page.body.profile.apiKeys.modal.note')} :\n                     </div>\n                     <div className=\"text-neutral4 text-xs leading-custom4 tracking-wider\">\n                        {translate('page.body.profile.apiKeys.modal.note_content')}\n                     </div>\n                  </div>\n                  {button}\n               </>\n            );\n            break;\n         case 'updateKey':\n            button = <Button\n               text={modal.apiKey && modal.apiKey.state === 'active' ?\n                  translate('page.body.profile.apiKeys.modal.btn.disabled') :\n                  translate('page.body.profile.apiKeys.modal.btn.activate')}\n               disabled={isDisabled}\n               onClick={handleUpdateKey}\n               withLoading={isLoading}\n            />\n            break;\n         case 'deleteKey':\n            button = <Button\n               text={translate('page.body.profile.apiKeys.modal.btn.delete')}\n               disabled={isDisabled}\n               onClick={handleDeleteKey}\n               withLoading={isLoading}\n            />\n            break;\n         default:\n            break;\n      }\n      body = !body ? (\n         <div className={modal.action === 'createSuccess' ? '' : 'pt-10 space-y-8'}>\n            <div className=\"space-y-3\">\n               <div className=\"font-dm text-2xl leading-9 text-center tracking-custom\">\n                  {translate('page.auth.2fa.title')}\n               </div>\n               <div className=\"max-w-82 mx-auto text-center text-xs text-neutral4 leading-5\">\n                  Enter 6 digit google authentication code to continue\n               </div>\n            </div>\n            <InputOtp\n               length={6}\n               className=\"flex -mx-2\"\n               isNumberInput\n               onChangeOTP={setOtpCode}\n               onKeyPress={handleEnterPress as any}\n            />\n            {button}\n         </div>\n      ) : body;\n\n      return (\n         <>\n            {body}\n         </>\n      );\n   };\n\n   return (\n      <>\n         <LayoutProfile\n            title=\"API keys\"\n            withBreadcrumbs={{\n               display: 'Home',\n               href: '/',\n               active: 'API keys',\n            }}\n         >\n            <ProfileSidebar />\n            <div className=\"grow p-4 md:px-8 lg:px-10 lg:py-10 shadow-card2 rounded-2xl bg-neutral8 dark:bg-shade1\">\n               {otp ? (\n                  <div>\n                     <div className=\"flex items-center justify-between\">\n                        <div className=\"text-2xl leading-custom2 font-semibold tracking-custom1\">\n                           My API keys\n                        </div>\n                        <Button\n                           text=\"Generate new API key\"\n                           size=\"normal\"\n                           width=\"noFull\"\n                           variant=\"outline\"\n                           icLeft={\n                              <svg className=\"mr-3 w-4 h-4 fill-neutral4 group-hover:fill-neutral8 transition-all duration-300\">\n                                 <use xlinkHref=\"#icon-plus\" />\n                              </svg>\n                           }\n                           onClick={handleAddCreateKey}\n                        />\n                     </div>\n                     <div className=\"mt-6 mb-8 text-neutral4 text-xs leading-custom4\">\n                        Digiassets APIs are a way for traders to access their exchange account programmatically so they can trade without logging into the exchange. With APIs, traders can use 3rd party services to execute trades, manage their portfolio, collect data on their account, and implement complex strategies.\n                     </div>\n                     <div className=\"space-y-8\">\n                        <div className=\"overflow-x-auto\">\n                           <table className=\"w-full table-auto\">\n                              <thead>\n                                 <tr className=\"border-b border-neutral7 dark:border-neutral2\">\n                                    <th className=\"p-4 pl-0 text-xs font-semibold leading-custom4 text-left dark:text-neutral5\">\n                                       {translate('page.body.profile.apiKeys.table.header.kid')}\n                                    </th>\n                                    <th className=\"p-4 text-xs font-semibold leading-custom4 text-left dark:text-neutral5\">\n                                       {translate('page.body.profile.apiKeys.table.header.algorithm')}\n                                    </th>\n                                    <th className=\"p-4 text-xs font-semibold leading-custom4 text-left dark:text-neutral5\">\n                                       {translate('page.body.profile.apiKeys.table.header.state')}\n                                    </th>\n                                    <th className=\"p-4 text-xs font-semibold leading-custom4 text-left dark:text-neutral5\">\n                                       {translate('page.body.profile.apiKeys.table.header.created')}\n                                    </th>\n                                    <th className=\"p-4 text-xs font-semibold leading-custom4 text-left dark:text-neutral5\">\n                                       {translate('page.body.profile.apiKeys.table.header.updated')}\n                                    </th>\n                                    <th className=\"p-4 text-xs font-semibold leading-custom4 dark:text-neutral5\">\n                                       {''}\n                                    </th>\n                                    <th className=\"p-4 pr-0 text-xs font-semibold leading-custom4 dark:text-neutral5\">\n                                       {''}\n                                    </th>\n                                 </tr>\n                              </thead>\n                              <tbody>\n                                 {!!!dataLoaded ? (\n                                    <>\n                                       <tr>\n                                          <td colSpan={7} className=\"px-4 py-3 last:pb-0\">\n                                             <Skeleton height={20} isWithFull rounded=\"md\" />\n                                          </td>\n                                       </tr>\n                                       <tr>\n                                          <td colSpan={7} className=\"px-4 py-3 last:pb-0\">\n                                             <Skeleton height={20} isWithFull rounded=\"md\" />\n                                          </td>\n                                       </tr>\n                                       <tr>\n                                          <td colSpan={7} className=\"px-4 py-3 last:pb-0\">\n                                             <Skeleton height={20} isWithFull rounded=\"md\" />\n                                          </td>\n                                       </tr>\n                                    </>\n                                 ) : apiKeys.length ? apiKeys.map(apiKey => {\n                                    const {\n                                       kid,\n                                       algorithm,\n                                       state,\n                                       created_at,\n                                       updated_at\n                                    } = apiKey;\n                                    return (\n                                       <tr key={kid} className=\"[&:not(:last-child)]:border-b [&:not(:last-child)]:border-neutral6 dark:[&:not(:last-child)]:border-neutral3\">\n                                          <td className=\"p-4 pl-0\">\n                                             <div className=\"font-medium\">{kid}</div>\n                                          </td>\n                                          <td className=\"p-4\">\n                                             <div className=\"font-medium\">{algorithm}</div>\n                                          </td>\n                                          <td className=\"p-4\">\n                                             <div className={`font-medium ${state === 'active' ? 'text-primary5' : state === 'disabled' ? 'text-primary4' : 'text-primary1'}`}>{state}</div>\n                                          </td>\n                                          <td className=\"p-4\">\n                                             <div className=\"font-medium\">{localeDate(created_at, 'shortDate').split(' ').shift()}</div>\n                                          </td>\n                                          <td className=\"p-4\">\n                                             <div className=\"font-medium\">{localeDate(updated_at, 'shortDate').split(' ').shift()}</div>\n                                          </td>\n                                          <td className=\"p-4 align-middle\">\n                                             <Switch\n                                                onClick={() => handleUpdateAPIKey(apiKey)}\n                                                checked={state === 'active'}\n                                             />\n                                          </td>\n                                          <td className=\"p-4 pr-0\">\n                                             <svg onClick={() => handleDestroyAPIKey(apiKey)} className={`cursor-pointer w-6 h-6 fill-neutral4 hover:fill-neutral2 dark:hover:fill-neutral8 transition-all duration-300`}>\n                                                <use xlinkHref=\"#icon-close-circle\" />\n                                             </svg>\n                                          </td>\n                                       </tr>\n                                    )\n                                 }) : (\n                                    <tr>\n                                       <td colSpan={7}>\n                                          <div className=\"min-h-96 flex flex-col items-center justify-center space-y-3\">\n                                             <IcEmty />\n                                             <div className=\"text-xs font-semibold text-neutral4\">\n                                                {translate('noResultFound')}\n                                             </div>\n                                          </div>\n                                       </td>\n                                    </tr>\n                                 )}\n                              </tbody>\n                           </table>\n                        </div>\n                        <Pagination\n                           firstElemIndex={firstElemIndex}\n                           lastElemIndex={lastElemIndex}\n                           page={pageIndex}\n                           nextPageExists={nextPageExists}\n                           onClickPrevPage={onClickPrevPage}\n                           onClickNextPage={onClickNextPage}\n                        />\n                     </div>\n                  </div>\n               ) : (\n                  <div className=\"space-y-8\">\n                     <img\n                        srcSet={`${imgLock2} 2x`}\n                        src={imgLock}\n                        alt=\"Images lock api keys\"\n                        title=\"Images lock api keys\"\n                        className=\"mx-auto\"\n                     />\n                     <div className=\"font-medium text-neutral4 leading-custom4 text-center\">\n                        Before you can access the api keys feature, you must enable 2FA\n                     </div>\n                     <div className=\"text-center\">\n                        <Button\n                           text=\"Enable 2FA\"\n                           onClick={() => history.push('/2fa')}\n                           width=\"noFull\"\n                        />\n                     </div>\n                  </div>\n               )}\n            </div>\n         </LayoutProfile>\n         <Portal\n            show={modal.active}\n            close={handleCloseTFAModal}\n            title={modal.action === 'createSuccess' ? translate('page.body.profile.apiKeys.modal.created_header') : ''}\n         >\n            {renderModalBody()}\n         </Portal>\n      </>\n   )\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   apiKeys: selectApiKeys(state),\n   dataLoaded: selectApiKeysDataLoaded(state),\n   isLoading: selectApiKeysLoading(state),\n   modal: selectApiKeysModal(state),\n   user: selectUserInfo(state),\n   pageIndex: selectApiKeysPageIndex(state),\n   firstElemIndex: selectApiKeysFirstElemIndex(state, 4),\n   lastElemIndex: selectApiKeysLastElemIndex(state, 4),\n   nextPageExists: selectApiKeysNextPageExists(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> =\n   dispatch => ({\n      toggleApiKeys2FAModal: (payload: ApiKeys2FAModal['payload']) => dispatch(apiKeys2FAModal(payload)),\n      apiKeysFetch: payload => dispatch(apiKeysFetch(payload)),\n      createApiKey: payload => dispatch(apiKeyCreateFetch(payload)),\n      updateApiKey: payload => dispatch(apiKeyUpdateFetch(payload)),\n      deleteApiKey: payload => dispatch(apiKeyDeleteFetch(payload)),\n      fetchSuccess: payload => dispatch(alertPush(payload)),\n   });\n\nexport const ApiKeys = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps)\n)(ApiKeysFC) as FunctionComponent;\n","import React, {\n   FunctionComponent,\n   useEffect\n} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport {\n   connect,\n   MapDispatchToPropsFunction\n} from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { IntlProps } from 'index';\nimport {\n   LayoutProfile,\n   Pagination,\n   ProfileSidebar,\n   Skeleton\n} from 'components';\nimport {\n   localeDate,\n   setDocumentTitle,\n   getUserAgent\n} from 'helpers';\nimport {\n   getUserActivity,\n   RootState,\n   selectTotalNumber,\n   selectUserActivity,\n   selectUserActivityCurrentPage,\n   selectUserActivityFirstElemIndex,\n   selectUserActivityLastElemIndex,\n   selectUserActivityLoading,\n   selectUserActivityNextPageExists,\n   selectUserActivityPageCount,\n   UserActivityDataInterface\n} from 'modules';\nimport { IcEmty } from 'assets';\n\n// import { useTable } from 'react-table';\n\n// const columns: ColumnDef<any, any>[] = [\n//    {\n//       accessorKey: 'created_at',\n//       header: 'Date / time',\n//    }, {\n//       accessorKey: 'action',\n//       header: 'Action',\n//    }\n// ]\n\ninterface ReduxProps {\n   loading: boolean;\n   total: number;\n   page: number;\n   pageCount: number;\n   firstElemIndex: number;\n   lastElemIndex: number;\n   nextPageExists: boolean;\n   userActivity: UserActivityDataInterface[];\n}\n\ninterface DispatchProps {\n   getUserActivity: typeof getUserActivity;\n}\n\nconst paginationLimit = 10;\n\ntype Props = ReduxProps & DispatchProps & IntlProps;\n\nconst SessionsHistoryFC = ({\n   loading,\n   userActivity,\n   getUserActivity,\n   intl,\n   firstElemIndex,\n   lastElemIndex,\n   total,\n   page,\n   nextPageExists,\n   pageCount\n}: Props) => {\n   useEffect(() => {\n      setDocumentTitle('Sessions History');\n      getUserActivity({ page: 0, limit: paginationLimit });\n   }, []);\n\n   const translate = (id: string) => intl.formatMessage({ id });\n\n   const getResultOfUserAction = (value: string) => {\n      switch (value) {\n         case 'login':\n            return translate('page.body.profile.content.action.login');\n         case 'logout':\n            return translate('page.body.profile.content.action.logout');\n         case 'request QR code for 2FA':\n            return translate('page.body.profile.content.action.request2fa');\n         case 'enable 2FA':\n            return translate('page.body.profile.content.action.enable2fa');\n         case 'login::2fa':\n            return translate('page.body.profile.content.action.login.2fa');\n         case 'request password reset':\n            return translate('page.body.profile.content.action.requestPasswordReset');\n         case 'password reset':\n            return translate('page.body.profile.content.action.passwordReset');\n         default:\n            return value;\n      }\n   };\n\n   const onClickPrevPage = () => getUserActivity({ page: page - 1, limit: paginationLimit });\n\n   const onClickNextPage = () => getUserActivity({ page: page + 1, limit: paginationLimit });\n\n   return (\n      <LayoutProfile\n         title=\"Sessions history\"\n         withBreadcrumbs={{\n            display: 'Home',\n            href: '/',\n            active: 'Sessions history',\n         }}\n      >\n         <ProfileSidebar />\n         <div className=\"grow p-4 md:px-8 md:py-10 lg:p-10 shadow-card2 rounded-2xl bg-neutral8 dark:bg-shade1\" style={{ animationDuration: '100ms' }}>\n            <div className=\"space-y-4\">\n               <div className=\"text-2xl leading-custom2 font-semibold tracking-custom1\">\n                  Sessions history\n               </div>\n               {/* <Table columns={columns} data={userActivity} /> */}\n               <div className=\"overflow-x-auto\">\n                  <table className=\"w-full table-auto\">\n                     <thead>\n                        <tr className=\"border-b border-neutral7 dark:border-neutral2\">\n                           <th className=\"p-4 pl-0 text-xs font-semibold leading-custom4 text-left dark:text-neutral5\">\n                              Date / time\n                           </th>\n                           <th className=\"p-4 text-xs font-semibold leading-custom4 text-left dark:text-neutral5\">\n                              Action\n                           </th>\n                           <th className=\"p-4 text-xs font-semibold leading-custom4 text-left dark:text-neutral5\">\n                              IP address\n                           </th>\n                           <th className=\"p-4 text-xs font-semibold leading-custom4 text-left dark:text-neutral5\">\n                              Device\n                           </th>\n                           <th className=\"p-4 pr-0 text-xs font-semibold leading-custom4 text-right dark:text-neutral5\">\n                              Status\n                           </th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        {loading ? (\n                           <>\n                              <tr>\n                                 <td colSpan={5} className=\"py-3 last:pb-0\">\n                                    <Skeleton height={20} isWithFull rounded=\"md\" />\n                                 </td>\n                              </tr>\n                              <tr>\n                                 <td colSpan={5} className=\"py-3 last:pb-0\">\n                                    <Skeleton height={20} isWithFull rounded=\"md\" />\n                                 </td>\n                              </tr>\n                              <tr>\n                                 <td colSpan={5} className=\"py-3 last:pb-0\">\n                                    <Skeleton height={20} isWithFull rounded=\"md\" />\n                                 </td>\n                              </tr>\n                           </>\n                        ) : userActivity.length ? userActivity.map(({ created_at, action, result, user_ip, user_agent }, index) => (\n                           <tr className=\"[&:not(:last-child)]:border-b [&:not(:last-child)]:border-neutral6 dark:[&:not(:last-child)]:border-neutral3\">\n                              <td className=\"p-4 pl-0\">\n                                 <div className=\"font-medium whitespace-nowrap\">\n                                    {localeDate(created_at, 'shortDate').split(' ').shift()}\n                                 </div>\n                                 <div className=\"text-neutral4\">\n                                    {localeDate(created_at, 'time')}\n                                 </div>\n                              </td>\n                              <td className=\"p-4\">\n                                 <div className=\"font-medium whitespace-nowrap\">\n                                    {getResultOfUserAction(action)}\n                                 </div>\n                              </td>\n                              <td className=\"p-4\">\n                                 <div className=\"font-medium w-24 truncate\">\n                                    {user_ip}\n                                 </div>\n                              </td>\n                              <td className=\"p-4\">\n                                 <div className=\"font-medium\">\n                                    {getUserAgent(user_agent)}\n                                 </div>\n                              </td>\n                              <td className=\"p-4 pr-0 text-right\">\n                                 <div className={`${result === 'succeed' ? 'text-primary1' : 'text-primary4'}`}>\n                                    {translate(`page.body.profile.content.result.${result}`)}\n                                 </div>\n                              </td>\n                           </tr>\n                        )) : (\n                           <tr>\n                              <td colSpan={5}>\n                                 <div className=\"min-h-96 flex flex-col items-center justify-center space-y-3\">\n                                    <IcEmty />\n                                    <div className=\"text-xs font-semibold text-neutral4\">\n                                       {translate('noResultFound')}\n                                    </div>\n                                 </div>\n                              </td>\n                           </tr>\n                        )}\n                     </tbody>\n                  </table>\n               </div>\n               <Pagination\n                  firstElemIndex={firstElemIndex}\n                  lastElemIndex={lastElemIndex}\n                  total={total}\n                  page={page}\n                  nextPageExists={nextPageExists}\n                  onClickPrevPage={onClickPrevPage}\n                  onClickNextPage={onClickNextPage}\n               />\n            </div>\n         </div>\n      </LayoutProfile>\n   )\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   userActivity: selectUserActivity(state),\n   loading: selectUserActivityLoading(state),\n   total: selectTotalNumber(state),\n   page: selectUserActivityCurrentPage(state),\n   pageCount: selectUserActivityPageCount(state, paginationLimit),\n   firstElemIndex: selectUserActivityFirstElemIndex(state, paginationLimit),\n   lastElemIndex: selectUserActivityLastElemIndex(state, paginationLimit),\n   nextPageExists: selectUserActivityNextPageExists(state, paginationLimit),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   getUserActivity: params => dispatch(getUserActivity(params)),\n});\n\nexport const SessionsHistory = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps)\n)(SessionsHistoryFC) as FunctionComponent;\n","import React, {\n   FunctionComponent,\n   useEffect,\n   useState\n} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Button, InputGroup, LayoutProfile, ProfileSidebar } from 'components';\nimport { injectIntl } from 'react-intl';\n// import { RouterProps } from 'react-router';\nimport { compose } from 'redux';\nimport { copyToClipboard, setDocumentTitle } from '../../helpers';\nimport { alertPush, generate2faQRFetch, RootState, selectTwoFactorAuthBarcode, selectTwoFactorAuthQR, selectTwoFactorAuthSuccess, selectUserInfo, toggle2faFetch, User } from 'modules';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { IntlProps } from 'index';\n\ninterface RouterProps {\n   history: History;\n}\n\ninterface ReduxProps {\n   user: User;\n   barcode: string;\n   qrUrl: string;\n   success?: boolean;\n}\n\ninterface DispatchProps {\n   toggle2fa: typeof toggle2faFetch;\n   generateQR: typeof generate2faQRFetch;\n   fetchSuccess: typeof alertPush;\n}\n\ntype Props = RouterProps & ReduxProps & DispatchProps & IntlProps;\n\nconst TwoFAFC = ({\n   user,\n   barcode,\n   fetchSuccess,\n   generateQR,\n   history,\n   intl,\n   qrUrl,\n   toggle2fa,\n   success\n}: Props) => {\n   const [otpCode, setOtpCode] = useState<string>('');\n   useEffect(() => {\n      setDocumentTitle('Two factor authentication');\n      if (!otp) {\n         generateQR();\n      }\n   }, [user.otp]);\n\n   const handleEnable2fa = () => {\n      toggle2fa({\n         code: otpCode,\n         enable: true,\n      });\n      setOtpCode('');\n   };\n\n   const handleDisable2fa = () => {\n      toggle2fa({\n         code: otpCode,\n         enable: false,\n      });\n      setOtpCode('');\n   };\n\n   const { otp } = user;\n\n   const secretRegex = /secret=(\\w+)/;\n   const secretMatch = qrUrl.match(secretRegex);\n   const secret = secretMatch ? secretMatch[1] : '';\n   const submitHandler = !otp ? handleEnable2fa : handleDisable2fa;\n\n   const renderTwoFactorAuthQR = (barcode: string) => {\n      const src = `data:image/png;base64,${barcode}`;\n      return barcode.length > 0 && <img className=\"w-full\" src={src} alt=\"Qr code\" title=\"Scan me\" />;\n   };\n\n   const handleOnKeyPress = (e: React.KeyboardEvent) => {\n      if (otpCode.length > 5) {\n         if (e.key === 'Enter') {\n            submitHandler();\n         }\n      }\n   };\n\n   const handleCopy = (url: string, type: string) => {\n      copyToClipboard(url);\n      fetchSuccess({ message: [`${type} Copied`], type: 'success' });\n   }\n\n   const renderIconCopied = (title: string) => (\n      <button\n         className=\"cursor-copy group\"\n         onClick={() => handleCopy(secret, title)}\n         title=\"Copy referral\"\n      >\n         <svg className=\"w-6 h-6 group-hover:scale-110 fill-neutral4 group-hover:fill-neutral3 dark:group-hover:fill-neutral5 transition-transform duration-200\">\n            <use xlinkHref=\"#icon-copy\" />\n         </svg>\n      </button>\n   );\n\n   return (\n      <LayoutProfile\n         title=\"API keys\"\n         withBreadcrumbs={{\n            display: 'Home',\n            href: '/',\n            active: 'TFA',\n         }}\n      >\n         <ProfileSidebar />\n         <div className=\"grow p-4 md:px-8 lg:p-10 shadow-card2 rounded-2xl bg-neutral8 dark:bg-shade1\">\n            <div className=\"mb-4 text-4.5xl leading-1.2 tracking-custom1 font-dm font-bold\">\n               2FA\n               <span className={otp ? 'text-primary5' : 'text-primary4'}> {otp ? 'Enabled' : 'Disabled'}</span>\n            </div>\n            <div className=\"mb-10 text-xs leading-custom4 text-neutral4\">\n               If you want to {!otp ? 'turn on' : 'turn off'} 2FA, input your the six-digit code provided by the Google Authenticator app below, then click <span className=\"font-semibold text-neutral3 dark:text-neutral5\">\" {!otp ? 'Enabled' : 'Disabled'} 2FA\"</span>.\n            </div>\n            <div className=\"mb-2 text-2xl leading-custom2 font-semibold tracking-custom1\">\n               {!otp ? 'Enabled' : 'Disabled'} 2FA\n            </div>\n            <div className=\"mb-6 text-neutral3 dark:text-neutral5\">\n               {!otp ? 'Scan SQ code by the Google Authenticator app to Enable the 2FA verification.' : 'Enter your the six-digit code provided by the Google Authenticator app to Disable the 2FA verification'}\n            </div>\n            <div className=\"space-y-8\" onKeyPress={handleOnKeyPress}>\n               <div className=\"flex space-x-4\">\n                  {!otp && (\n                     <InputGroup\n                        label=\"mfa code\"\n                        placeholder=\"mfa code\"\n                        parentClassName=\"w-full\"\n                        className=\"truncate\"\n                        value={!otp && secret}\n                        readOnly\n                        icon={renderIconCopied('Referral code')}\n                     />\n                  )}\n                  <InputGroup\n                     autoFocus\n                     label=\"2fa code\"\n                     placeholder=\"2fa code\"\n                     parentClassName=\"w-full\"\n                     value={otpCode}\n                     onChange={setOtpCode}\n                     maxLength={6}\n                  />\n               </div>\n               {!otp && (\n                  <div className=\"flex bg-neutral7 dark:bg-neutral2 rounded-2xl\">\n                     <div className=\"max-w-64 mt-16 mx-auto py-8 px-12 bg-neutral8 dark:bg-neutral3 rounded-t-5xl\">\n                        <div className=\"p-4 rounded-lg border-2 border-dashed border-primary1\">\n                           {!otp && renderTwoFactorAuthQR(barcode)}\n                        </div>\n                        <a href=\"https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2\" rel=\"noopener noreferrer\" target=\"_blank\">\n                           <Button\n                              text=\"Download app\"\n                              variant=\"outline\"\n                              className=\"mt-12\"\n                              width=\"noFull\"\n                           />\n                        </a>\n                     </div>\n                  </div>\n               )}\n               <div className=\"text-center\">\n                  <Button\n                     text={!otp ? 'Enabled 2FA' : 'Disabled 2FA'}\n                     variant={otp ? 'orange' : 'green'}\n                     onClick={submitHandler}\n                     disabled={otpCode.length < 6}\n                     width=\"noFull\"\n                  />\n               </div>\n            </div>\n         </div>\n      </LayoutProfile>\n   )\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, Props, RootState> = state => ({\n   user: selectUserInfo(state),\n   qrUrl: selectTwoFactorAuthQR(state),\n   barcode: selectTwoFactorAuthBarcode(state),\n   success: selectTwoFactorAuthSuccess(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n   generateQR: () => dispatch(generate2faQRFetch()),\n   toggle2fa: ({ code, enable }) => dispatch(toggle2faFetch({ code, enable })),\n   fetchSuccess: payload => dispatch(alertPush(payload)),\n});\n\nexport const TwoFA = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps)\n)(TwoFAFC) as FunctionComponent;\n","import React, {\n   FunctionComponent,\n} from 'react';\nimport { withRouter } from 'react-router';\nimport { compose } from 'redux';\nimport {\n   MapDispatchToPropsFunction,\n   connect\n} from 'react-redux';\nimport { History } from 'history';\nimport { injectIntl } from 'react-intl';\nimport { IntlProps } from 'index';\nimport {\n   ProfileSidebar,\n   FormChangePassword,\n   LayoutProfile,\n   Button\n} from 'components';\nimport {\n   changePasswordFetch,\n   RootState,\n   selectChangePasswordLoading,\n   selectChangePasswordSuccess,\n} from 'modules';\nimport { useDocumentTitle } from 'hooks';\n\ninterface ReduxProps {\n   changePasswordLoading: boolean;\n   passwordChangeSuccess?: boolean;\n}\n\ntype RouterProps = {\n   history: History;\n}\n\ninterface DispatchProps {\n   changePassword: typeof changePasswordFetch;\n}\n\ntype Props = ReduxProps & DispatchProps & RouterProps & IntlProps;\n\nconst ChangePasswordFC = ({\n   intl,\n   changePassword,\n   changePasswordLoading,\n   passwordChangeSuccess,\n   history: { push }\n}: Props) => {\n   useDocumentTitle('Change Password');\n\n   const translate = (id: string) => intl.formatMessage({ id });\n\n   return (\n      <LayoutProfile\n         title=\"Change password\"\n         withBreadcrumbs={{\n            display: 'Home',\n            href: '/',\n            active: 'Change password',\n         }}\n      >\n         <ProfileSidebar />\n         <div\n            className=\"grow p-4 md:px-8 md:py-10 lg:p-10 shadow-card2 rounded-2xl bg-neutral8 dark:bg-shade1 space-y-12\"\n            style={{ animationDuration: '100ms' }}\n         >\n            {passwordChangeSuccess ? (\n               <div className=\"w-full sm:w-84 mx-auto\">\n                  <div className=\"text-center text-4.5xl leading-[1.2] tracking-custom1 font-dm font-bold\">\n                     New password\n                  </div>\n                  <div className=\"text-center text-base leading-normal mt-2 mb-8\">\n                     Your new password has been set\n                  </div>\n                  <div className=\"text-center\">\n                     <Button\n                        text=\"Get home\"\n                        width=\"noFull\"\n                        variant=\"outline\"\n                        onClick={() => push('/')}\n                     />\n                  </div>\n               </div>\n            ) : (\n               <FormChangePassword\n                  title={translate('page.body.profile.header.account.content.password.change')}\n                  handleChangePassword={changePassword}\n                  isLoading={changePasswordLoading}\n               />\n            )}\n         </div>\n      </LayoutProfile>\n   )\n}\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   changePasswordLoading: selectChangePasswordLoading(state),\n   passwordChangeSuccess: selectChangePasswordSuccess(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   changePassword: ({\n      old_password,\n      new_password,\n      confirm_password\n   }) => dispatch(changePasswordFetch({\n      old_password,\n      new_password,\n      confirm_password\n   })),\n});\n\nexport const ChangePassword = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps)\n)(ChangePasswordFC) as FunctionComponent;\n","import React, { FC, FunctionComponent, memo, useMemo, useState } from 'react';\nimport { Link, useHistory, withRouter } from 'react-router-dom';\nimport { Button, Decimal, InputGroup, Portal } from 'components';\nimport { NumericFormat } from 'react-number-format';\nimport { useCurrenciesFetch, useMarketsFetch, useMarketsTickersFetch } from 'hooks';\nimport { RootState, selectCurrencies, selectMarkets, selectMarketTickers, selectUserInfo, selectUserLoggedIn, User, selectMarketsLoading, Market } from 'modules';\nimport { ICChevronRight, IcMasterCard, IcShorting, IcVisa } from 'assets';\nimport { SearchIcon, StarIcon } from '@heroicons/react/outline';\nimport { connect, useSelector } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectIntl } from 'react-intl';\n\nconst defaultTicker = {\n   amount: '0.0',\n   last: '0.0',\n   high: '0.0',\n   open: '0.0',\n   low: '0.0',\n   price_change_percent: '+0.00%',\n   volume: '0.0',\n};\n\ninterface Props {\n   userData: User;\n   isLoggedIn: boolean;\n   isLoading?: boolean;\n}\n\nconst BuyCryptoFC: FC<Props> = memo(({ userData, isLoggedIn, isLoading }) => {\n   const { push } = useHistory();\n   const [stepActive, setStepActive] = useState<number>(1);\n   const [coinActive, setCoinActive] = useState<any>();\n   const [showModalSuccessPurchased, setShowModalSuccessPurchased] = useState<boolean>(false);\n\n   const handleStep = (e: any, i: number) => {\n      setStepActive(i);\n      setCoinActive(e);\n      window.scrollTo({\n         top: 0,\n         behavior: 'smooth'\n      });\n   }\n\n   const [searchMarket, setSearchMarket] = useState<string>('');\n   useMarketsFetch();\n   useMarketsTickersFetch();\n   useCurrenciesFetch();\n   const markets = useSelector(selectMarkets);\n   const marketTickers = useSelector(selectMarketTickers);\n   const currencies = useSelector(selectCurrencies);\n   // console.log('markets', markets)\n   // console.log('marketTickers', marketTickers)\n   // console.log('currencies', currencies)\n\n   const formatFilteredMarkets = (list: string[], market: Market) => {\n      if (!list?.includes(market.quote_unit)) {\n         list.push(market.quote_unit);\n      }\n      return list;\n   };\n\n   let currentBidUnitsList: string[] = [''];\n\n   if (markets.length > 0) {\n      currentBidUnitsList = markets.reduce(formatFilteredMarkets, currentBidUnitsList);\n   }\n\n   let currentBidUnitMarkets = markets || markets;\n\n   const formattedMarkets = currentBidUnitMarkets.length ? currentBidUnitMarkets.map(market =>\n   ({\n      ...market,\n      last: Decimal.format(Number((marketTickers[market.id] || defaultTicker).last), market.amount_precision),\n      open: Decimal.format(Number((marketTickers[market.id] || defaultTicker).open), market.price_precision),\n      price_change_percent: String((marketTickers[market.id] || defaultTicker).price_change_percent),\n      high: Decimal.format(Number((marketTickers[market.id] || defaultTicker).high), market.amount_precision),\n      low: Decimal.format(Number((marketTickers[market.id] || defaultTicker).low), market.amount_precision),\n      volume: Decimal.format(Number((marketTickers[market.id] || defaultTicker).volume), market.amount_precision),\n   }),\n   ).map(market =>\n   ({\n      ...market,\n      change: Decimal.format((+market.last - +market.open)\n         .toFixed(market.price_precision), market.price_precision),\n   }),\n   ) : [];\n\n   const combainById = (a1, a2) =>\n      a1.map(({\n         base_unit,\n         amount,\n         avg_price,\n         high,\n         last,\n         low,\n         open,\n         price_change_percent,\n         volume,\n      }, i) => ({\n         no: i + 1,\n         ...a2.find(item => (item.id === base_unit) && item),\n         amount,\n         avg_price,\n         high,\n         last,\n         low,\n         open,\n         price_change_percent,\n         volume,\n      }));\n   const combineMarkets = combainById(formattedMarkets, currencies);\n\n   // console.log('combineMarkets', combineMarkets);\n\n   const handleSetShowModalSuccessPurchased = () => setShowModalSuccessPurchased(!showModalSuccessPurchased);\n\n   const renderCoin = useMemo(() => {\n      return (\n         <>\n            <div className=\"mb-5 text-2xl leading-custom2 font-semibold tracking-custom1\">Select crypto</div>\n            <form className=\"relative shrink-0 mb-10\">\n               <InputGroup\n                  placeholder=\"Search coin\"\n                  onChange={setSearchMarket}\n                  autoFocus\n                  icon={\n                     <SearchIcon className=\"w-5 h-5 stroke-neutral4 transition-all duration-300\" />\n                  }\n               />\n               <button\n                  type=\"button\"\n                  className=\"absolute top-0 right-0 h-12 w-12 bg-none flex items-center justify-center\"\n               >\n                  <SearchIcon className=\"w-5 h-5 stroke-neutral4 transition-all duration-300\" />\n               </button>\n            </form>\n            <div className=\"table w-full\">\n               <div className=\"table-row\">\n                  <div className=\"table-cell p-4 pt-0 pl-0 pb-6 text-xs leading-custom4 font-medium text-neutral4\">\n                     <div className=\"group flex items-center space-x-1 cursor-pointer\">\n                        <div>#</div>\n                        <IcShorting />\n                     </div>\n                  </div>\n                  <div className=\"table-cell p-4 pt-0 pb-6 text-xs leading-custom4 font-medium text-neutral4\">\n                     <div className=\"group flex items-center space-x-1 cursor-pointer\">\n                        <div>Name</div>\n                        <IcShorting />\n                     </div>\n                  </div>\n                  <div className=\"table-cell p-4 pt-0  pb-6 text-xs leading-custom4 font-medium text-neutral4\">\n                     <div className=\"group flex items-center justify-end space-x-1 cursor-pointer\">\n                        <div>Price</div>\n                        <IcShorting />\n                     </div>\n                  </div>\n                  <div className=\"table-cell p-4 pt-0 pr-0 pb-6 text-xs leading-custom4 font-medium text-neutral4 text-right\">\n                     <div className=\"group flex items-center justify-end space-x-1 cursor-pointer\">\n                        <div>24h %</div>\n                        <IcShorting />\n                     </div>\n                  </div>\n               </div>\n               {\n                  isLoading ? <>\n                     <div className=\"\">Loading</div>\n                  </> : combineMarkets?.length > 0 ? combineMarkets.filter(e => Object.keys(e)\n                     ?.reduce((acc, curr) => acc || e[curr]?.toString()?.toLowerCase()\n                        ?.match(searchMarket?.toLowerCase())\n                        ?.includes(searchMarket?.toLowerCase()), false))?.map(({ id, name, icon_url, last, price_change_percent }, index) => (\n                           <div className=\"table-row cursor-pointer\" key={index} onClick={() => handleStep({ id, name, icon_url, last, price_change_percent }, 2)}>\n                              <div className=\"table-cell p-4 pl-0 text-xs font-medium align-middle border-t border-neutral6 dark:border-neutral3\">\n                                 <div className=\"group inline-flex items-center\">\n                                    <button\n                                       onClick={e => {\n                                          e.stopPropagation();\n                                          // handleAddToFavorite(market)\n                                       }}\n                                       type=\"button\"\n                                       className=\"w-4 h-4 mr-2 group\"\n                                    >\n                                       <StarIcon className=\"w-4 h-4 stroke-neutral4 group-hover:stroke-yellow-500 transition-all duration-200\" />\n                                    </button>\n                                    <div className=\"text-neutral4\">{index + 1}</div>\n                                 </div>\n                              </div>\n                              <div className=\"group table-cell p-4 font-medium align-middle border-t border-neutral6 dark:border-neutral3\">\n                                 <div className=\"flex items-center space-x-3\">\n                                    <div className=\"shrink-0 w-8\">\n                                       <img className=\"w-full\" src={icon_url} alt={name} style={{\n                                          clipPath: 'polygon(50% 0, 5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%)',\n                                       }} />\n                                    </div>\n                                    <div className=\"flex items-center space-x-1.5\">\n                                       <div className=\"group-hover:text-primary1 transition-colors duration-300\">{name}</div>\n                                       <div className=\"font-normal text-neutral4 uppercase\">{id}</div>\n                                    </div>\n                                 </div>\n                              </div>\n                              <div className=\"table-cell p-4 font-medium align-middle border-t border-neutral6 dark:border-neutral3 text-right\">\n                                 {Decimal.format(last, 0, ',')}\n                              </div>\n                              <div className=\"table-cell p-4 pr-0 font-medium align-middle border-t border-neutral6 dark:border-neutral3 text-right\">\n                                 <div className={`${price_change_percent.includes('-') ? 'text-primary4' : 'text-primary5'}`}>{price_change_percent}</div>\n                              </div>\n                           </div>\n                        )) : (\n                     <div className=\"\">Null</div>\n                  )\n               }\n            </div>\n         </>\n      )\n   }, [combineMarkets]);\n\n   const renderEnterAmount = useMemo(() => {\n      return (\n         <>\n            <div className=\"flex items-center justify-between mb-16\">\n               <button onClick={() => setStepActive(1)} type=\"button\" className=\"group flex items-center text-2xl font-semibold leading-custom2 tracking-custom1\">\n                  <svg className=\"w-3.5 h-3.5 mr-4 fill-neutral4 group-hover:-translate-x-1 transition-all duration-300\">\n                     <use xlinkHref=\"#icon-arrow-prev\"></use>\n                  </svg>\n                  Enter amount\n               </button>\n               <div className=\"flex items-center text-base font-medium\">\n                  Buying {coinActive?.name || ''}\n                  <img src={coinActive?.icon_url} className=\"w-6 ml-3\" alt={coinActive?.name} style={{\n                     clipPath: 'polygon(50% 0, 5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%)',\n                  }} />\n               </div>\n            </div>\n            <div>\n               <div className=\"flex justify-center items-center space-x-2\">\n                  <div className=\"relative top-2 text-3.5xl leading-tight tracking-custom1 font-dm font-bold\">IDR</div>\n                  <div className=\"relative\">\n                     <div className=\"min-w-72 max-w-4xl min-h-96 pr-1.25 opacity-0 font-dm font-bold text-8xl tracking-custom\">2,000,000</div>\n                     <NumericFormat value=\"250000\" allowLeadingZeros thousandSeparator=\",\" type=\"text\" className=\"absolute text-center top-0 left-0 w-full h-full border-none bg-none shadow-none bg-transparent appearance-none outline-none font-dm font-bold text-8xl tracking-custom\" />\n                  </div>\n               </div>\n               <div className=\"mb-3 text-center text-base font-medium flex items-center justify-center space-x-2\">\n                  <div>9000</div>\n                  <div className=\"text-neutral4\">BTC</div>\n               </div>\n               <div className=\"flex flex-wrap justify-center space-x-2\">\n                  <Button\n                     text=\"250,000\"\n                     variant=\"outline\"\n                     width=\"noFull\"\n                     size=\"normal\"\n                     className=\"text-neutral4\"\n                  />\n                  <Button\n                     text=\"500,000\"\n                     variant=\"outline\"\n                     width=\"noFull\"\n                     size=\"normal\"\n                     className=\"text-neutral4\"\n                  />\n                  <Button\n                     text=\"1,000,000\"\n                     variant=\"outline\"\n                     width=\"noFull\"\n                     size=\"normal\"\n                     className=\"text-neutral4\"\n                  />\n                  <Button\n                     text=\"2,000,000\"\n                     variant=\"outline\"\n                     width=\"noFull\"\n                     size=\"normal\"\n                     className=\"text-neutral4\"\n                  />\n               </div>\n               <div className=\"text-center mt-12\">\n                  <Button\n                     width=\"noFull\"\n                     text=\"Continue\"\n                     className=\"!min-w-184\"\n                     onClick={() => setStepActive(3)}\n                  />\n               </div>\n            </div>\n         </>\n      )\n   }, [coinActive]);\n\n   const renderPaymentInfo = useMemo(() => {\n      return (\n         <>\n            <div className=\"flex items-center justify-between mb-16\">\n               <button onClick={() => setStepActive(2)} type=\"button\" className=\"group flex items-center text-2xl font-semibold leading-custom2 tracking-custom1\">\n                  <svg className=\"w-3.5 h-3.5 mr-4 fill-neutral4 group-hover:-translate-x-1 transition-all duration-300\">\n                     <use xlinkHref=\"#icon-arrow-prev\"></use>\n                  </svg>\n                  Payment info\n               </button>\n               <div className=\"flex items-center text-base font-medium\">\n                  Buying {coinActive?.name || ''}\n                  <img src={coinActive?.icon_url} className=\"w-6 ml-3\" alt={coinActive?.name} style={{\n                     clipPath: 'polygon(50% 0, 5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%)',\n                  }} />\n               </div>\n            </div>\n            <div className=\"space-y-12\">\n               <div className=\"flex justify-between py-6 px-9 rounded-2xl bg-neutral7 dark:bg-neutral2\">\n                  <div className=\"flex space-x-2.5\">\n                     <div className=\"flex justify-center items-center shrink-0 w-10 h-10 rounded-full bg-primary3\">\n                        <svg className=\"w-5 h-5 fill-neutral8\">\n                           <use xlinkHref=\"#icon-wallet\"></use>\n                        </svg>\n                     </div>\n                     <div>\n                        <div className=\"text-xs text-neutral4 leading-custom4\">\n                           Spend\n                        </div>\n                        <div className=\"font-medium\">\n                           200,000\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"flex space-x-2.5\">\n                     <div className=\"flex justify-center items-center shrink-0 w-10 h-10 rounded-full bg-primary5\">\n                        <svg className=\"w-5 h-5 fill-neutral8\">\n                           <use xlinkHref=\"#icon-wallet\"></use>\n                        </svg>\n                     </div>\n                     <div>\n                        <div className=\"text-xs text-neutral4 leading-custom4\">\n                           Get\n                        </div>\n                        <div className=\"font-medium\">\n                           0.001499 BTC\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"flex justify-between items-center\">\n                  <div className=\"text-2xl font-semibold leading-custom2 tracking-custom1\">Credit Card</div>\n                  <div className=\"flex items-center\">\n                     <IcVisa />\n                     <IcMasterCard />\n                  </div>\n               </div>\n               <div className=\"space-y-8\">\n                  <InputGroup\n                     label=\"card number\"\n                     placeholder=\"XXXX XXXX XXXX XXXX\"\n                  />\n                  <InputGroup\n                     label=\"card holder\"\n                     placeholder=\"TRAN MAU TRI TRAM\"\n                  />\n                  <div className=\"flex space-x-4 justify-between\">\n                     <InputGroup\n                        label=\"expiration date\"\n                        placeholder=\"MM / YY\"\n                        parentClassName=\"w-full\"\n                     />\n                     <InputGroup\n                        label=\"cvc\"\n                        placeholder=\"CVC\"\n                        parentClassName=\"w-full\"\n                     />\n                  </div>\n                  <label className=\"relative inline-block select-none cursor-pointer group\">\n                     <input type=\"checkbox\" checked className=\"checkbox__input absolute top-0 left-0 opacity-0\" />\n                     <span className=\"flex space-x-3\">\n                        <span className=\"checkbox__tick relative shrink-0 w-6 h-6 rounded border-2 border-neutral6 transition-all duration-200 group-hover:border-primary1 dark:border-neutral3\"></span>\n                        <span className=\"font-medium leading-custom\">Save Card</span>\n                     </span>\n                  </label>\n               </div>\n               <div className=\"text-right mt-12\">\n                  <Button\n                     width=\"noFull\"\n                     text=\"Continue\"\n                     onClick={() => setStepActive(4)}\n                  />\n               </div>\n            </div>\n         </>\n      )\n   }, [coinActive]);\n\n   const renderConfirmOrder = useMemo(() => {\n      return (\n         <>\n            <div className=\"flex items-center justify-between mb-16\">\n               <button onClick={() => setStepActive(3)} type=\"button\" className=\"group flex items-center text-2xl font-semibold leading-custom2 tracking-custom1\">\n                  <svg className=\"w-3.5 h-3.5 mr-4 fill-neutral4 group-hover:-translate-x-1 transition-all duration-300\">\n                     <use xlinkHref=\"#icon-arrow-prev\"></use>\n                  </svg>\n                  Confirm order\n               </button>\n               <div className=\"flex items-center text-base font-medium\">\n                  Buying {coinActive?.name || ''}\n                  <img src={coinActive?.icon_url} className=\"w-6 ml-3\" alt={coinActive?.name} style={{\n                     clipPath: 'polygon(50% 0, 5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%)',\n                  }} />\n               </div>\n            </div>\n            <div className=\"space-y-12\">\n               <div className=\"flex justify-between py-6 px-9 rounded-2xl bg-neutral7 dark:bg-neutral2\">\n                  <div className=\"flex space-x-2.5\">\n                     <div className=\"flex justify-center items-center shrink-0 w-10 h-10 rounded-full bg-primary3\">\n                        <svg className=\"w-5 h-5 fill-neutral8\">\n                           <use xlinkHref=\"#icon-wallet\"></use>\n                        </svg>\n                     </div>\n                     <div>\n                        <div className=\"text-xs text-neutral4 leading-custom4\">\n                           Spend\n                        </div>\n                        <div className=\"font-medium\">\n                           200,000\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"flex space-x-2.5\">\n                     <div className=\"flex justify-center items-center shrink-0 w-10 h-10 rounded-full bg-primary5\">\n                        <svg className=\"w-5 h-5 fill-neutral8\">\n                           <use xlinkHref=\"#icon-wallet\"></use>\n                        </svg>\n                     </div>\n                     <div>\n                        <div className=\"text-xs text-neutral4 leading-custom4\">\n                           Get\n                        </div>\n                        <div className=\"font-medium\">\n                           0.001499 BTC\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"flex space-x-2.5\">\n                     <div className=\"flex justify-center items-center shrink-0 w-10 h-10 rounded-full bg-secondary1\">\n                        <svg className=\"w-5 h-5 fill-neutral8\">\n                           <use xlinkHref=\"#icon-wallet\"></use>\n                        </svg>\n                     </div>\n                     <div>\n                        <div className=\"text-xs text-neutral4 leading-custom4\">\n                           Method\n                        </div>\n                        <div className=\"font-medium\">\n                           Credit card\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"text-base\">You are about to buy 0.001499 BTC from Digiasset</div>\n               <div className=\"space-y-3\">\n                  <div className=\"flex justify-between pb-3 border-b border-neutral6 text-base font-medium dark:border-neutral3\">\n                     <div>0.001499</div>\n                     <div className=\"uppercase\">BTC</div>\n                  </div>\n                  <div className=\"flex justify-between\">\n                     <div className=\"text-neutral4\">Service fee</div>\n                     <div className=\"text-base font-medium uppercase\">0.000 BTC</div>\n                  </div>\n                  <div className=\"flex justify-between\">\n                     <div className=\"text-neutral4\">You will pay</div>\n                     <div className=\"text-base font-medium uppercase\">200,000 IDR</div>\n                  </div>\n               </div>\n               <div className=\"flex justify-between mt-12\">\n                  <Button\n                     width=\"noFull\"\n                     text=\"Cancel\"\n                     variant=\"outline\"\n                     onClick={() => setStepActive(1)}\n                  />\n                  <Button\n                     width=\"noFull\"\n                     text=\"I understand, continue\"\n                     onClick={handleSetShowModalSuccessPurchased}\n                  />\n               </div>\n            </div>\n         </>\n      )\n   }, [coinActive]);\n\n   return (\n      <>\n         <div>\n            <div className=\"py-10\">\n               <div className=\"flex items-center w-full max-w-7xl my-0 mx-auto px-6 md:px-10 lg:px-20\">\n                  <div className=\"mr-auto text-5xl font-dm font-bold tracking-custom leading-custom1\">\n                     Buy crypto\n                  </div>\n                  <div className=\"flex items-center text-xs text-neutral4 font-medium leading-custom1\">\n                     <div>\n                        How to buy crypto on Digiasset\n                     </div>\n                     <Link to=\"/\" className=\"flex items-center group\">\n                        <div className=\"ml-2 text-neutral2 dark:text-neutral6 group-hover:text-primary1 transition-all duration-300\">\n                           Learn now\n                        </div>\n                        <div className=\"w-5 h-5 flex items-center justify-center\">\n                           <ICChevronRight className=\"group-hover:fill-primary1\" />\n                        </div>\n                     </Link>\n                  </div>\n               </div>\n            </div>\n            <div className=\"py-20 pb-34 bg-shade5 dark:bg-none dark:shadow-body dark:bg-neutral1\">\n               <div className=\"flex w-full max-w-7xl my-0 mx-auto px-6 md:px-10 lg:px-20\">\n                  <div className=\"shrink-0 mr-auto w-54 space-y-6\">\n                     <div className={`relative flex items-center space-x-4 h-12 px-2 rounded-3xl font-dm font-bold leading-custom3 transition-all duration-300 after:absolute after:content-[''] after:top-full after:left-5.75 after:h-6 after:border-l-2 after:border-dashed after:border-neutral5 ${(stepActive === 2 || stepActive === 3 || stepActive === 4) && 'bg-neutral8 dark:bg-neutral2 dark:after:border-neutral4 shadow-step'}`}>\n                        <div className={`relative flex items-center justify-center w-8 h-8 rounded-full border-2 border-primary5 ${(stepActive === 2 || stepActive === 3 || stepActive === 4) && 'bidding__number'} after:absolute after:content-[''] after:top-0 after:left-0 after:w-full after:h-full after:rounded-full after:transition-opacity after:duration-200 transition-all duration-300`}>1</div>\n                        <div>Select crypto</div>\n                     </div>\n                     <div className={`relative flex items-center space-x-4 h-12 px-2 rounded-3xl font-dm font-bold leading-custom3 transition-all duration-300 after:absolute after:content-[''] after:top-full after:left-5.75 after:h-6 after:border-l-2 after:border-dashed after:border-neutral5 ${(stepActive === 1) && 'text-neutral4'} ${(stepActive === 3 || stepActive === 4) && 'bg-neutral8 dark:bg-neutral2 dark:after:border-neutral4 shadow-step'}`}>\n                        <div className={`relative flex items-center justify-center w-8 h-8 rounded-full border-2 ${(stepActive === 2 || stepActive === 3 || stepActive === 4) ? 'border-primary5' : 'border-neutral6 dark:border-neutral4'} ${(stepActive === 3 || stepActive === 4) && 'bidding__number'} after:absolute after:content-[''] after:top-0 after:left-0 after:w-full after:h-full after:rounded-full after:transition-opacity after:duration-200 transition-all duration-300`}>2</div>\n                        <div>Enter amount</div>\n                     </div>\n                     <div className={`relative flex items-center space-x-4 h-12 px-2 rounded-3xl font-dm font-bold leading-custom3 transition-all duration-300 after:absolute after:content-[''] after:top-full after:left-5.75 after:h-6 after:border-l-2 after:border-dashed after:border-neutral5 ${(stepActive === 1 || stepActive === 2) && 'text-neutral4'} ${stepActive === 4 && 'bg-neutral8 dark:bg-neutral2 dark:after:border-neutral4 shadow-step'}`}>\n                        <div className={`relative flex items-center justify-center w-8 h-8 rounded-full border-2 ${(stepActive === 3 || stepActive === 4) ? 'border-primary5' : 'border-neutral6 dark:border-neutral4'} ${stepActive === 4 && 'bidding__number'} after:absolute after:content-[''] after:top-0 after:left-0 after:w-full after:h-full after:rounded-full after:transition-opacity after:duration-200 transition-all duration-300`}>3</div>\n                        <div>Payment info</div>\n                     </div>\n                     <div className={`relative flex items-center space-x-4 h-12 px-2 rounded-3xl font-dm font-bold ${stepActive !== 4 && 'text-neutral4'} leading-custom3 transition-all duration-300`}>\n                        <div className={`relative flex items-center justify-center w-8 h-8 rounded-full border-2 ${stepActive === 4 ? 'border-primary5' : 'border-neutral6 dark:border-neutral4'} transition-all duration-300`}>4</div>\n                        <div>Confirm order</div>\n                     </div>\n                  </div>\n                  <div className=\"w-736 p-10 shadow-card2 rounded-2xl bg-neutral8 dark:bg-shade1\">\n                     {\n                        stepActive === 1 ? renderCoin :\n                           stepActive === 2 ? renderEnterAmount :\n                              stepActive === 3 ? renderPaymentInfo :\n                                 renderConfirmOrder\n                     }\n                  </div>\n               </div>\n            </div>\n         </div>\n         <Portal\n            show={showModalSuccessPurchased}\n            close={handleSetShowModalSuccessPurchased}\n         >\n            <div className=\"mt-10 space-y-8\">\n               <div className=\"text-5xl text-center font-dm font-bold leading-custom1 tracking-custom\">Yay! 🎉</div>\n               <div className=\"max-w-71.25 mx-auto text-center text-base font-medium leading-normal\">\n                  You successfully purchased <span className=\"text-primary5\">0.020202 BTC</span>  from Digiasset\n               </div>\n               <div className=\"flex flex-wrap p-6 rounded-xl border border-neutral6\">\n                  <div className=\"mr-auto space-y-2.5\">\n                     <div className=\"text-neutral4\">Status</div>\n                     <div className=\"font-medium text-primary5\">Completed</div>\n                  </div>\n                  <div className=\"space-y-2.5\">\n                     <div className=\"text-neutral4\">Transaction ID</div>\n                     <div className=\"font-medium\">0msx836930...87r398</div>\n                  </div>\n               </div>\n               <div className=\"flex space-x-4\">\n                  <Button\n                     text=\"Trade\"\n                     onClick={() => push(`trading/${coinActive?.id || 'btcidr'}`)}\n                     variant=\"outline\"\n                     width=\"full\"\n                  />\n                  <Button\n                     text=\"Wallets\"\n                     onClick={() => push('/wallet-overview')}\n                     width=\"full\"\n                  />\n               </div>\n            </div>\n         </Portal>\n      </>\n   );\n});\n\nconst mapStateToProps = (state: RootState): Props => ({\n   userData: selectUserInfo(state),\n   isLoggedIn: selectUserLoggedIn(state),\n   isLoading: selectMarketsLoading(state),\n});\n\nexport const BuyCrypto = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps)\n)(BuyCryptoFC) as FunctionComponent;\n","import React, { FC, FunctionComponent, memo, useMemo, useState } from 'react';\nimport { Link, useHistory, withRouter } from 'react-router-dom';\nimport { Button, Decimal, InputGroup, Portal } from 'components';\nimport { NumericFormat } from 'react-number-format';\nimport { useCurrenciesFetch, useMarketsFetch, useMarketsTickersFetch } from 'hooks';\nimport { RootState, selectCurrencies, selectMarkets, selectMarketTickers, selectUserInfo, selectUserLoggedIn, User, selectMarketsLoading, Market } from 'modules';\nimport { ICChevronRight, IcShorting } from 'assets';\nimport { SearchIcon, StarIcon } from '@heroicons/react/outline';\nimport { connect, useSelector } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectIntl } from 'react-intl';\n\nconst defaultTicker = {\n   amount: '0.0',\n   last: '0.0',\n   high: '0.0',\n   open: '0.0',\n   low: '0.0',\n   price_change_percent: '+0.00%',\n   volume: '0.0',\n};\n\ninterface Props {\n   userData: User;\n   isLoggedIn: boolean;\n   isLoading?: boolean;\n}\n\nconst SellCryptoFC: FC<Props> = memo(({ userData, isLoggedIn, isLoading }) => {\n   const { push } = useHistory();\n   const [stepActive, setStepActive] = useState<number>(1);\n   const [coinActive, setCoinActive] = useState<any>();\n   const [showModalSuccessPurchased, setShowModalSuccessPurchased] = useState<boolean>(false);\n\n   const handleStep = (e: any, i: number) => {\n      setStepActive(i);\n      setCoinActive(e);\n      window.scrollTo({\n         top: 0,\n         behavior: 'smooth'\n      });\n   }\n\n   const [searchMarket, setSearchMarket] = useState<string>('');\n   useMarketsFetch();\n   useMarketsTickersFetch();\n   useCurrenciesFetch();\n   const markets = useSelector(selectMarkets);\n   const marketTickers = useSelector(selectMarketTickers);\n   const currencies = useSelector(selectCurrencies);\n   // console.log('markets', markets)\n   // console.log('marketTickers', marketTickers)\n   // console.log('currencies', currencies)\n\n   const formatFilteredMarkets = (list: string[], market: Market) => {\n      if (!list?.includes(market.quote_unit)) {\n         list.push(market.quote_unit);\n      }\n      return list;\n   };\n\n   let currentBidUnitsList: string[] = [''];\n\n   if (markets.length > 0) {\n      currentBidUnitsList = markets.reduce(formatFilteredMarkets, currentBidUnitsList);\n   }\n\n   let currentBidUnitMarkets = markets || markets;\n\n   const formattedMarkets = currentBidUnitMarkets.length ? currentBidUnitMarkets.map(market =>\n   ({\n      ...market,\n      last: Decimal.format(Number((marketTickers[market.id] || defaultTicker).last), market.amount_precision),\n      open: Decimal.format(Number((marketTickers[market.id] || defaultTicker).open), market.price_precision),\n      price_change_percent: String((marketTickers[market.id] || defaultTicker).price_change_percent),\n      high: Decimal.format(Number((marketTickers[market.id] || defaultTicker).high), market.amount_precision),\n      low: Decimal.format(Number((marketTickers[market.id] || defaultTicker).low), market.amount_precision),\n      volume: Decimal.format(Number((marketTickers[market.id] || defaultTicker).volume), market.amount_precision),\n   }),\n   ).map(market =>\n   ({\n      ...market,\n      change: Decimal.format((+market.last - +market.open)\n         .toFixed(market.price_precision), market.price_precision),\n   }),\n   ) : [];\n\n   const combainById = (a1, a2) =>\n      a1.map(({\n         base_unit,\n         amount,\n         avg_price,\n         high,\n         last,\n         low,\n         open,\n         price_change_percent,\n         volume,\n      }, i) => ({\n         no: i + 1,\n         ...a2.find(item => (item.id === base_unit) && item),\n         amount,\n         avg_price,\n         high,\n         last,\n         low,\n         open,\n         price_change_percent,\n         volume,\n      }));\n   const combineMarkets = combainById(formattedMarkets, currencies);\n\n   // console.log('combineMarkets', combineMarkets);\n\n   const handleSetShowModalSuccessPurchased = () => setShowModalSuccessPurchased(!showModalSuccessPurchased);\n\n   const renderCoin = useMemo(() => {\n      return (\n         <>\n            <div className=\"mb-5 text-2xl leading-custom2 font-semibold tracking-custom1\">Select crypto</div>\n            <form className=\"relative shrink-0 mb-10\">\n               <InputGroup\n                  placeholder=\"Search coin\"\n                  onChange={setSearchMarket}\n                  autoFocus\n                  icon={\n                     <SearchIcon className=\"w-5 h-5 stroke-neutral4 transition-all duration-300\" />\n                  }\n               />\n               <button\n                  type=\"button\"\n                  className=\"absolute top-0 right-0 h-12 w-12 bg-none flex items-center justify-center\"\n               >\n                  <SearchIcon className=\"w-5 h-5 stroke-neutral4 transition-all duration-300\" />\n               </button>\n            </form>\n            <div className=\"table w-full\">\n               <div className=\"table-row\">\n                  <div className=\"table-cell p-4 pt-0 pl-0 pb-6 text-xs leading-custom4 font-medium text-neutral4\">\n                     <div className=\"group flex items-center space-x-1 cursor-pointer\">\n                        <div>#</div>\n                        <IcShorting />\n                     </div>\n                  </div>\n                  <div className=\"table-cell p-4 pt-0 pb-6 text-xs leading-custom4 font-medium text-neutral4\">\n                     <div className=\"group flex items-center space-x-1 cursor-pointer\">\n                        <div>Name</div>\n                        <IcShorting />\n                     </div>\n                  </div>\n                  <div className=\"table-cell p-4 pt-0  pb-6 text-xs leading-custom4 font-medium text-neutral4\">\n                     <div className=\"group flex items-center justify-end space-x-1 cursor-pointer\">\n                        <div>Price</div>\n                        <IcShorting />\n                     </div>\n                  </div>\n                  <div className=\"table-cell p-4 pt-0 pr-0 pb-6 text-xs leading-custom4 font-medium text-neutral4 text-right\">\n                     <div className=\"group flex items-center justify-end space-x-1 cursor-pointer\">\n                        <div>24h %</div>\n                        <IcShorting />\n                     </div>\n                  </div>\n               </div>\n               {\n                  isLoading ? <>\n                     <div className=\"\">Loading</div>\n                  </> : combineMarkets?.length > 0 ? combineMarkets.filter(e => Object.keys(e)\n                     ?.reduce((acc, curr) => acc || e[curr]?.toString()?.toLowerCase()\n                        ?.match(searchMarket?.toLowerCase())\n                        ?.includes(searchMarket?.toLowerCase()), false))?.map(({ id, name, icon_url, last, price_change_percent }, index) => (\n                           <div className=\"table-row cursor-pointer\" key={index} onClick={() => handleStep({ id, name, icon_url, last, price_change_percent }, 2)}>\n                              <div className=\"table-cell p-4 pl-0 text-xs font-medium align-middle border-t border-neutral6 dark:border-neutral3\">\n                                 <div className=\"group inline-flex items-center\">\n                                    <button\n                                       onClick={e => {\n                                          e.stopPropagation();\n                                          // handleAddToFavorite(market)\n                                       }}\n                                       type=\"button\"\n                                       className=\"w-4 h-4 mr-2 group\"\n                                    >\n                                       <StarIcon className=\"w-4 h-4 stroke-neutral4 group-hover:stroke-yellow-500 transition-all duration-200\" />\n                                    </button>\n                                    <div className=\"text-neutral4\">{index + 1}</div>\n                                 </div>\n                              </div>\n                              <div className=\"group table-cell p-4 font-medium align-middle border-t border-neutral6 dark:border-neutral3\">\n                                 <div className=\"flex items-center space-x-3\">\n                                    <div className=\"shrink-0 w-8\">\n                                       <img className=\"w-full\" src={icon_url} alt={name} style={{\n                                          clipPath: 'polygon(50% 0, 5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%)',\n                                       }} />\n                                    </div>\n                                    <div className=\"flex items-center space-x-1.5\">\n                                       <div className=\"group-hover:text-primary1 transition-colors duration-300\">{name}</div>\n                                       <div className=\"font-normal text-neutral4 uppercase\">{id}</div>\n                                    </div>\n                                 </div>\n                              </div>\n                              <div className=\"table-cell p-4 font-medium align-middle border-t border-neutral6 dark:border-neutral3 text-right\">\n                                 {Decimal.format(last, 0, ',')}\n                              </div>\n                              <div className=\"table-cell p-4 pr-0 font-medium align-middle border-t border-neutral6 dark:border-neutral3 text-right\">\n                                 <div className={`${price_change_percent.includes('-') ? 'text-primary4' : 'text-primary5'}`}>{price_change_percent}</div>\n                              </div>\n                           </div>\n                        )) : (\n                     <div className=\"\">Null</div>\n                  )\n               }\n            </div>\n         </>\n      )\n   }, [combineMarkets]);\n\n   const renderEnterAmount = useMemo(() => {\n      return (\n         <>\n            <div className=\"flex items-center justify-between mb-16\">\n               <button onClick={() => setStepActive(1)} type=\"button\" className=\"group flex items-center text-2xl font-semibold leading-custom2 tracking-custom1\">\n                  <svg className=\"w-3.5 h-3.5 mr-4 fill-neutral4 group-hover:-translate-x-1 transition-all duration-300\">\n                     <use xlinkHref=\"#icon-arrow-prev\"></use>\n                  </svg>\n                  Enter amount\n               </button>\n               <div className=\"flex items-center text-base font-medium\">\n                  Selling {coinActive?.name || ''}\n                  <img src={coinActive?.icon_url} className=\"w-6 ml-3\" alt={coinActive?.name} style={{\n                     clipPath: 'polygon(50% 0, 5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%)',\n                  }} />\n               </div>\n            </div>\n            <div>\n               <div className=\"flex justify-center items-center space-x-2\">\n                  <div className=\"relative\">\n                     <div className=\"min-w-72 max-w-4xl min-h-24 pr-1.25 opacity-0 font-dm font-bold text-8xl tracking-custom text-right\">2,000,000</div>\n                     <NumericFormat value=\"250000\" allowLeadingZeros thousandSeparator=\",\" type=\"text\" className=\"absolute text-center top-0 left-0 w-full h-full border-none bg-none shadow-none bg-transparent appearance-none outline-none font-dm font-bold text-8xl tracking-custom text-right\" />\n                  </div>\n                  <div className=\"relative top-2 text-3.5xl leading-tight tracking-custom1 font-dm font-bold\">{coinActive?.id?.toUpperCase()}</div>\n               </div>\n               <div className=\"mb-3 text-center text-base font-medium flex items-center justify-center space-x-2\">\n                  <div className=\"text-neutral4\">You will get</div>\n                  <div>1.345</div>\n                  <div className=\"text-neutral4\">USD</div>\n               </div>\n               <div className=\"text-center mt-12\">\n                  <Button\n                     text=\"Sell\"\n                     className=\"!min-w-184\"\n                     onClick={() => setStepActive(3)}\n                  />\n               </div>\n            </div>\n         </>\n      )\n   }, [coinActive]);\n\n   const renderConfirmOrder = useMemo(() => {\n      return (\n         <>\n            <div className=\"flex items-center justify-between mb-16\">\n               <button onClick={() => setStepActive(2)} type=\"button\" className=\"group flex items-center text-2xl font-semibold leading-custom2 tracking-custom1\">\n                  <svg className=\"w-3.5 h-3.5 mr-4 fill-neutral4 group-hover:-translate-x-1 transition-all duration-300\">\n                     <use xlinkHref=\"#icon-arrow-prev\"></use>\n                  </svg>\n                  Confirm order\n               </button>\n               <div className=\"flex items-center text-base font-medium\">\n                  Buying {coinActive?.name || ''}\n                  <img src={coinActive?.icon_url} className=\"w-6 ml-3\" alt={coinActive?.name} style={{\n                     clipPath: 'polygon(50% 0, 5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%)',\n                  }} />\n               </div>\n            </div>\n            <div className=\"space-y-12\">\n               <div className=\"flex justify-between py-6 px-9 rounded-2xl bg-neutral7 dark:bg-neutral2\">\n                  <div className=\"flex space-x-2.5\">\n                     <div className=\"flex justify-center items-center shrink-0 w-10 h-10 rounded-full bg-primary3\">\n                        <svg className=\"w-5 h-5 fill-neutral8\">\n                           <use xlinkHref=\"#icon-wallet\"></use>\n                        </svg>\n                     </div>\n                     <div>\n                        <div className=\"text-xs text-neutral4 leading-custom4\">\n                           Spend\n                        </div>\n                        <div className=\"font-medium\">\n                           200,000\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"flex space-x-2.5\">\n                     <div className=\"flex justify-center items-center shrink-0 w-10 h-10 rounded-full bg-primary5\">\n                        <svg className=\"w-5 h-5 fill-neutral8\">\n                           <use xlinkHref=\"#icon-wallet\"></use>\n                        </svg>\n                     </div>\n                     <div>\n                        <div className=\"text-xs text-neutral4 leading-custom4\">\n                           Get\n                        </div>\n                        <div className=\"font-medium\">\n                           0.001499 BTC\n                        </div>\n                     </div>\n                  </div>\n                  <div className=\"flex space-x-2.5\">\n                     <div className=\"flex justify-center items-center shrink-0 w-10 h-10 rounded-full bg-neutral1\">\n                        <svg className=\"w-5 h-5 fill-neutral8\">\n                           <use xlinkHref=\"#icon-cloud\"></use>\n                        </svg>\n                     </div>\n                     <div>\n                        <div className=\"text-xs text-neutral4 leading-custom4\">\n                           For\n                        </div>\n                        <div className=\"font-medium\">\n                           Digiasset\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"text-base\">You are about to buy 0.001499 BTC from Digiasset</div>\n               <div className=\"space-y-3\">\n                  <div className=\"flex justify-between pb-3 border-b border-neutral6 text-base font-medium dark:border-neutral3\">\n                     <div>0.001499</div>\n                     <div className=\"uppercase\">BTC</div>\n                  </div>\n                  <div className=\"flex justify-between\">\n                     <div className=\"text-neutral4\">Service fee</div>\n                     <div className=\"text-base font-medium uppercase\">0.000 BTC</div>\n                  </div>\n                  <div className=\"flex justify-between\">\n                     <div className=\"text-neutral4\">You will pay</div>\n                     <div className=\"text-base font-medium uppercase\">200,000 IDR</div>\n                  </div>\n               </div>\n               <div className=\"flex justify-between mt-12\">\n                  <Button\n                     width=\"noFull\"\n                     text=\"Cancel\"\n                     variant=\"outline\"\n                     onClick={() => setStepActive(1)}\n                  />\n                  <Button\n                     width=\"noFull\"\n                     text=\"I understand, continue\"\n                     onClick={handleSetShowModalSuccessPurchased}\n                  />\n               </div>\n            </div>\n         </>\n      )\n   }, [coinActive]);\n\n   return (\n      <>\n         <div>\n            <div className=\"py-10\">\n               <div className=\"flex items-center w-full max-w-7xl my-0 mx-auto px-6 md:px-10 lg:px-20\">\n                  <div className=\"mr-auto text-5xl font-dm font-bold tracking-custom leading-custom1\">\n                     Sell crypto\n                  </div>\n                  <div className=\"flex items-center text-xs text-neutral4 font-medium leading-custom1\">\n                     <div>\n                        How to buy crypto on Digiasset\n                     </div>\n                     <Link to=\"/\" className=\"flex items-center group\">\n                        <div className=\"ml-2 text-neutral2 dark:text-neutral6 group-hover:text-primary1 transition-all duration-300\">\n                           Learn now\n                        </div>\n                        <div className=\"w-5 h-5 flex items-center justify-center\">\n                           <ICChevronRight className=\"group-hover:fill-primary1\" />\n                        </div>\n                     </Link>\n                  </div>\n               </div>\n            </div>\n            <div className=\"py-20 pb-34 bg-shade5 dark:bg-none dark:shadow-body dark:bg-neutral1\">\n               <div className=\"flex w-full max-w-7xl my-0 mx-auto px-6 md:px-10 lg:px-20\">\n                  <div className=\"shrink-0 mr-auto w-54 space-y-6\">\n                     <div className={`relative flex items-center space-x-4 h-12 px-2 rounded-3xl font-dm font-bold leading-custom3 transition-all duration-300 after:absolute after:content-[''] after:top-full after:left-5.75 after:h-6 after:border-l-2 after:border-dashed after:border-neutral5 ${(stepActive === 2 || stepActive === 3) && 'bg-neutral8 dark:bg-neutral2 dark:after:border-neutral4 shadow-step'}`}>\n                        <div className={`relative flex items-center justify-center w-8 h-8 rounded-full border-2 border-primary5 ${(stepActive === 2 || stepActive === 3) && 'bidding__number'} after:absolute after:content-[''] after:top-0 after:left-0 after:w-full after:h-full after:rounded-full after:transition-opacity after:duration-200 transition-all duration-300`}>1</div>\n                        <div>Select crypto</div>\n                     </div>\n                     <div className={`relative flex items-center space-x-4 h-12 px-2 rounded-3xl font-dm font-bold leading-custom3 transition-all duration-300 after:absolute after:content-[''] after:top-full after:left-5.75 after:h-6 after:border-l-2 after:border-dashed after:border-neutral5 ${(stepActive === 1) && 'text-neutral4'} ${(stepActive === 3) && 'bg-neutral8 dark:bg-neutral2 dark:after:border-neutral4 shadow-step'}`}>\n                        <div className={`relative flex items-center justify-center w-8 h-8 rounded-full border-2 ${(stepActive === 2 || stepActive === 3) ? 'border-primary5' : 'border-neutral6 dark:border-neutral4'} ${(stepActive === 3) && 'bidding__number'} after:absolute after:content-[''] after:top-0 after:left-0 after:w-full after:h-full after:rounded-full after:transition-opacity after:duration-200 transition-all duration-300`}>2</div>\n                        <div>Enter amount</div>\n                     </div>\n                     <div className={`relative flex items-center space-x-4 h-12 px-2 rounded-3xl font-dm font-bold ${stepActive !== 3 && 'text-neutral4'} leading-custom3 transition-all duration-300`}>\n                        <div className={`relative flex items-center justify-center w-8 h-8 rounded-full border-2 ${stepActive === 3 ? 'border-primary5' : 'border-neutral6 dark:border-neutral4'} transition-all duration-300`}>4</div>\n                        <div>Confirm order</div>\n                     </div>\n                  </div>\n                  <div className=\"w-736 p-10 shadow-card2 rounded-2xl bg-neutral8 dark:bg-shade1\">\n                     {\n                        stepActive === 1 ? renderCoin :\n                           stepActive === 2 ? renderEnterAmount :\n                              renderConfirmOrder\n                     }\n                  </div>\n               </div>\n            </div>\n         </div>\n         <Portal\n            show={showModalSuccessPurchased}\n            close={handleSetShowModalSuccessPurchased}\n         >\n            <div className=\"mt-10 space-y-8\">\n               <div className=\"text-5xl text-center font-dm font-bold leading-custom1 tracking-custom\">Yay! 🎉</div>\n               <div className=\"max-w-71.25 mx-auto text-center text-base font-medium leading-normal\">\n                  You successfully purchased <span className=\"text-primary5\">0.020202 BTC</span>  from Digiasset\n               </div>\n               <div className=\"flex flex-wrap p-6 rounded-xl border border-neutral6\">\n                  <div className=\"mr-auto space-y-2.5\">\n                     <div className=\"text-neutral4\">Status</div>\n                     <div className=\"font-medium text-primary5\">Completed</div>\n                  </div>\n                  <div className=\"space-y-2.5\">\n                     <div className=\"text-neutral4\">Transaction ID</div>\n                     <div className=\"font-medium\">0msx836930...87r398</div>\n                  </div>\n               </div>\n               <div className=\"flex space-x-4\">\n                  <Button\n                     text=\"Trade\"\n                     onClick={() => push(`trading/${coinActive?.id || 'btcidr'}`)}\n                     variant=\"outline\"\n                  />\n                  <Button\n                     text=\"Wallets\"\n                     onClick={() => push('/wallets')}\n                  />\n               </div>\n            </div>\n         </Portal>\n      </>\n   );\n});\n\nconst mapStateToProps = (state: RootState): Props => ({\n   userData: selectUserInfo(state),\n   isLoggedIn: selectUserLoggedIn(state),\n   isLoading: selectMarketsLoading(state),\n});\n\nexport const SellCrypto = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps)\n)(SellCryptoFC) as FunctionComponent;\n","import React from 'react';\nimport {\n   TableFinance,\n   TutorialAlt\n} from 'components';\n\nexport const Activity = () => {\n   return (\n      <div className=\"py-8 bg-neutral7 dark:bg-neutral1\">\n         <div className=\"w-full max-w-7xl mx-auto px-8 md:px-10 lg2:px-20\">\n            <div className=\"p-0 lg:p-6 lg2:p-10 rounded-lg bg-transparent lg:bg-neutral8 dark:lg:bg-shade1\">\n               <TableFinance title=\"Activity\" />\n            </div>\n            <div className=\"mt-14 lg:mt-4 p-0 lg:p-8 rounded-lg bg-none lg:bg-neutral8 dark:lg:bg-shade1\">\n               <TutorialAlt />\n            </div>\n         </div>\n      </div>\n   );\n};\n","import React, { FunctionComponent, useState } from 'react';\nimport { Button, Nav, PriceChart3, Skeleton, Image, Badge } from 'components';\nimport { IcEmty, IcShorting, illusMarket, illusMarket2 } from 'assets';\nimport { useMarket, useNewsFetch } from 'hooks';\nimport { localeDate, renderCurrencyIcon } from 'helpers';\nimport { IntlProps } from 'index';\nimport { compose } from 'redux';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\n\nconst rows = 3;\ntype Props = IntlProps;\n\nconst MarketFC = ({ intl }: Props) => {\n   const {\n      isLoading,\n      marketsData,\n      otherMarkets,\n      currentBidUnitsList,\n      currentBidUnit,\n      setCurrentBidUnit,\n      handleRedirectToTrading,\n      handleToSetFavorites\n   } = useMarket();\n   // const [tabMarket, setTabMarket] = useState<number>(0);\n   const {\n      newsLoadig,\n      news\n   } = useNewsFetch();\n   const [more, setMore] = useState<number>(rows);\n\n   const translate = (id: string) => intl.formatMessage({ id });\n\n   return (\n      <>\n         <div className=\"relative pt-16 md:pt-[156px] md:pb-28 min-h-auto md:min-h-[692px] bg-secondary5 dark:bg-shade1\">\n            <div className=\"w-full max-w-7xl mx-auto px-8 md:px-10 lg:px-20\">\n               <div className=\"relative z-3 max-w-[545px] mb-[143px]\">\n                  <div className=\"mb-4 md:mb-8 text-4.5xl leading-12 md:text-64 tracking-custom font-dm font-bold\">\n                     Today’s Cryptocurrency prices\n                  </div>\n                  <div className=\"text-base md:text-2xl leading-custom2 tracking-custom1 text-neutral3 dark:text-neutral5\">\n                     The global crypto market cap is\n                     <strong className=\"font-semibold\">$1.86T</strong>\n                  </div>\n               </div>\n               <div className=\"static md:absolute top-0 right-[calc(50%-820px)] lg2:right-[calc(50%-760px)] w-auto md:w-[780px] -mr-17 mb-6 -ml-7.5 md:m-0 pointer-events-none\">\n                  <img className=\"w-full\" srcSet={`${illusMarket2} 2x`} src={illusMarket} alt=\"Card\" />\n               </div>\n            </div>\n         </div>\n         <div className=\"relative -mt-[137px] mb-[72px]\">\n            <div className=\"w-full max-w-7xl mx-auto px-8 md:px-10 lg:px-20\">\n               <div className=\"rounded-3xl shadow-card2 bg-neutral8 dark:bg-shade1 border border-neutral7 dark:border-neutral2 -mx-4 mb-8 md:m-0\">\n                  <div className=\"flex space-x-4.5\">\n                     {isLoading ? (\n                        <>\n                           <Skeleton className=\"col-span-4 sm:col-span-2 lg:col-span-1\" height={87.99} isWithFull rounded=\"2xl\" />\n                           <Skeleton className=\"col-span-4 sm:col-span-2 lg:col-span-1\" height={87.99} isWithFull rounded=\"2xl\" />\n                           <Skeleton className=\"col-span-4 sm:col-span-2 lg:col-span-1\" height={87.99} isWithFull rounded=\"2xl\" />\n                        </>\n                     ) : otherMarkets?.length ? otherMarkets?.slice(0, 3)?.map(market => {\n                        const klinesData: number[] = market?.kline;\n                        let labels: number[], data: number[];\n                        labels = klinesData.map(e => e[0]);\n                        data = klinesData.map(e => e[2]);\n                        return (\n                           <div\n                              key={market?.id}\n                              className=\"group flex w-1/3 p-6\"\n                              onClick={() => handleRedirectToTrading(market?.id)}\n                           >\n                              <div className=\"shrink-0 w-10 mr-4\">\n                                 <Image\n                                    src={renderCurrencyIcon(market.base_unit)}\n                                    alt={market.name}\n                                    title={market.name}\n                                    width={40}\n                                    height={40}\n                                 />\n                              </div>\n                              <div className=\"space-y-1\">\n                                 <div className=\"flex items-center space-x-3\">\n                                    <div className=\"text-xs font-semibold text-neutral4 leading-custom4\">\n                                       {market?.name}\n                                    </div>\n                                    <Badge\n                                       variant={market?.price_change_percent?.includes('+') ? 'green' : 'orange'}\n                                       text={market?.price_change_percent}\n                                       rounded=\"3xl\"\n                                    />\n                                 </div>\n                                 <div className=\"text-2xl leading-custom2 font-semibold tracking-custom1 group-hover:text-primary1 transition-colors duration-300\">\n                                    {market?.last}\n                                 </div>\n                                 <div>{market?.volume}</div>\n                              </div>\n                              <div className=\"w-25 ml-4 hidden lg2:block\">\n                                 <PriceChart3\n                                    id={market?.id}\n                                    theme={market?.price_change_percent.includes('+') ? 'positive' : 'negative'}\n                                    labels={labels}\n                                    data={data}\n                                 />\n                              </div>\n                           </div>\n                        )\n                     }) : (\n                        <div className=\"\">\n                           Market not found\n                        </div>\n                     )}\n                  </div>\n                  <div className=\"block md:flex justify-between items-center py-8.5 px-8 border-t border-neutral6 dark:border-neutral2\">\n                     {/* <div className=\"flex space-x-3\">\n                        <Nav\n                           title=\"Cryptocurrencies\"\n                           isActive={tabMarket === 0}\n                           onClick={() => setTabMarket(0)}\n                        />\n                        <Nav\n                           title=\"DeFi\"\n                           isActive={tabMarket === 1}\n                           onClick={() => setTabMarket(1)}\n                        />\n                        <Nav\n                           title=\"Innovation\"\n                           isActive={tabMarket === 2}\n                           onClick={() => setTabMarket(2)}\n                        />\n                        <Nav\n                           title=\"POS\"\n                           isActive={tabMarket === 3}\n                           onClick={() => setTabMarket(3)}\n                        />\n                        <Nav\n                           title=\"NFT\"\n                           isActive={tabMarket === 4}\n                           onClick={() => setTabMarket(4)}\n                        />\n                        <Nav\n                           title=\"POW\"\n                           isActive={tabMarket === 5}\n                           onClick={() => setTabMarket(5)}\n                        />\n                     </div> */}\n                     <div className=\"flex space-x-3\">\n                        {currentBidUnitsList.map((e, index) => (\n                           <Nav\n                              key={index}\n                              title={e ? e.toUpperCase() : translate('page.body.marketsTable.filter.all')}\n                              onClick={() => setCurrentBidUnit(e)}\n                              isActive={e === currentBidUnit}\n                           />\n                        ))}\n                     </div>\n                     <Button\n                        text=\"Trade\"\n                        variant=\"outline\"\n                        size=\"normal\"\n                        width=\"noFull\"\n                        onClick={() => handleRedirectToTrading(marketsData[0]?.id)}\n                     />\n                  </div>\n               </div>\n            </div>\n         </div>\n         <div className=\"relative mb-16 md:mb-28 lg2:mb-34\">\n            <div className=\"w-full max-w-7xl mx-auto px-8 md:px-10 lg:px-20\">\n               <div className=\"overflow-x-auto\">\n                  <table className=\"w-full table-auto\">\n                     <thead>\n                        <tr>\n                           <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                              <div className=\"flex items-center space-x-1 cursor-pointer\">\n                                 <div>#</div>\n                                 <IcShorting className=\"fill-neutral4\" />\n                              </div>\n                           </th>\n                           <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                              <div className=\"flex items-center space-x-1 cursor-pointer\">\n                                 <div>Name</div>\n                                 <IcShorting className=\"fill-neutral4\" />\n                              </div>\n                           </th>\n                           <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                              <div className=\"flex items-center space-x-1 cursor-pointer justify-end\">\n                                 <div>Price</div>\n                                 <IcShorting className=\"fill-neutral4\" />\n                              </div>\n                           </th>\n                           <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4 text-right\">\n                              <div>24h %</div>\n                           </th>\n                           <th className=\"hidden px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4 text-right\">\n                              <div>7d %</div>\n                           </th>\n                           <th className=\"hidden px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                              <div className=\"flex items-center space-x-1 cursor-pointer justify-end\">\n                                 <div>Marketcap</div>\n                                 <svg className=\"w-5 h-5 fill-neutral4\">\n                                    <use xlinkHref=\"#icon-coin\" />\n                                 </svg>\n                              </div>\n                           </th>\n                           <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                              <div className=\"flex items-center space-x-1 cursor-pointer justify-end\">\n                                 <div>Volume (24h)</div>\n                                 <svg className=\"w-5 h-5 fill-neutral4\">\n                                    <use xlinkHref=\"#icon-chart\" />\n                                 </svg>\n                              </div>\n                           </th>\n                           <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4 text-right\">\n                              <div>Chart</div>\n                           </th>\n                        </tr>\n                     </thead>\n                     <tbody>\n                        {isLoading ? (\n                           <>\n                              <tr>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                              </tr>\n                              <tr>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                              </tr>\n                              <tr>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                                 <td className=\"p-4\"><Skeleton height={20} isWithFull /></td>\n                              </tr>\n                           </>\n                        ) : marketsData?.length ? marketsData?.map(market => {\n                           const klinesData: number[] = market?.kline;\n                           let labels: number[], data: number[];\n                           labels = klinesData.map(e => e[0]);\n                           data = klinesData.map(e => e[2]);\n                           return (\n                              <tr key={market?.id} style={{ transition: 'background .2s' }} className=\"group relative\">\n                                 <td\n                                    onClick={() => handleToSetFavorites(String(market?.id))}\n                                    className=\"rounded-l-xl text-neutral4 align-middle font-semibold text-xs p-4 leading-custom4 group-hover:bg-neutral7 dark:group-hover:bg-neutral2\"\n                                 >\n                                    <div className=\"flex space-x-2 items-center\">\n                                       <svg className={`w-4 h-4 ${market?.isFav ? 'fill-secondary3' : 'fill-neutral4 hover:fill-secondary3'} transition-all duration-300`}>\n                                          <use xlinkHref={`#icon-star${market?.isFav ? '' : '-outline'}`}></use>\n                                       </svg>\n                                       <div>{market?.no}</div>\n                                    </div>\n                                 </td>\n                                 <td className=\"p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2\">\n                                    <div className=\"flex space-x-3 items-center\">\n                                       <div className=\"shrink-0 w-8\">\n                                          <img\n                                             src={renderCurrencyIcon(market?.curency_data?.id, market?.curency_data?.icon_url)}\n                                             className={`w-full ${renderCurrencyIcon(market?.curency_data?.id, market?.curency_data?.icon_url)?.includes('http') ? 'object-cover bg-neutral8 polygon' : ''}`}\n                                             alt=\"\"\n                                          />\n                                       </div>\n                                       <div className=\"flex items-center space-x-1\">\n                                          <div>{market?.curency_data?.name}</div>\n                                          <div className=\"font-normal text-neutral4 uppercase\">{market?.quote_unit}</div>\n                                       </div>\n                                    </div>\n                                 </td>\n                                 <td className=\"p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 text-right\">\n                                    <div>{market?.last}</div>\n                                 </td>\n                                 <td className=\"p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 text-right\">\n                                    <div className={market?.price_change_percent?.includes('+') ? 'text-primary5 dark:text-chart1' : 'text-primary4'}>\n                                       {market?.price_change_percent}\n                                    </div>\n                                 </td>\n                                 <td className=\"hidden p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 text-right\">\n                                    <div className=\"text-primary4\">-2.02%</div>\n                                 </td>\n                                 <td className=\"hidden p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 text-right\">\n                                    <div>$328,564,656,654</div>\n                                 </td>\n                                 <td className=\"p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 text-right\">\n                                    <div>{market?.volume}</div>\n                                 </td>\n                                 <td className=\"rounded-r-xl p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 text-right\">\n                                    <div className=\"w-25 -my-1.25 ml-auto group-hover:hidden\">\n                                       <PriceChart3\n                                          id={market?.id}\n                                          theme={market?.price_change_percent.includes('+') ? 'positive' : 'negative'}\n                                          labels={labels}\n                                          data={data}\n                                       />\n                                    </div>\n                                    <div className=\"w-24 ml-auto hidden group-hover:block\">\n                                       <Button\n                                          text=\"Buy\"\n                                          size=\"normal\"\n                                          onClick={() => handleRedirectToTrading(market?.id)}\n                                       />\n                                    </div>\n                                 </td>\n                              </tr>\n                           )\n                        }) : (\n                           <tr>\n                              <td colSpan={8}>\n                                 <div className=\"min-h-c-screen-462 flex flex-col items-center justify-center space-y-3\">\n                                    <IcEmty />\n                                    <div className=\"text-xs font-semibold text-neutral4\">\n                                       {translate('noResultFound')}\n                                    </div>\n                                 </div>\n                              </td>\n                           </tr>\n                        )}\n                     </tbody>\n                  </table>\n               </div>\n            </div>\n         </div>\n         <div className=\"relative mb-16 md:mb-28 lg2:mb-34\">\n            <div className=\"w-full max-w-7xl mx-auto px-8 md:px-10 lg:px-20\">\n               <div className=\"max-w-[455px] mx-auto mb-12 lg2:mb-16 text-center\">\n                  <div className=\"mb-5 text-5xl leading-custom1 tracking-custom font-dm font-bold\">\n                     Learn and earn\n                  </div>\n                  <div className=\"text-base text-neutral3 dark:text-neutral5\">\n                     Stacks is a production-ready library of stackable content blocks built in React Native\n                  </div>\n               </div>\n               <div className=\"block md:flex flex-wrap md:-mx-4 md:-mt-4 space-y-8 md:space-y-0\">\n                  {newsLoadig ? (\n                     <>\n                        <div className=\"p-4 w-full md:w-1/2 lg:w-1/3 flex flex-col items-start transition-colors duration-300\">\n                           <Skeleton\n                              height={200}\n                              isWithFull\n                              rounded=\"2xl\"\n                              className=\"mb-8 md:mb-12\"\n                           />\n                           <Skeleton height={26} className=\"mb-4\" width={'50%'} />\n                           <Skeleton height={30} width={'80%'} />\n                        </div>\n                        <div className=\"p-4 w-full md:w-1/2 lg:w-1/3 flex flex-col items-start transition-colors duration-300\">\n                           <Skeleton\n                              height={200}\n                              isWithFull\n                              rounded=\"2xl\"\n                              className=\"mb-8 md:mb-12\"\n                           />\n                           <Skeleton height={26} className=\"mb-4\" width={'50%'} />\n                           <Skeleton height={30} width={'80%'} />\n                        </div>\n                        <div className=\"p-4 w-full md:w-1/2 lg:w-1/3 flex flex-col items-start transition-colors duration-300\">\n                           <Skeleton\n                              height={200}\n                              isWithFull\n                              rounded=\"2xl\"\n                              className=\"mb-8 md:mb-12\"\n                           />\n                           <Skeleton height={26} className=\"mb-4\" width={'50%'} />\n                           <Skeleton height={30} width={'80%'} />\n                        </div>\n                     </>\n                  ) : news?.slice(0, more).map(e => (\n                     <div key={e.uuid} className=\"relative group p-4 w-full md:w-1/2 lg:w-1/3 flex flex-col items-start transition-colors duration-300\">\n                        <div className=\"relative overflow-hidden w-full mb-8 md:mb-12 rounded-xl before:content-[''] before:pb-[75%] lg2:before:pb-[57%] before:block\">\n                           <Image\n                              className=\"absolute top-0 left-0 w-full h-full object-cover group-hover:scale-125 transition-transform duration-1000\"\n                              src={e.feature_image}\n                              alt={e.title}\n                              title={e.title}\n                              height={200.63}\n                              width={252}\n                              classNameParent=\"h-full w-full\"\n                           />\n                           {false && (\n                              <button className=\"group flex justify-center items-center w-12 h-12 absolute top-1/2 left-1/2 z-3 rounded-full bg-neutral8 shadow-play -translate-x-1/2 -translate-y-1/2\">\n                                 <svg className=\"w-3 h-3 fill-neutral4 group-hover:fill-primary1 group-hover:scale-125 transition-all duration-300\">\n                                    <use xlinkHref=\"#icon-play\" />\n                                 </svg>\n                              </button>\n                           )}\n                        </div>\n                        <Badge\n                           text={e.meta_title}\n                           className=\"mb-4 truncate max-w-full\"\n                           variant={e.slug.split('-').length > 4 ? 'green' : e.slug.split('-').length < 8 ? 'ungu' : e.slug.split('-').length > 12 ? 'primary' : 'orange'}\n                        />\n                        <div className=\"mb-8 md:mb-12 text-2xl leading-custom2 font-semibold tracking-custom1 group-hover:text-primary1 transition-all duration-300\">\n                           {e.title}\n                        </div>\n                        <div className=\"flex flex-wrap justify-between w-full mt-auto font-medium text-neutral4\">\n                           <div className=\"flex space-x-3 items-center mr-4\">\n                              <div className=\"shrink-0 w-6 h-6 rounded-full overflow-hidden bg-primary5\" />\n                              <div>Admin</div>\n                           </div>\n                           <div>{localeDate(e.created_at, 'shortDate')}</div>\n                        </div>\n                        <div className=\"mt-0 md:mt-12 bg-none rounded-md md:bg-neutral6 dark:md:bg-neutral3 h-0.5 w-full\" />\n                        <a\n                           href={e.url}\n                           rel=\"noopener noreferrer\"\n                           className=\"absolute inset-0\"\n                           target=\"_blank\"\n                        />\n                     </div>\n                  ))}\n               </div>\n            </div>\n            {more < news?.length && (\n               <div className=\"mt-9 md:mt-12 text-center\">\n                  <Button\n                     text=\"Load more\"\n                     variant=\"outline\"\n                     size=\"normal\"\n                     icLeft={\n                        <div className=\"mr-4 ml-[5px] scale-[0.8] w-[1em] h-[1em] rounded-full text-[4px] -indent-[9999em] animate-loader dark:animate-loader-white\" />\n                     }\n                     onClick={() => setMore(more + rows)}\n                     width=\"noFull\"\n                  />\n               </div>\n            )}\n         </div>\n      </>\n   )\n}\n\nexport const Market = compose(\n   injectIntl,\n   injectIntl,\n   connect(null, null)\n)(MarketFC) as FunctionComponent;\n","import React, { memo, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { Button, Nav } from 'components';\nimport {\n   illusDiscover,\n   illusReleases,\n   illusReleases2,\n   illusReleases21,\n   illusReleases22,\n   illusReleases31,\n   illusReleases32,\n} from 'assets';\n\nexport const LearnCrypto = memo(() => {\n   const [learnCategory, setLearnCategory] = useState<number>(0);\n\n   return (\n      <>\n         <div className=\"relative pt-16 md:pt-20 mb-16 md:mb-28 lg2:mb-34\">\n            <div className=\"w-full max-w-7xl mx-auto px-8 md:px-10 lg:px-20\">\n               <div className=\"max-w-2.5xl mx-auto mb-20 text-center\">\n                  <div className=\"mb-4 text-5xl md:text-64 leading-custom1 md:leading-none tracking-custom font-dm font-bold\">\n                     Blockchain & Crypto\n                  </div>\n                  <div className=\"mb-8 text-base md:text-2xl tracking-custom1 leading-custom2 text-neutral4\">\n                     A Beginner’s Guide to TradingView\n                  </div>\n                  <div className=\"flex justify-center space-x-4\">\n                     <Button\n                        text=\"Learn now\"\n                        width=\"noFull\"\n                     />\n                     <Button\n                        text=\"Video tutorial\"\n                        variant=\"outline\"\n                        width=\"noFull\"\n                     />\n                  </div>\n               </div>\n               <div className=\"relative rounded-2xl overflow-hidden\">\n                  <img className=\"w-full\" src={illusDiscover} alt=\"Video\" />\n                  <button className=\"group flex justify-center items-center w-20 h-20 absolute top-1/2 left-1/2 z-3 rounded-full bg-neutral8 shadow-play -translate-x-1/2 -translate-y-1/2\">\n                     <svg className=\"w-6 h-6 fill-neutral4 group-hover:fill-primary1 group-hover:scale-125 transition-all duration-300\">\n                        <use xlinkHref=\"#icon-play\" />\n                     </svg>\n                  </button>\n               </div>\n            </div>\n         </div>\n         <div className=\"relative py-16 md:py-28 lg2:py-34 bg-neutral7 dark:bg-shade1\">\n            <div id=\"releases\" className=\"absolute top-12 inset-x-0\" />\n            <div className=\"w-full max-w-7xl mx-auto px-8 md:px-10 lg:px-20\">\n               <div className=\"block lg:flex mb-12 lg:mb-20\">\n                  <div className=\"w-full lg:w-82 text-xs leading-none mb-5 lg:mb-4 font-bold uppercase text-neutral4\">\n                     Our Blog\n                  </div>\n                  <div className=\"shrink-0 w-full lg:w-500 lg2:w-640 ml-auto\">\n                     <div className=\"mb-5 text-4.5xl md:text-5xl leading-1.2 md:leading-custom1 tracking-custom1 md:tracking-custom font-dm font-bold\">\n                        Latest Releases\n                     </div>\n                     <div className=\"max-w-md-2 mb-16 text-base leading-normal text-neutral3 dark:text-neutral6\">\n                        Stacks is a production-ready library of stackable content blocks built in React Native.\n                     </div>\n                     <div className=\"flex space-x-3\">\n                        <Nav\n                           title=\"Bitcoin\"\n                           isActive={learnCategory === 0}\n                           onClick={() => setLearnCategory(0)}\n                        />\n                        <Nav\n                           title=\"Blockchain\"\n                           isActive={learnCategory === 1}\n                           onClick={() => setLearnCategory(1)}\n                        />\n                        <Nav\n                           title=\"Tutorials\"\n                           isActive={learnCategory === 2}\n                           onClick={() => setLearnCategory(2)}\n                        />\n                     </div>\n                     {/* Let's code nice select mobile */}\n                  </div>\n               </div>\n               <div className=\"space-y-20\">\n                  {\n                     learnCategory === 0 && (\n                        <>\n                           <Link to=\"/learn-crypto\" className=\"relative group block lg:flex flex-row-reverse transition-colors duration-200\">\n                              <div className=\"shrink-0 w-full lg:w-500 lg2:w-640 mb-8 lg:mb-0 ml-auto\">\n                                 <img className=\"w-full object-cover lg:object-none min-h-[240px] lg:min-h-auto rounded-2xl\" srcSet={`${illusReleases2} 2x`} src={illusReleases} alt=\"\" />\n                              </div>\n                              <div className=\"flex flex-col items-start w-auto lg2:w-82 pr-0 lg:pr-32 lg2:pr-0\">\n                                 <div className=\"mb-auto bg-primary4 inline-block pt-2 pb-1.5 px-2 rounded text-xs leading-none font-bold uppercase text-neutral8\">\n                                    New\n                                 </div>\n                                 <div className=\"mt-4 lg:mt-6 mb-2 text-3.5xl leading-tight tracking-custom1 font-dm font-bold group-hover:text-primary1 transition-all duration-300\">\n                                    A Beginner's Guide to TradingView\n                                 </div>\n                                 <div className=\"mb-5 text-base leading-normal text-neutral3 dark:text-neutral5\">\n                                    Ethereum\n                                 </div>\n                                 <div className=\"mb-auto text-neutral4\">\n                                    A fully-featured landing page kit, including design files, and beautiful 3D illustrations editable.\n                                 </div>\n                              </div>\n                              <div className=\"static lg:absolute top-[calc(100%+14px)] left-0 w-6 h-6 mt-4 lg:mt-0 transition-transform duration-300\">\n                                 <svg className=\"w-3.5 h-3.5 fill-neutral4 group-hover:translate-x-4 transition-all duration-1000\">\n                                    <use xlinkHref=\"#icon-arrow-next\" />\n                                 </svg>\n                              </div>\n                           </Link>\n                           <Link to=\"/learn-crypto\" className=\"relative group block lg:flex flex-row-reverse transition-colors duration-200\">\n                              <div className=\"shrink-0 w-full lg:w-500 lg2:w-640 mb-8 lg:mb-0 ml-auto\">\n                                 <img\n                                    className=\"w-full object-cover lg:object-none min-h-[240px] lg:min-h-auto rounded-2xl\"\n                                    srcSet={`${illusReleases22} 2x`}\n                                    src={illusReleases21}\n                                    alt=\"\"\n                                 />\n                              </div>\n                              <div className=\"flex flex-col items-start w-auto lg2:w-82 pr-0 lg:pr-32 lg2:pr-0\">\n                                 <div className=\"mb-auto bg-primary5 inline-block pt-2 pb-1.5 px-2 rounded text-xs leading-none font-bold uppercase text-neutral8\">\n                                    Beginner\n                                 </div>\n                                 <div className=\"mt-4 lg:mt-6 mb-2 text-3.5xl leading-tight tracking-custom1 font-dm font-bold group-hover:text-primary1 transition-all duration-300\">\n                                    What Is Crypto Market Sentiment?\n                                 </div>\n                                 <div className=\"mb-5 text-base leading-normal text-neutral3 dark:text-neutral5\">\n                                    Ethereum\n                                 </div>\n                                 <div className=\"mb-auto text-neutral4\">\n                                    A fully-featured landing page kit, including design files, and beautiful 3D illustrations editable.\n                                 </div>\n                              </div>\n                              <div className=\"static lg:absolute top-[calc(100%+14px)] left-0 w-6 h-6 mt-4 lg:mt-0 transition-transform duration-300\">\n                                 <svg className=\"w-3.5 h-3.5 fill-neutral4 group-hover:translate-x-4 transition-all duration-1000\">\n                                    <use xlinkHref=\"#icon-arrow-next\" />\n                                 </svg>\n                              </div>\n                           </Link>\n                           <Link to=\"/learn-crypto\" className=\"relative group block lg:flex flex-row-reverse transition-colors duration-200\">\n                              <div className=\"shrink-0 w-full lg:w-500 lg2:w-640 mb-8 lg:mb-0 ml-auto\">\n                                 <img\n                                    className=\"w-full object-cover lg:object-none min-h-[240px] lg:min-h-auto rounded-2xl\"\n                                    srcSet={`${illusReleases32} 2x`}\n                                    src={illusReleases31}\n                                    alt=\"\"\n                                 />\n                              </div>\n                              <div className=\"flex flex-col items-start w-auto lg2:w-82 pr-0 lg:pr-32 lg2:pr-0\">\n                                 <div className=\"mb-auto bg-primary4 inline-block pt-2 pb-1.5 px-2 rounded text-xs leading-none font-bold uppercase text-neutral8\">\n                                    New\n                                 </div>\n                                 <div className=\"mt-4 lg:mt-6 mb-2 text-3.5xl leading-tight tracking-custom1 font-dm font-bold group-hover:text-primary1 transition-all duration-300\">\n                                    What Is the Ethereum Hard Fork?\n                                 </div>\n                                 <div className=\"mb-5 text-base leading-normal text-neutral3 dark:text-neutral5\">\n                                    Ethereum\n                                 </div>\n                                 <div className=\"mb-auto text-neutral4\">\n                                    A fully-featured landing page kit, including design files, and beautiful 3D illustrations editable.\n                                 </div>\n                              </div>\n                              <div className=\"static lg:absolute top-[calc(100%+14px)] left-0 w-6 h-6 mt-4 lg:mt-0 transition-transform duration-300\">\n                                 <svg className=\"w-3.5 h-3.5 fill-neutral4 group-hover:translate-x-4 transition-all duration-1000\">\n                                    <use xlinkHref=\"#icon-arrow-next\" />\n                                 </svg>\n                              </div>\n                           </Link>\n                        </>\n                     )\n                  }\n               </div>\n            </div>\n         </div>\n      </>\n   );\n});\n","import React, { FC, FunctionComponent, useState } from 'react';\nimport { connect, MapDispatchToPropsFunction, MapStateToProps } from 'react-redux';\nimport {\n   TradingHeader,\n   TradingOrderList,\n   TradingCenter,\n   // TradingTrade,\n   TradingMarketList,\n   Nav,\n} from 'components';\nimport { Market, RootState, selectCurrentColorTheme, selectCurrentMarket, selectMarkets, selectMarketTickers, selectUserLoggedIn, Ticker } from 'modules';\nimport { compose } from 'redux';\nimport { injectIntl } from 'react-intl';\nimport { RouterProps, withRouter } from 'react-router';\nimport { IntlProps } from 'index';\n\ntype ReduxProps = {\n   isLoggedIn: boolean;\n   currentMarket?: Market;\n   markets: Market[];\n   marketTickers: {\n      [key: string]: Ticker\n   };\n   theme: string;\n}\n\ninterface DispatchProps {\n\n}\n\ntype TradingProps = RouterProps & IntlProps & ReduxProps & DispatchProps;\n\nconst TradingFC: FC<TradingProps> = ({\n   isLoggedIn,\n   currentMarket,\n   markets,\n   marketTickers,\n   intl,\n   theme,\n}) => {\n   const [tab, setTab] = useState(0);\n   const translate = (id: string) => intl.formatMessage({ id });\n\n   return (\n      <div className=\"bg-shade4 dark:bg-neutral1 min-h-[calc(100vh-114px)] lg:min-h-[calc(100vh-88px)] p-4 pb-33 lg:p-1\">\n         <TradingHeader\n            currentMarket={currentMarket}\n            marketTickers={marketTickers}\n            translate={translate}\n         />\n         <div className=\"flex lg:hidden space-x-0 md:space-x-2 lg:space-x-0 my-4 lg:mb-0 justify-between md:justify-start\">\n            <Nav\n               title=\"Chart\"\n               theme={theme === 'dark' ? 'black' : 'grey'}\n               isActive={tab === 0}\n               onClick={() => setTab(0)}\n            />\n            <Nav\n               title=\"Order Books\"\n               theme={theme === 'dark' ? 'black' : 'grey'}\n               isActive={tab === 1}\n               onClick={() => setTab(1)}\n            />\n            <Nav\n               title=\"Trades\"\n               theme={theme === 'dark' ? 'black' : 'grey'}\n               isActive={tab === 2}\n               onClick={() => setTab(2)}\n            />\n         </div>\n         <div className=\"block lg2:flex mt-1\">\n            <TradingOrderList />\n            <TradingCenter />\n            <TradingMarketList translate={translate} />\n         </div>\n         {/* <TradingTrade isLoggedIn={isLoggedIn} /> */}\n      </div>\n   );\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   isLoggedIn: selectUserLoggedIn(state),\n   currentMarket: selectCurrentMarket(state),\n   markets: selectMarkets(state),\n   marketTickers: selectMarketTickers(state),\n   theme: selectCurrentColorTheme(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n\n});\n\nexport const Trading = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps)\n)(TradingFC) as FunctionComponent;\n","import axios from 'axios';\nimport { TradingChartComponent } from '.';\nimport { finexUrl, isFinexEnabled, tradeUrl } from '../../../api/config';\nimport { LibrarySymbolInfo } from '../../../charting_library/datafeed-api';\nimport { buildQueryString, getTimestampPeriod } from '../../../helpers';\nimport {\n    klineArrayToObject,\n    KlineState,\n    klineUpdatePeriod,\n    klineUpdateTimeRange,\n} from '../../../modules';\nimport { Market } from '../../../modules/public/markets';\nimport { periodMinutesToString } from '../../../modules/public/ranger/helpers';\nimport { store } from '../../../store';\n\nexport const print = (...x) => window.console.log.apply(null, ['>>>> TC', ...x]);\nexport interface CurrentKlineSubscription {\n    marketId?: string;\n    periodString?: string;\n}\n\nconst getHistoryApi = (): string => isFinexEnabled() ? finexUrl() : tradeUrl();\n\nconst makeHistoryUrl = (market: string, resolution: number, from: number, to: number) => {\n    const payload = {\n        period: resolution,\n        time_from: getTimestampPeriod(from, resolution),\n        time_to: getTimestampPeriod(to, resolution),\n    };\n    let endPoint = `/public/markets/${market}/k-line`;\n\n    if (payload) {\n        endPoint = `${endPoint}?${buildQueryString(payload)}`;\n    }\n\n    return `${getHistoryApi()}${endPoint}`;\n};\n\nconst resolutionToSeconds = (r: string): number => {\n    const minutes = parseInt(r, 10);\n    if (r === '1D') {\n        return 1440;\n    } else if (r === 'D') {\n        return 4320;\n    } else if (!isNaN(minutes)) {\n        return minutes;\n    } else {\n        return 1;\n    }\n};\n\nconst config = {\n    supports_timescale_marks: true,\n    supports_time: false,\n    supported_resolutions: ['1', '5', '15', '30', '60', '120', '240', '360', '720', 'd', '3d'],\n};\n\nexport const dataFeedObject = (tradingChart: TradingChartComponent, markets: Market[]) => {\n    const dataFeed = {\n        onReady: cb => {\n            setTimeout(() => cb(config), 0);\n        },\n        searchSymbols: (userInput, exchange, symbolType, onResultReadyCallback) => {\n            const symbols = markets.map(m => ({\n                symbol: m.id,\n                full_name: m.name,\n                description: m.name,\n                exchange: 'Crypto Exchange',\n                ticker: m.id,\n                type: 'bitcoin',\n                currency_code: m.quote_unit.toUpperCase(),\n            }));\n            setTimeout(() => onResultReadyCallback(symbols), 0);\n        },\n        resolveSymbol: (symbolName, onSymbolResolvedCallback, onResolveErrorCallback) => {\n            const symbol = markets.find(m => m.id === symbolName || m.name === symbolName);\n\n            if (!symbol) {\n                return setTimeout(() => onResolveErrorCallback('Symbol not found'), 0);\n            }\n\n            const symbolStub = {\n                name: symbol.name,\n                currency_code: symbol.quote_unit.toUpperCase(),\n                description: '',\n                type: 'bitcoin',\n                session: '24x7',\n                timezone: 'Etc/UTC',\n                ticker: symbol.id,\n                minmov: 1,\n                pricescale: Math.pow(10, symbol.price_precision),\n                has_intraday: true,\n                intraday_multipliers: ['1', '5', '15', '30', '60', '120', '240', '360', '720', 'd', '3d'],\n                supported_resolutions: ['1', '5', '15', '30', '60', '120', '240', '360', '720', 'd', '3d'],\n                volume_precision: 8,\n                data_status: 'streaming',\n            };\n\n            return setTimeout(() => onSymbolResolvedCallback(symbolStub), 0);\n        },\n        getTimescaleMarks: async (\n            symbolInfo: LibrarySymbolInfo,\n            from,\n            to,\n            onDataCallback,\n            resolution,\n        ) => {\n            const range = tradingChart.tvWidget!.activeChart().getVisibleRange();\n            const period = tradingChart.tvWidget!.activeChart().resolution();\n            store.dispatch(klineUpdateTimeRange(range));\n            store.dispatch(klineUpdatePeriod(period));\n        },\n        getBars: async (\n            symbolInfo: LibrarySymbolInfo,\n            resolution,\n            from,\n            to,\n            onHistoryCallback,\n            onErrorCallback,\n            firstDataRequest,\n        ) => {\n            const url = makeHistoryUrl(\n                symbolInfo.ticker || symbolInfo.name.toLowerCase(),\n                resolutionToSeconds(resolution),\n                from,\n                to,\n            );\n\n            return axios\n                .get(url)\n                .then(({ data }) => {\n                    if (data.length < 1) {\n                        return onHistoryCallback([], { noData: true });\n                    }\n                    const bars = data.map(klineArrayToObject);\n\n                    return onHistoryCallback(bars, { noData: false });\n                })\n                .catch(e => {\n                    return onHistoryCallback([], { noData: true });\n                });\n        },\n        subscribeBars: (\n            symbolInfo: LibrarySymbolInfo,\n            resolution,\n            onRealtimeCallback,\n            subscribeUID: string,\n            onResetCacheNeededCallback,\n        ) => {\n            dataFeed.onRealtimeCallback = (kline: KlineState) => {\n                if (\n                    kline.last &&\n                    kline.marketId === tradingChart.currentKlineSubscription.marketId &&\n                    kline.period === tradingChart.currentKlineSubscription.periodString\n                ) {\n                    onRealtimeCallback(kline.last);\n                }\n            };\n            const marketId: string = symbolInfo.ticker!;\n            const periodString = periodMinutesToString(resolutionToSeconds(resolution));\n\n            tradingChart.props.subscribeKline(marketId, periodString);\n            tradingChart.currentKlineSubscription = {\n                marketId,\n                periodString,\n            };\n        },\n        unsubscribeBars: (subscribeUID: string) => {\n            const { marketId, periodString } = tradingChart.currentKlineSubscription;\n            if (marketId && periodString) {\n                tradingChart.props.unSubscribeKline(marketId, periodString);\n            }\n            tradingChart.currentKlineSubscription = {};\n        },\n        onRealtimeCallback: (kline: KlineState) => {\n            // window.console.log(`default onRealtimeCallback called with ${JSON.stringify(bar)}`);\n        },\n    };\n\n    return dataFeed;\n};\n","import { DEFAULT_TRADING_VIEW_INTERVAL } from '../../../constants';\nimport {\n    customWidgetOptions,\n    customWidgetParams,\n} from '../../../custom/tradingChartConfig';\n\nexport const widgetParams = {\n    interval: String(DEFAULT_TRADING_VIEW_INTERVAL),\n    containerId: 'tv_chart_container',\n    ...customWidgetParams,\n};\n\nexport const widgetOptions = (colorTheme?: string) => {\n    return ({\n        allow_symbol_change: false,\n        autosize: true,\n        calendar: true,\n        client_id: 'tradingview.com',\n        custom_css_url: '/css/tradingview.css',\n        debug: false,\n        details: true,\n        disabled_features: ['use_localstorage_for_settings', 'header_symbol_search'],\n        enable_publishing: false,\n        enabled_features: ['show_animated_logo'],\n        fullscreen: false,\n        height: 610,\n        hide_side_toolbar: false,\n        hotlist: true,\n        library_path: '/charting_library/',\n        popup_height: '50',\n        popup_width: '000',\n        show_popup_button: true,\n        studies_overrides: {},\n        timeframe: '1D',\n        user_id: 'public_user_id',\n        withdateranges: false,\n\n        ...customWidgetOptions(colorTheme),\n    });\n};\n","import { Timezone } from '../../../charting_library/datafeed-api';\n\n/*\n** TimeZones for Daylight Saving Time (Summer time)\n*/\nconst zonesDST: { [key: string]: Timezone } = {\n    '-780': 'Pacific/Fakaofo',\n    '-765': 'Pacific/Chatham',\n    '-720': 'Pacific/Auckland',\n    '-600': 'Australia/ACT',\n    '-570': 'Australia/Adelaide',\n    '-540': 'Asia/Tokyo',\n    '-480': 'Asia/Shanghai',\n    '-420': 'Asia/Bangkok',\n    '-360': 'Asia/Almaty',\n    '-345': 'Asia/Kathmandu',\n    '-330': 'Asia/Kolkata',\n    '-240': 'Asia/Dubai',\n    '-270': 'Asia/Tehran',\n    '-180': 'Europe/Moscow',\n    '-120': 'Europe/Paris',\n    60: 'Europe/London',\n    180: 'America/Sao_Paulo',\n    240: 'America/New_York',\n    360: 'America/El_Salvador',\n    420: 'America/Los_Angeles',\n    600: 'Pacific/Honolulu',\n};\n\n/*\n** TimeZones for Standart Time (Winter time)\n*/\nconst zonesSTD: { [key: string]: Timezone } = {\n    '-825': 'Pacific/Chatham',\n    '-780': 'Pacific/Auckland',\n    '-660': 'Australia/Brisbane',\n    '-630': 'Australia/Adelaide',\n    '-540': 'Asia/Tokyo',\n    '-480': 'Asia/Shanghai',\n    '-420': 'Asia/Bangkok',\n    '-360': 'Asia/Almaty',\n    '-345': 'Asia/Kathmandu',\n    '-330': 'Asia/Kolkata',\n    '-240': 'Asia/Dubai',\n    '-210': 'Asia/Tehran',\n    '-180': 'Europe/Moscow',\n    '-120': 'Africa/Cairo',\n    '-60': 'Europe/Paris',\n    0: 'Europe/London',\n    120: 'America/Argentina/Buenos_Aires',\n    240: 'America/Caracas',\n    300: 'America/Bogota',\n    360: 'America/El_Salvador',\n    480: 'America/Los_Angeles',\n    600: 'Pacific/Honolulu',\n};\n\nexport const getTradingChartTimezone = (offset: number | string, period: 'DST' | 'STD'): Timezone => {\n    const zone: Timezone = period === 'DST' ? zonesDST[offset] : zonesSTD[offset];\n\n    return zone ? zone : 'Etc/UTC';\n};\n","// tslint:disable\nimport * as React from 'react';\nimport {\n   connect,\n   MapDispatchToPropsFunction,\n   MapStateToProps,\n} from 'react-redux';\nimport {\n   IChartingLibraryWidget,\n   LanguageCode,\n   widget,\n} from '../../../charting_library/charting_library.min';\nimport { stdTimezoneOffset } from '../../../helpers';\nimport {\n   KlineState,\n   klineUpdatePeriod,\n   klineUpdateTimeRange,\n   Market,\n   MarketsState,\n   RootState,\n   selectChartRebuildState,\n   selectCurrentColorTheme,\n   selectCurrentLanguage,\n   selectCurrentMarket,\n   selectKline,\n   selectMarkets,\n   selectMarketTickers,\n   selectMobileDeviceState,\n} from '../../../modules';\nimport {\n   rangerSubscribeKlineMarket,\n   rangerUnsubscribeKlineMarket,\n} from '../../../modules/public/ranger';\nimport { periodStringToMinutes } from '../../../modules/public/ranger/helpers';\nimport {\n   CurrentKlineSubscription,\n   dataFeedObject,\n   print,\n} from './api';\nimport {\n   widgetOptions,\n   widgetParams,\n} from './config';\nimport { getTradingChartTimezone } from './timezones';\n\ninterface ReduxProps {\n   markets: Market[];\n   colorTheme: string;\n   chartRebuild: boolean;\n   currentMarket?: Market;\n   tickers: MarketsState['tickers'];\n   kline: KlineState;\n   lang: string;\n   isMobileDevice: boolean;\n}\n\ninterface DispatchProps {\n   subscribeKline: typeof rangerSubscribeKlineMarket;\n   unSubscribeKline: typeof rangerUnsubscribeKlineMarket;\n   klineUpdateTimeRange: typeof klineUpdateTimeRange;\n   klineUpdatePeriod: typeof klineUpdatePeriod;\n}\n\ntype Props = ReduxProps & DispatchProps;\n\nexport class TradingChartComponent extends React.PureComponent<Props> {\n   public currentKlineSubscription: CurrentKlineSubscription = {};\n   public tvWidget: IChartingLibraryWidget | null = null;\n\n   private datafeed = dataFeedObject(this, this.props.markets);\n\n   public componentWillReceiveProps(next: Props) {\n      if (next.currentMarket && next.colorTheme && next.colorTheme !== this.props.colorTheme) {\n         this.setChart(next.markets, next.currentMarket, next.colorTheme);\n      }\n\n      if (next.currentMarket && (!this.props.currentMarket || next.currentMarket.id !== this.props.currentMarket.id)) {\n         if (this.props.currentMarket && (this.props.currentMarket.id && this.tvWidget)) {\n            this.updateChart(next.currentMarket);\n         } else {\n            this.setChart(next.markets, next.currentMarket, next.colorTheme);\n         }\n      }\n\n      if (next.kline && next.kline !== this.props.kline) {\n         this.datafeed.onRealtimeCallback(next.kline);\n      }\n\n      if (next.chartRebuild !== this.props.chartRebuild) {\n         this.handleRebuildChart();\n      }\n   }\n\n   public componentDidMount() {\n      const {\n         colorTheme,\n         currentMarket,\n         markets,\n      } = this.props;\n\n      if (currentMarket) {\n         this.setChart(markets, currentMarket, colorTheme);\n      }\n   }\n\n   public componentWillUnmount() {\n      if (this.tvWidget) {\n         try {\n            this.tvWidget.remove();\n         } catch (error) {\n            window.console.log(`TradingChart unmount failed: ${error}`);\n         }\n      }\n   }\n\n   public render() {\n      return <div\n         id={widgetParams.containerId}\n         className=\"h-screen\"\n      />;\n   }\n\n   private setChart = (markets: Market[], currentMarket: Market, colorTheme: string) => {\n      const { kline, lang, isMobileDevice } = this.props;\n      this.datafeed = dataFeedObject(this, markets);\n      const currentTimeOffset = new Date().getTimezoneOffset();\n      const clockPeriod = currentTimeOffset === stdTimezoneOffset(new Date()) ? 'STD' : 'DST';\n\n      if (this.props.kline.period) {\n         widgetParams.interval = String(periodStringToMinutes(this.props.kline.period));\n      }\n\n      const disabledFeatures = {\n         disabled_features: isMobileDevice ?\n            [\n               'border_around_the_chart',\n               'chart_property_page_background',\n               'chart_property_page_scales',\n               'chart_property_page_style',\n               'chart_property_page_timezone_sessions',\n               'chart_property_page_trading',\n               'compare_symbol',\n               'control_bar',\n               'countdown',\n               'create_volume_indicator_by_default',\n               'display_market_status',\n               'edit_buttons_in_legend',\n               'go_to_date',\n               'header_chart_type',\n               'header_compare',\n               'header_indicators',\n               'header_saveload',\n               'header_screenshot',\n               'header_symbol_search',\n               'header_undo_redo',\n               'header_widget_dom_node',\n               'hide_last_na_study_output',\n               'hide_left_toolbar_by_default',\n               'left_toolbar',\n               'legend_context_menu',\n               'main_series_scale_menu',\n               'pane_context_menu',\n               'show_chart_property_page',\n               'study_dialog_search_control',\n               'symbol_info',\n               'timeframes_toolbar',\n               'timezone_menu',\n               'volume_force_overlay',\n            ] : [\n               'header_symbol_search',\n               'use_localstorage_for_settings',\n            ]\n      };\n\n      const defaultWidgetOptions = {\n         symbol: currentMarket.id,\n         datafeed: this.datafeed,\n         interval: widgetParams.interval,\n         container_id: widgetParams.containerId,\n         locale: this.languageIncluded(lang) ? lang as LanguageCode : 'en' as LanguageCode,\n         timezone: getTradingChartTimezone(currentTimeOffset, clockPeriod),\n      };\n\n      this.tvWidget = new widget({ ...defaultWidgetOptions, ...widgetOptions(colorTheme), ...disabledFeatures });\n\n      let previousRange = { from: 0, to: 0 };\n      if (kline.range.from !== 0 && kline.range.to !== 0) {\n         previousRange = this.props.kline.range;\n      }\n\n      let previousResolution = '';\n      if (kline.period) {\n         previousResolution = kline.period;\n      }\n\n      this.tvWidget.onChartReady(() => {\n         this.tvWidget!.activeChart().setSymbol(currentMarket.id, () => {\n            print('Symbol set', currentMarket.id);\n         });\n\n         if (previousRange.from !== 0 && previousRange.to !== 0) {\n            this.tvWidget!.activeChart().setVisibleRange(previousRange);\n         }\n\n         if (previousResolution) {\n            this.tvWidget!.activeChart().setResolution(String(periodStringToMinutes(previousResolution)), () => {\n               print('Resolution set', previousResolution);\n            });\n         }\n      });\n   };\n\n   private updateChart = (currentMarket: Market) => {\n      if (this.tvWidget) {\n         this.tvWidget.onChartReady(() => {\n            this.tvWidget!.activeChart().setSymbol(currentMarket.id, () => {\n               print('Symbol set', currentMarket.id);\n            });\n         });\n      }\n   };\n\n   private handleRebuildChart = () => {\n      const {\n         colorTheme,\n         currentMarket,\n         markets,\n      } = this.props;\n\n      if (this.tvWidget && currentMarket) {\n         try {\n            this.tvWidget.remove();\n         } catch (error) {\n            window.console.log(`TradingChart unmount failed (Rebuild chart): ${error}`);\n         }\n\n         this.setChart(markets, currentMarket, colorTheme);\n      }\n   };\n\n   private languageIncluded = (lang: string) => {\n      return ['ar', 'zh', 'cs', 'da_DK', 'nl_NL', 'en', 'et_EE', 'fr', 'de', 'el', 'he_IL', 'hu_HU', 'id_ID', 'it', 'ja', 'ko', 'fa', 'pl', 'pt', 'ro', 'ru', 'sk_SK', 'es', 'sv', 'th', 'tr', 'vi'].includes(lang)\n   };\n}\n\nconst reduxProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   markets: selectMarkets(state),\n   colorTheme: selectCurrentColorTheme(state),\n   chartRebuild: selectChartRebuildState(state),\n   currentMarket: selectCurrentMarket(state),\n   tickers: selectMarketTickers(state),\n   kline: selectKline(state),\n   lang: selectCurrentLanguage(state),\n   isMobileDevice: selectMobileDeviceState(state),\n});\n\nconst mapDispatchProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   klineUpdateTimeRange: payload => dispatch(klineUpdateTimeRange(payload)),\n   subscribeKline: (marketId: string, periodString: string) => dispatch(rangerSubscribeKlineMarket(marketId, periodString)),\n   unSubscribeKline: (marketId: string, periodString: string) => dispatch(rangerUnsubscribeKlineMarket(marketId, periodString)),\n   klineUpdatePeriod: payload => dispatch(klineUpdatePeriod(payload)),\n});\n\nexport const TradingChart = connect<ReduxProps, DispatchProps, {}, RootState>(reduxProps, mapDispatchProps)(TradingChartComponent);\n","import React from 'react'\nimport { TradingChart as Chart } from './configs'\nimport { useMarketsFetch, useMarketsTickersFetch } from 'hooks';\n\nexport const TradingChart = () => {\n   useMarketsFetch();\n   useMarketsTickersFetch();\n   return <Chart />\n}\n","import React, {\n   Fragment,\n   FunctionComponent,\n   useEffect,\n   useMemo,\n   useState\n} from 'react';\nimport { compose } from 'redux';\nimport {\n   RouterProps,\n   withRouter\n} from 'react-router';\nimport {\n   connect,\n   MapDispatchToPropsFunction,\n   MapStateToProps\n} from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport {\n   Combobox,\n   Transition,\n} from '@headlessui/react';\nimport {\n   Badge,\n   Button,\n   Decimal,\n   InputGroup,\n   Portal\n} from 'components';\nimport {\n   alertPush,\n   currenciesFetch,\n   Currency,\n   RootState,\n   selectCurrencies,\n   selectTransferLoading,\n   selectTransferIsSuccess,\n   selectUserInfo,\n   selectWallets,\n   transferCreate,\n   User,\n   Wallet,\n   walletsFetch,\n   selectTransferIsError,\n   selectDetailUserData,\n   selectDetailUserLoading,\n   detailUserCreate,\n   selectDetailUserIsError\n} from 'modules';\nimport { IntlProps } from 'index';\nimport { arrayFilter, cleanPositiveFloatInput, precisionRegExp, renderCurrencyIcon, truncateMiddle } from 'helpers';\nimport { imgAvatar } from 'assets';\n\ntype TransferState = {\n   username_or_uid: string;\n   amount: string;\n   otp: string;\n   insufficientBalance: boolean;\n}\n\ninterface ReduxProps {\n   user: User;\n   detailUserLoading: boolean;\n   detailUserData: User;\n   detailUserError: boolean;\n   wallets: Wallet[];\n   currencies: Currency[];\n   transferLoading: boolean;\n   transferSuccess: boolean;\n   transferError: boolean;\n}\n\ninterface DispatchProps {\n   transfer: typeof transferCreate;\n   getDetailUser: typeof detailUserCreate;\n   fetchWallets: typeof walletsFetch;\n   fetchCurrencies: typeof currenciesFetch;\n   alertPush: typeof alertPush;\n}\n\ntype OwnProps = {\n   location: {\n      state: Currency;\n   };\n}\n\ntype TransferProps = ReduxProps & DispatchProps & OwnProps & RouterProps & IntlProps;\n\nexport const TransferFC = ({\n   user,\n   wallets,\n   currencies,\n   transfer,\n   getDetailUser,\n   detailUserLoading,\n   detailUserData,\n   detailUserError,\n   transferLoading,\n   transferSuccess,\n   transferError,\n   fetchWallets,\n   fetchCurrencies,\n   history: { push },\n   intl,\n   location,\n}: TransferProps) => {\n   const [state, setState] = useState<TransferState>({\n      username_or_uid: '',\n      amount: '',\n      otp: '',\n      insufficientBalance: false,\n   });\n   const { username_or_uid, amount, otp, insufficientBalance } = state;\n   const [selected, setSelected] = useState<Currency>(location.state ? location.state : currencies[0]);\n   const [isOpenConfirm, setIsOpenConfirm] = useState<boolean>(false);\n   const [isOpenSuccess, setIsOpenSuccess] = useState<boolean>(false);\n   const [query, setQuery] = useState<string>('');\n   const [asset, setAsset] = useState(currencies)\n   const filteredCurrencies: Currency[] = query === '' ? asset : asset ? arrayFilter(asset, query) : [];\n\n   const resendField = () => setState({\n      username_or_uid: '',\n      amount: '',\n      otp: '',\n      insufficientBalance: false,\n   })\n\n   useEffect(() => {\n      if (user.level < 2 || !user.otp) {\n         push('/wallets', { isOpenPortal: true });\n      }\n   }, []);\n\n   useEffect(() => {\n      if (!wallets.length || !currencies.length) {\n         fetchWallets();\n         fetchCurrencies();\n      }\n   }, [wallets, currencies]);\n\n   useEffect(() => {\n      if (transferSuccess) {\n         setIsOpenConfirm(false);\n         setIsOpenSuccess(true);\n      }\n   }, [transferSuccess]);\n\n   useEffect(() => {\n      if (transferError) {\n         setIsOpenConfirm(false);\n      }\n   }, [transferError]);\n\n   const handleGetDetailUser = (uid: string) => detailUserData?.uid?.toUpperCase() !== uid && getDetailUser({\n      token: 'a5144000-3271-11ed-a261-0242ac120002',\n      uid: uid\n   })\n\n   const translate = (id: string) => intl.formatMessage({ id });\n\n   const handleChangeReceiver = (username_or_uid: string) => {\n      setState({\n         ...state,\n         username_or_uid\n      });\n   }\n   const handleChangeAmount = (amount: string) => {\n      const convertedValue = cleanPositiveFloatInput(amount)\n      if (convertedValue.match(precisionRegExp(Number(myWallet?.fixed)))) {\n         setState({\n            ...state,\n            amount: convertedValue,\n            insufficientBalance: !convertedValue.length ? false : Number(myWallet?.balance) <= 0 ? true : false\n         })\n      };\n   }\n   const handleChangeOtp = (otp: string) => setState({\n      ...state,\n      otp: otp.replace(/\\D/g, '')\n   });\n\n   const handleTranfer = () => {\n      if (selected && selected?.status === 'enabled') {\n         transfer({\n            username_or_uid,\n            currency: selected.id,\n            amount,\n            otp\n         });\n      }\n   }\n\n   const myWallet = wallets.find(wallet => wallet?.currency === selected?.id);\n\n   const isDisabled = (): boolean => {\n      return !selected || !username_or_uid || !amount || otp.length < 6 || Number(myWallet?.balance) <= 0 || !detailUserData?.username?.length;\n   }\n\n   const handleShowConfirm = () => setIsOpenConfirm(prev => !prev);\n   const handleShowSuccess = () => {\n      isOpenSuccess && resendField();\n      setIsOpenSuccess(prev => !prev);\n   }\n\n   const renderModalDetail = useMemo(() => (\n      <div className=\"mt-10 space-y-8\">\n         <div className=\"text-5xl text-center font-dm font-bold leading-custom1 tracking-custom\">Yay! 🎉</div>\n         <div className=\"max-w-71.25 mx-auto text-center text-base font-medium leading-normal\">\n            You successfully transferred <span className=\"text-primary5 dark:text-chart1\">\n               {Decimal.format(amount, Number(myWallet?.fixed), ',') || 0} {amount ? myWallet?.currency?.toUpperCase() : ''}</span> to {username_or_uid}\n         </div>\n         <div className=\"flex flex-wrap p-6 rounded-xl border border-neutral6 dark:border-neutral3\">\n            <div className=\"mr-auto space-y-2.5\">\n               <div className=\"text-neutral4\">Status</div>\n               <div className=\"font-medium text-primary5\">Completed</div>\n            </div>\n            <div className=\"space-y-2.5\">\n               <div className=\"text-neutral4\">Transaction ID</div>\n               <div className=\"font-medium\">0msx836930...87r398</div>\n            </div>\n         </div>\n         <Button\n            text=\"Wallets\"\n            onClick={() => push('/wallets')}\n         />\n      </div>\n   ), [myWallet]);\n\n   return (\n      <>\n         <div>\n            <div className=\"py-10\">\n               <div className=\"flex items-center w-full max-w-7xl my-0 mx-auto px-6 md:px-10 lg:px-20\">\n                  <div className=\"mr-auto text-5xl font-dm font-bold tracking-custom leading-custom1\">\n                     Transfer\n                  </div>\n               </div>\n            </div>\n            <div className=\"py-20 pb-34 bg-shade5 dark:bg-none dark:shadow-body dark:bg-neutral1\">\n               <div className=\"w-full max-w-7xl my-0 mx-auto px-6 md:px-10 lg:px-20\">\n                  <div className=\"flex -mx-5\">\n                     <div className=\"basis-c-4/6-5 w-c-4/6-5 mx-5\">\n                        <div className=\"bg-neutral8 dark:bg-shade1 shadow-card rounded-2xl p-10 space-y-8\">\n                           <div className=\"text-2xl leading-custom2 font-semibold tracking-custom1\">\n                              {translate('transfer.title')}\n                           </div>\n                           <InputGroup\n                              autoFocus\n                              id=\"uid\"\n                              label=\"Enter UID\"\n                              placeholder=\"ID1234567890\"\n                              value={username_or_uid}\n                              onChange={handleChangeReceiver}\n                              iconClassName={detailUserData?.uid?.toUpperCase() !== username_or_uid && username_or_uid ? '!w-16' : ''}\n                              icon={\n                                 (detailUserData?.uid?.toUpperCase() !== username_or_uid && username_or_uid) ?\n                                    <Badge\n                                       text=\"Cek\"\n                                       rounded=\"3xl\"\n                                       variant=\"outline\"\n                                       onClick={() => handleGetDetailUser(username_or_uid)}\n                                    /> : <></>\n                              }\n                           />\n                           <div className=\"flex -mx-2\">\n                              <div className=\"grow-0 shrink-0 basis-c-1/3-4 w-c-1/3-4 mx-2\">\n                                 <Combobox\n                                    value={selected}\n                                    onChange={setSelected}\n                                 >\n                                    <div className=\"relative\">\n                                       <div className=\"leading-none mb-2.5\">\n                                          <Combobox.Label className=\"text-xs text-neutral5 leading-none font-bold uppercase\">\n                                             Currency\n                                          </Combobox.Label>\n                                       </div>\n                                       <div className=\"relative\">\n                                          <Combobox.Input\n                                             className={({ open }) => `${open ? 'text-primary1' : ''} w-full px-3.5 pr-12 h-12 rounded-xl font-medium leading-12 outline-none border-2 border-neutral6 dark:border-neutral3 focus:border-neutral4 dark:focus:border-neutral4 bg-none bg-transparent transition ease-in-out duration-300`}\n                                             displayValue={(currency: { name: string }) => typeof currency?.name === 'undefined' ? '~ Select currency ~' : currency.name}\n                                             onChange={e => setQuery(e.target.value)}\n                                          />\n                                          <Combobox.Button\n                                             className=\"group absolute inset-y-0 right-0 flex items-center pr-2\"\n                                             onClick={() => !asset.length && setAsset(currencies)}\n                                          >\n                                             <svg className=\"h-5 w-5 fill-neutral4 group-hover:fill-neutral2 dark:group-hover:fill-neutral6 transition-colors duration-300\">\n                                                <use xlinkHref=\"#icon-search\" />\n                                             </svg>\n                                          </Combobox.Button>\n                                       </div>\n                                       <Transition\n                                          as={Fragment}\n                                          leave=\"transition ease-in duration-100\"\n                                          leaveFrom=\"opacity-100\"\n                                          leaveTo=\"opacity-0\"\n                                          afterLeave={() => setQuery('')}\n                                       >\n                                          <Combobox.Options className=\"absolute max-h-60 w-full overflow-auto z-[9] mt-0.5 rounded-xl outline-none bg-neutral8 dark:bg-neutral1 border-2 border-neutral6 dark:border-neutral3 shadow-dropdown-2 dark:shadow-dropdown-3\">\n                                             {filteredCurrencies.length === 0 && query !== '' ? (\n                                                <div className=\"relative cursor-default select-none py-2 px-4 text-neutral4\">\n                                                   Nothing found.\n                                                </div>\n                                             ) : (\n                                                filteredCurrencies.map(currency => (\n                                                   <Combobox.Option\n                                                      key={currency.id}\n                                                      className={({ active }) => `relative ${active ? 'bg-neutral7 dark:bg-neutral2' : ''} px-3.5 py-2.5 leading-[1.4] font-medium transition-all duration-200`}\n                                                      value={currency}\n                                                   >\n                                                      {({ selected }) => (\n                                                         <div className=\"group flex items-center space-x-3\">\n                                                            <div className=\"w-8 h-8 overflow-hidden\">\n                                                               <img\n                                                                  src={renderCurrencyIcon(currency.id, currency?.icon_url)}\n                                                                  className=\"object-cover bg-neutral8\"\n                                                                  alt={currency?.name}\n                                                                  title={currency?.name}\n                                                                  style={{\n                                                                     clipPath: 'polygon(50% 0, 5% 25%, 5% 75%, 50% 100%, 95% 75%, 95% 25%)',\n                                                                  }}\n                                                               />\n                                                            </div>\n                                                            <div className={`block truncate ${selected ? 'font-medium text-primary1' : 'font-normal'} group-hover:font-medium`}>\n                                                               {currency?.name} <span className={`text-neutral4 font-normal`}>{currency?.id.toUpperCase()}</span>\n                                                            </div>\n                                                         </div>\n                                                      )}\n                                                   </Combobox.Option>\n                                                ))\n                                             )}\n                                          </Combobox.Options>\n                                       </Transition>\n                                    </div>\n                                 </Combobox>\n                              </div>\n                              <div className=\"grow-0 shrink-0 basis-c-4/6-4 w-c-4/6-4 mx-2\">\n                                 <InputGroup\n                                    id=\"amount\"\n                                    name=\"amount\"\n                                    label=\"Enter transfer amount\"\n                                    placeholder=\"0.12345678\"\n                                    value={amount}\n                                    onChange={handleChangeAmount}\n                                    withError={insufficientBalance}\n                                    info={insufficientBalance ? 'Insufficient balance' : ''}\n                                    className=\"!px-3.5\"\n                                 />\n                              </div>\n                           </div>\n                           <InputGroup\n                              id=\"otpCode\"\n                              name=\"otpCode\"\n                              label=\"Enter 2FA code\"\n                              placeholder=\"123456\"\n                              value={otp}\n                              onChange={handleChangeOtp}\n                              maxLength={6}\n                           />\n                           <div className=\"bg-neutral7 dark:bg-neutral2 flex flex-col rounded-2xl px-6 py-4\">\n                              <div className=\"font-medium leading-6\">\n                                 {translate('transfer.intruction.title')}\n                              </div>\n                              <ul className=\"list-decimal list-outside text-xs pl-3 leading-normal\">\n                                 <li>{translate('transfer.intruction.list_1')}</li>\n                                 <li>{translate('transfer.intruction.list_2')}</li>\n                                 <li>{translate('transfer.intruction.list_3')}</li>\n                              </ul>\n                           </div>\n                        </div>\n                     </div>\n                     <div className=\"basis-c-1/3-5 w-c-1/3-5 mx-5\">\n                        <div className=\"flex flex-col space-y-10\">\n                           <div className=\"bg-neutral8 dark:bg-shade1 shadow-card rounded-2xl py-10 px-6\">\n                              <div className=\"space-y-3\">\n                                 <div className=\"text-base font-medium leading-normal\">\n                                    {translate('transfer.receiver.detail')}\n                                 </div>\n                                 <div className=\"mx-auto w-20 h-20 rounded-full overflow-hidden\">\n                                    <img\n                                       src={\n                                          typeof detailUserData?.email === 'undefined' || detailUserData?.email === ''\n                                             ? imgAvatar\n                                             : `https://api.dicebear.com/5.x/fun-emoji/svg?seed=${detailUserData?.email}`\n                                       }\n                                       className=\"object-cover\"\n                                       alt=\"Avatar receiver\"\n                                       title=\"Avatar receiver\"\n                                    />\n                                 </div>\n                                 <div className=\"flex items-center justify-between space-x-3\">\n                                    <div>UID</div>\n                                    <div className={`text-right font-medium truncate ${detailUserData?.uid ? '' : 'text-neutral4 '}`}>\n                                       {detailUserData?.uid ? detailUserData?.uid?.toUpperCase() : 'ID123123123'}\n                                    </div>\n                                 </div>\n                                 <div className=\"flex items-center justify-between space-x-3\">\n                                    <div>Username</div>\n                                    <div className={`text-right font-medium truncate ${detailUserData?.username ? '' : 'text-neutral4 '}`}>\n                                       {detailUserData?.username ? detailUserData?.username : 'digiusername'}\n                                    </div>\n                                 </div>\n                                 <div className=\"flex items-center justify-between space-x-3\">\n                                    <div>Email</div>\n                                    <div className=\"text-right font-medium truncate text-neutral4\">\n                                       {detailUserData?.email ? truncateMiddle(detailUserData?.email || '', 12, '***') : 'digiasset@mail.com'}\n                                    </div>\n                                 </div>\n                              </div>\n                           </div>\n                           <div className=\"bg-neutral8 dark:bg-shade1 shadow-card rounded-2xl py-10 px-6\">\n                              <div className=\"space-y-3 mb-8\">\n                                 <div className=\"text-base font-medium leading-normal\">\n                                    Transfer amount\n                                 </div>\n                                 <div className={`${amount ? '' : 'text-neutral5'} font-semibold text-2xl leading-custom3`}>\n                                    {Decimal.format(amount, Number(myWallet?.fixed), ',') || 0} {amount ? myWallet?.currency?.toUpperCase() : ''}\n                                 </div>\n                                 <div className=\"flex items-center\">\n                                    <div>Available asset</div>\n                                    <div className={`text-right font-medium ml-auto ${selected ? '' : 'text-neutral4'}`}>\n                                       {Decimal.format(myWallet?.balance, Number(myWallet?.fixed), ',') || 0} {myWallet?.currency?.toUpperCase()}\n                                    </div>\n                                 </div>\n                              </div>\n                              <Button\n                                 text=\"Transfer\"\n                                 onClick={handleShowConfirm}\n                                 disabled={isDisabled()}\n                                 withLoading={transferLoading}\n                              />\n                           </div>\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n         <Portal\n            show={isOpenConfirm}\n            close={handleShowConfirm}\n            title=\"Confirmation\"\n            onClick={handleShowConfirm}\n         >\n            <div className=\"space-y-2\">\n               <div className=\"text-center font-medium leading-normal\">\n                  {translate('transfer')}\n               </div>\n               <div className=\"text-center font-dm font-bold text-3.5xl leading-tight tracking-custom1\">\n                  {Decimal.format(amount, Number(myWallet?.fixed), ',') || 0} {amount ? myWallet?.currency?.toUpperCase() : ''}\n               </div>\n            </div>\n            <div className=\"space-y-3\">\n               <List\n                  left=\"To\"\n                  right={String(detailUserData?.username)}\n               />\n               <List\n                  left=\"UID\"\n                  right={detailUserData?.uid?.toUpperCase()}\n               />\n               <List\n                  left=\"Currencies\"\n                  right={selected && selected.name}\n                  rightAlt={selected && selected.id.toUpperCase()}\n               />\n               <List\n                  left=\"From\"\n                  right={String(user.username)}\n               />\n               <List\n                  left=\"Balance\"\n                  right={Decimal.format(myWallet?.balance, Number(myWallet?.fixed), ',') || '0'}\n                  rightAlt={myWallet?.currency?.toUpperCase()}\n               />\n            </div>\n            <div className=\"bg-neutral7 dark:bg-neutral3 p-4 rounded-2xl space-y-3\">\n               <div className=\"text-center text-base font-medium\">\n                  Attention\n               </div>\n               <div className=\"text-xs leading-custom4\">\n                  Please note to double check your receiver uid/ username before sending assets. Wrong uid/ username cause your asset to be lost.\n               </div>\n            </div>\n            <Button\n               text={translate('transfer')}\n               onClick={handleTranfer}\n               withLoading={transferLoading}\n            />\n         </Portal>\n         <Portal\n            show={isOpenSuccess}\n            close={handleShowSuccess}\n         >\n            {renderModalDetail}\n         </Portal>\n      </>\n   );\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   user: selectUserInfo(state),\n   detailUserLoading: selectDetailUserLoading(state),\n   detailUserData: selectDetailUserData(state),\n   detailUserError: selectDetailUserIsError(state),\n   wallets: selectWallets(state),\n   currencies: selectCurrencies(state),\n   transferLoading: selectTransferLoading(state),\n   transferSuccess: selectTransferIsSuccess(state),\n   transferError: selectTransferIsError(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   transfer: payload => dispatch(transferCreate(payload)),\n   getDetailUser: payload => dispatch(detailUserCreate(payload)),\n   fetchWallets: () => dispatch(walletsFetch()),\n   fetchCurrencies: () => dispatch(currenciesFetch()),\n   alertPush: payload => dispatch(alertPush(payload)),\n})\n\nexport const Transfer = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps)\n)(TransferFC) as FunctionComponent;\n\ntype ListProps = {\n   left: string;\n   right: string;\n   rightAlt?: string;\n}\nconst List = ({ left, right, rightAlt }: ListProps) => (\n   <div className=\"flex items-center\">\n      <div className=\"text-neutral4\">{left}</div>\n      <div className={`text-right font-medium ml-auto`}>\n         {right} <span className=\"text-neutral4\">{rightAlt}</span>\n      </div>\n   </div>\n);\n","import React, {\n   Fragment,\n   FunctionComponent,\n   memo,\n   useCallback,\n   useEffect,\n   useMemo,\n   useState,\n} from 'react'\nimport { RouterProps } from 'react-router';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport {\n   connect,\n   MapDispatchToPropsFunction\n} from 'react-redux';\nimport { Combobox, Transition } from '@headlessui/react'\nimport {\n   walletsFetch,\n   selectWallets,\n   walletsAddressFetch,\n   selectGenerateAddressLoading,\n   alertPush,\n   selectUserInfo,\n   selectWalletsLoading,\n} from 'modules';\nimport type {\n   RootState,\n   User,\n   Wallet,\n} from 'modules';\nimport { injectIntl } from 'react-intl';\nimport { IntlProps } from 'index';\nimport { arrayFilter, copyToClipboard, renderCurrencyIcon } from 'helpers';\nimport { Button, Decimal, LayoutProfile, Skeleton, InputGroup, QRCode, Nav, Label } from 'components';\nimport { DEFAULT_WALLET } from '../../constants';\n\ntype ReduxProps = {\n   user: User;\n   wallets: Wallet[];\n   generateAddressLoading?: boolean;\n   walletLoading: boolean;\n}\n\ntype OwnProps = {\n   location: {\n      state: Wallet;\n   };\n}\n\ninterface DispatchProps {\n   fetchWallets: typeof walletsFetch;\n   generateAdress: typeof walletsAddressFetch;\n   fetchSuccess: typeof alertPush;\n}\n\ntype DepositProps = ReduxProps & OwnProps & DispatchProps & RouterProps & IntlProps;\n\nconst DepositFC = memo(({\n   user,\n   wallets,\n   generateAddressLoading,\n   walletLoading,\n   location,\n   fetchWallets,\n   generateAdress,\n   fetchSuccess,\n   history: { push },\n   intl\n}: DepositProps) => {\n   const defaultWallet: Wallet = wallets.find(e => e.currency === 'usdt') || DEFAULT_WALLET;\n\n   const [selected, setSelected] = useState<Wallet>(location.state ? location.state : defaultWallet);\n   const [networkActive, setNetworkActive] = useState(0);\n   const [searchCurrency, setSearchCurrency] = useState('');\n   const [assets, setAssets] = useState(wallets);\n\n   useEffect(() => {\n      if (user && user.level < 1 && user.state === 'pending') {\n         push('/email-verification', { email: user.email });\n      }\n   }, []);\n\n   useEffect(() => {\n      if (!wallets.length) {\n         fetchWallets();\n      }\n   }, [wallets]);\n\n   useEffect(() => {\n      console.log('selected :>> ', selected);\n   }, [selected]);\n\n   const filteredWallets: Wallet[] = searchCurrency === '' ? assets : assets ? arrayFilter(assets, searchCurrency) : [];\n\n   const formatedWallet = wallets.length ? wallets.find(wallet => wallet.currency === selected?.currency) : DEFAULT_WALLET;\n\n   const type = formatedWallet?.type;\n   const currencyActive = formatedWallet?.networks[networkActive];\n   const depositAddress = formatedWallet?.deposit_addresses?.find(address => address.blockchain_key === currencyActive?.blockchain_key);\n   let loadingFetchGenerate: boolean = false;\n\n   const translate = useCallback((id: string) => intl.formatMessage({ id }), [intl]);\n\n   const handleGenerateAddress = useCallback(() => {\n      generateAdress({ currency: String(formatedWallet?.currency), blockchainKey: currencyActive?.blockchain_key });\n      fetchWallets();\n      loadingFetchGenerate = walletLoading ? true : false;\n   }, [generateAdress, formatedWallet, currencyActive, fetchWallets, walletLoading, loadingFetchGenerate]);\n\n   const handleCopy = useCallback((url: string, type: string) => {\n      copyToClipboard(url);\n      fetchSuccess({ message: [`${type} Copied`], type: 'success' });\n   }, [fetchSuccess, copyToClipboard]);\n\n   const isDisabled = useMemo(() => {\n      const depositEnabled = formatedWallet?.networks[networkActive]?.deposit_enabled;\n      return !formatedWallet || formatedWallet?.name === '' || !depositEnabled || loadingFetchGenerate;\n   }, [formatedWallet, loadingFetchGenerate, networkActive]);\n\n   const renderAddressAvailable = useMemo(() => (\n      <div className=\"flex items-center space-x-12\">\n         <div>\n            <div className=\"p-4 rounded-lg border-2 border-dashed border-primary1 w-40 h-40\">\n               <QRCode\n                  dimensions={128}\n                  data={depositAddress?.address || ''}\n               />\n            </div>\n         </div>\n         <div className=\"w-full\">\n            <InputGroup\n               value={depositAddress?.address}\n               icon={\n                  <svg\n                     onClick={() => handleCopy(depositAddress?.address || '', 'Address')}\n                     className=\"cursor-copy -translate-x-0.5 w-6 h-6 fill-neutral4 group-hover:fill-neutral2\"\n                  >\n                     <use xlinkHref=\"#icon-copy\" />\n                  </svg>\n               }\n            />\n         </div>\n      </div>\n   ), [depositAddress, handleCopy]);\n\n   const renderAddressSkeleton = useMemo(() => (\n      <div className=\"flex items-center space-x-12\">\n         <div>\n            <div className=\"grow p-4 rounded-lg border-2 border-dashed border-primary1 w-40 h-40\">\n               <Skeleton\n                  rounded=\"lg\"\n                  isHeightFull\n                  isWithFull\n               />\n            </div>\n         </div>\n         <div className=\"w-full\">\n            <Skeleton\n               rounded=\"lg\"\n               height={48}\n               isWithFull\n            />\n         </div>\n      </div>\n   ), []);\n\n   const renderButtonGenerated = useMemo(() => (\n      <Button\n         text={formatedWallet?.networks?.length ? translate('deposit.content.button.enabled') : translate('deposit.content.button.disabled')}\n         disabled={isDisabled || generateAddressLoading}\n         onClick={handleGenerateAddress}\n         withLoading={generateAddressLoading || loadingFetchGenerate}\n      />\n   ), [formatedWallet, isDisabled, generateAddressLoading, handleGenerateAddress, loadingFetchGenerate, translate]);\n\n   return (\n      <LayoutProfile\n         title=\"Deposit\"\n         withBreadcrumbs={{\n            display: 'Wallets',\n            href: '/wallets',\n            active: 'Deposit'\n         }}\n      >\n         <div className=\"flex space-x-10\">\n            <div className=\"w-2/3\">\n               <div className=\"bg-neutral8 dark:bg-shade1 shadow-card rounded-2xl p-10 space-y-8\">\n                  <Combobox\n                     value={selected}\n                     onChange={setSelected}\n                  >\n                     <div className=\"relative\">\n                        <Label label=\"Select currency\" />\n                        <div className=\"relative mt-2.5\">\n                           <Combobox.Input\n                              className={({ open }) => `${open ? 'text-primary1' : ''} w-full px-3.5 pr-12 h-12 rounded-xl font-medium leading-12 outline-none border-2 border-neutral6 dark:border-neutral3 focus:border-neutral4 dark:focus:border-neutral4 bg-none bg-transparent transition ease-in-out duration-300`}\n                              displayValue={(currency: { name: string }) => typeof currency?.name === 'undefined' ? '~ Select currency ~' : currency.name}\n                              onChange={({ target: { value } }) => setSearchCurrency(value)}\n                           />\n                           <Combobox.Button\n                              className=\"group absolute inset-y-0 right-0 flex items-center pr-2\"\n                              onClick={() => !assets.length && setAssets(wallets)}\n                           >\n                              <svg className=\"h-5 w-5 fill-neutral4 group-hover:fill-neutral2 dark:group-hover:fill-neutral6 transition-colors duration-300\">\n                                 <use xlinkHref=\"#icon-search\" />\n                              </svg>\n                           </Combobox.Button>\n                        </div>\n                        <Transition\n                           as={Fragment}\n                           enter=\"transition ease-in duration-100\"\n                           enterFrom=\"opacity-0 -translate-y-20 scale-50\"\n                           enterTo=\"opacity-100 translate-y-0 scale-100\"\n                           leave=\"transition ease-out duration-200\"\n                           leaveFrom=\"opacity-100 translate-y-0 scale-100\"\n                           leaveTo=\"opacity-0 -translate-y-20 scale-50\"\n                           afterLeave={() => {\n                              setSearchCurrency('');\n                              setNetworkActive(0);\n                           }}\n                        >\n\n                           <Combobox.Options className=\"absolute max-h-[252px] w-full overflow-auto z-[9] mt-0.5 rounded-xl outline-none bg-neutral8 dark:bg-neutral1 border-2 border-neutral6 dark:border-neutral3 shadow-dropdown-2 dark:shadow-dropdown-3\">\n                              {filteredWallets.length === 0 && searchCurrency !== '' ? (\n                                 <div className=\"relative cursor-default select-none py-2 px-4 text-neutral4\">\n                                    Nothing found...\n                                 </div>\n                              ) : (\n                                 filteredWallets.map(wallet => (\n                                    <Combobox.Option\n                                       key={wallet.currency}\n                                       className={({ active }) => `relative ${active ? 'bg-neutral7 dark:bg-neutral2' : ''} px-3.5 py-2.5 leading-[1.4] font-medium transition-all duration-200`}\n                                       value={wallet}\n                                    >\n                                       {({ selected, active }) => (\n                                          <div className=\"flex items-center justify-between\">\n                                             <div className=\"flex items-center space-x-3\">\n                                                <div className=\"w-8 h-8 overflow-hidden pointer-events-none\">\n                                                   <img\n                                                      className={renderCurrencyIcon(wallet.currency, wallet?.iconUrl).includes('http') ? 'object-cover polygon bg-neutral8' : ''}\n                                                      src={renderCurrencyIcon(wallet.currency, wallet?.iconUrl)}\n                                                      alt={wallet.name}\n                                                      title={wallet.name}\n                                                   />\n                                                </div>\n                                                <div className={`block truncate ${selected ? 'font-medium text-primary1' : 'font-normal'} group-hover:font-medium`}>\n                                                   {wallet?.name} <span className={`text-neutral4 font-normal`}>\n                                                      {wallet.currency.toUpperCase()}\n                                                   </span>\n                                                </div>\n                                             </div>\n                                             <div className=\"text-neutral4 font-normal\">\n                                                {Decimal.format(wallet.balance || 0, wallet.fixed, ',')} {wallet.currency.toUpperCase()}\n                                             </div>\n                                          </div>\n                                       )}\n                                    </Combobox.Option>\n                                 ))\n                              )}\n                           </Combobox.Options>\n                        </Transition>\n                     </div>\n                  </Combobox>\n                  <div className=\"space-y-2.5\">\n                     <Label label={type === 'coin' ? 'Pick network' : 'Select bank'} />\n                     {(!formatedWallet || formatedWallet.name === '') ? (\n                        <div className=\"flex space-x-4\">\n                           <Skeleton height={40} width={71.98} rounded=\"lg\" />\n                           <Skeleton height={40} width={71.98} rounded=\"lg\" />\n                           <Skeleton height={40} width={71.98} rounded=\"lg\" />\n                        </div>\n                     ) : (formatedWallet.networks.length && formatedWallet.name !== '' && type === 'coin') ? (\n                        <div className=\"flex space-x-4\">\n                           {formatedWallet.networks.map(({ blockchain_key, protocol }, index) => (\n                              <>\n                                 <Nav\n                                    key={blockchain_key}\n                                    title={protocol}\n                                    isActive={networkActive === index}\n                                    onClick={() => setNetworkActive(index)}\n                                    theme=\"grey\"\n                                 />\n                                 {/* <Button\n                                 key={network.blockchain_key}\n                                 text={network.protocol}\n                                 size=\"normal\"\n                                 width=\"noFull\"\n                                 rounded=\"lg\"\n                                 fontDM={false}\n                                 variant={networkActive === index ? \"primary\" : \"outline\"}\n                                 onClick={() => setNetworkActive(index)}\n                              /> */}\n                              </>\n                           ))}\n                        </div>\n                     ) : (\n                        <div className=\"flex items-center space-x-3 rounded-lg px-3 py-2 bg-secondary3 bg-opacity-20\">\n                           <span className=\"text-3xl font-bold text-primary4\">&#9888;</span>\n                           <div>{translate('deposit.content.disabled')}</div>\n                        </div>\n                     )}\n                  </div>\n                  <div className=\"space-y-2.5\">\n                     <Label label=\"Payment address\" />\n                     {(formatedWallet?.name !== '' && formatedWallet?.type === 'coin') && (\n                        depositAddress?.state === 'pending'\n                           ? renderAddressSkeleton\n                           : depositAddress?.address\n                              ? renderAddressAvailable\n                              : renderButtonGenerated\n                     )}\n                     {(formatedWallet?.name !== '' && formatedWallet?.type === 'fiat') && (\n                        renderButtonGenerated\n                     )}\n                  </div>\n                  <div className=\"bg-neutral7 dark:bg-neutral2 flex flex-col rounded-2xl px-6 py-4\">\n                     <div className=\"font-medium leading-6\">\n                        Instruction of deposit\n                     </div>\n                     <ul className=\"list-decimal list-outside text-xs pl-3 leading-5\">\n                        {type === 'coin' ? (\n                           <>\n                              <li>{formatedWallet?.currency.toUpperCase()} deposit will be into the account after the {currencyActive?.min_confirmations} confirmation, and it can be allowed to withdraw after the {Number(currencyActive?.min_confirmations) + 2} confirmation.</li>\n                              <li>Minimum deposits are {Decimal.format(currencyActive?.min_deposit_amount, Number(formatedWallet?.fixed), ',')} {formatedWallet?.currency.toUpperCase()}, and deposits will be not into the account if they are less the minimum.</li>\n                              <li>Please note that depositing other tokens to the address below will cause your asset to be permanent lost</li>\n                           </>\n                        ) : (\n                           <li>Please note the minimum deposit is {Decimal.format(currencyActive?.min_deposit_amount, Number(formatedWallet?.fixed), ',')} {formatedWallet?.currency.toUpperCase()} and if you deposit below that amount, the deposit will not be credited to your account.</li>\n                        )}\n                     </ul>\n                  </div>\n               </div>\n            </div>\n            <div className=\"w-1/3\">\n               <div className=\"bg-neutral8 dark:bg-shade1 shadow-card rounded-2xl py-10 px-6\">\n                  <div className=\"space-y-3\">\n                     <Label label={translate('deposit.content.right.title')} />\n                     <div className=\"mx-auto w-20 h-20 overflow-hidden pointer-events-none\">\n                        <img\n                           className={`w-full ${renderCurrencyIcon(formatedWallet?.currency, formatedWallet?.iconUrl)?.includes('http') ? 'object-cover polygon bg-neutral8' : ''}`}\n                           src={renderCurrencyIcon(formatedWallet?.currency, formatedWallet?.iconUrl)}\n                           alt={formatedWallet?.name || ''}\n                           title={formatedWallet?.name || ''}\n                        />\n                     </div>\n                     <div className=\"flex items-center justify-between space-x-3\">\n                        <div>{translate('currency')}</div>\n                        <div className=\"text-right font-medium truncate\">\n                           {formatedWallet?.name || ''}\n                        </div>\n                     </div>\n                     <div className=\"flex items-center justify-between space-x-3\">\n                        <div>Total balance</div>\n                        <div className=\"text-right font-medium truncate\">\n                           {Decimal.format((Number(formatedWallet?.balance) + Number(formatedWallet?.locked) || 0), Number(formatedWallet?.fixed), ',')} {formatedWallet?.currency.toUpperCase()}\n                        </div>\n                     </div>\n                     <div className=\"flex items-center justify-between space-x-3\">\n                        <div>Locked balance</div>\n                        <div className=\"text-right font-medium truncate\">\n                           {Decimal.format(Number(formatedWallet?.locked) || 0, Number(formatedWallet?.fixed), ',')} {formatedWallet?.currency.toUpperCase()}\n                        </div>\n                     </div>\n                     <div className=\"flex items-center justify-between space-x-3\">\n                        <div>Available balance</div>\n                        <div className=\"text-right font-medium truncate\">\n                           {Decimal.format(Number(formatedWallet?.balance) || 0, Number(formatedWallet?.fixed), ',')} {formatedWallet?.currency.toUpperCase()}\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n         </div>\n      </LayoutProfile>\n   )\n})\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   user: selectUserInfo(state),\n   wallets: selectWallets(state),\n   generateAddressLoading: selectGenerateAddressLoading(state),\n   walletLoading: selectWalletsLoading(state),\n});\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   fetchWallets: () => dispatch(walletsFetch()),\n   generateAdress: payload => dispatch(walletsAddressFetch(payload)),\n   fetchSuccess: payload => dispatch(alertPush(payload)),\n});\n\nexport const Deposit = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps)\n)(DepositFC) as FunctionComponent;\n","import React, {\n   useEffect,\n   useState\n} from 'react'\nimport {\n   Button,\n   Checkbox,\n   Skeleton,\n   TutorialAlt\n} from 'components'\nimport axios from 'axios';\nimport { Notification } from './types'\nimport { localeDate, truncateEnd } from 'helpers';\nimport { IcEmty } from 'assets';\n\ntype State = {\n   isSecurity: boolean;\n   isWallet: boolean;\n   isTrade: boolean;\n   isDeposit: boolean;\n   isTransfer: boolean;\n   isWithdraw: boolean;\n   isNews: boolean;\n}\n\nconst rows = 5;\n\nexport const Notifications = () => {\n   const [state, setState] = useState<State>({\n      isSecurity: true,\n      isWallet: false,\n      isTrade: false,\n      isDeposit: true,\n      isTransfer: false,\n      isWithdraw: true,\n      isNews: true,\n   });\n   const [isLoading, setIsLoading] = useState(false);\n   const [notifications, setNotifications] = useState<Notification[]>([]);\n   const [more, setMore] = useState<number>(rows);\n   const [markAllAsRead, setMarkAllAsRead] = useState(true);\n\n   useEffect(() => {\n      (async () => {\n         setIsLoading(true);\n         await axios.get('https://api.npoint.io/a69cae8e918567992ef0').then(res => {\n            setNotifications(res.data);\n            setIsLoading(false);\n         });\n      })();\n   }, []);\n\n   const selectAll = () => setState({\n      isSecurity: true,\n      isWallet: true,\n      isTrade: true,\n      isDeposit: true,\n      isTransfer: true,\n      isWithdraw: true,\n      isNews: true,\n   });\n   const unSelectAll = () => setState({\n      isSecurity: false,\n      isWallet: false,\n      isTrade: false,\n      isDeposit: false,\n      isTransfer: false,\n      isWithdraw: false,\n      isNews: false,\n   });\n\n   const {\n      isSecurity,\n      isWallet,\n      isTrade,\n      isDeposit,\n      isTransfer,\n      isWithdraw,\n      isNews,\n   } = state;\n\n   const handleSetMarkAllAsRead = () => setMarkAllAsRead(false);\n\n   const filteredNotifications = () => {\n      return notifications.filter(e =>\n         (e.type === 'security' && isSecurity) ||\n         (e.type === 'alert' && isWallet) ||\n         (e.type === 'trade' && isTrade) ||\n         (e.type === 'deposit' && isDeposit) ||\n         (e.type === 'transfer' && isTransfer) ||\n         (e.type === 'withdrawal' && isWithdraw) ||\n         (e.type === 'news' && isNews)\n      );\n   }\n\n   return (\n      <>\n         <section className=\"py-8 lg-max:pb-16 bg-neutral7 dark:bg-neutral1\">\n            <div className=\"w-full max-w-7xl px-8 md:px-10 lg:px-20 mx-auto\">\n               <div className=\"p-0 lg:p-10 rounded-lg bg-neutral7 lg:bg-neutral8 dark:bg-neutral1 dark:lg:bg-shade1\">\n                  <div className=\"flex md-max:flex-wrap md-max:mb-5 md-max:pb-0 md-max:border-none items-center mb-8 pb-8 border-b border-neutral6 dark:border-neutral3\">\n                     <div className=\"text-3.5xl leading-tight tracking-custom1 font-dm mr-auto md-max:shrink-0 md-max:grow-0 md-max:basis-full md-max:mb-5\">\n                        Notifications\n                     </div>\n                     <Button\n                        text=\"Mark all as read\"\n                        size=\"normal\"\n                        variant=\"outline\"\n                        className=\"mr-4\"\n                        width=\"noFull\"\n                        onClick={handleSetMarkAllAsRead}\n                     />\n                     <Button\n                        text=\"Clear all\"\n                        size=\"normal\"\n                        variant=\"outline\"\n                        width=\"noFull\"\n                        onClick={() => {\n                           setNotifications([]);\n                           unSelectAll();\n                        }}\n                     />\n                  </div>\n                  <div className=\"block md:flex flex-row-reverse\">\n                     <Button\n                        text=\"Advanced filter\"\n                        size=\"normal\"\n                        className=\"md:hidden\"\n                     />\n                     <div className=\"shrink-0 md-max:hidden md-max:pt-8 md:w-56.5 lg2:w-72.5 1xl:w-82\">\n                        <div className=\"mb-8 text-2xl leading-custom2 font-semibold tracking-custom1\">\n                           Filters\n                        </div>\n                        <div className=\"flex flex-col space-y-6 items-start\">\n                           <Checkbox\n                              text=\"Security\"\n                              checked={state.isSecurity}\n                              onChecked={() => setState({ ...state, isSecurity: !state.isSecurity })}\n                           />\n                           <Checkbox\n                              text=\"Wallet\"\n                              checked={state.isWallet}\n                              onChecked={() => setState({ ...state, isWallet: !state.isWallet })}\n                           />\n                           <Checkbox\n                              text=\"Trade\"\n                              checked={state.isTrade}\n                              onChecked={() => setState({ ...state, isTrade: !state.isTrade })}\n                           />\n                           <Checkbox\n                              text=\"Deposit\"\n                              checked={state.isDeposit}\n                              onChecked={() => setState({ ...state, isDeposit: !state.isDeposit })}\n                           />\n                           <Checkbox\n                              text=\"Transfer\"\n                              checked={state.isTransfer}\n                              onChecked={() => setState({ ...state, isTransfer: !state.isTransfer })}\n                           />\n                           <Checkbox\n                              text=\"Withdrawal\"\n                              checked={state.isWithdraw}\n                              onChecked={() => setState({ ...state, isWithdraw: !state.isWithdraw })}\n                           />\n                           <Checkbox\n                              text=\"News\"\n                              checked={state.isNews}\n                              onChecked={() => setState({ ...state, isNews: !state.isNews })}\n                           />\n                        </div>\n                        <div className=\"flex space-x-3 mt-6\">\n                           <Button\n                              text=\"Select all\"\n                              variant=\"outline\"\n                              size=\"normal\"\n                              width=\"noFull\"\n                              onClick={selectAll}\n                           />\n                           <Button\n                              text=\"Unslect all\"\n                              variant=\"outline\"\n                              size=\"normal\"\n                              width=\"noFull\"\n                              onClick={unSelectAll}\n                           />\n                        </div>\n                     </div>\n                     <div className=\"grow md-max:pt-12 pr-0 md:pr-8 lg:pr-12 lg2:pr-20\">\n                        <div className=\"-mx-8 md:mx-0 space-y-8\">\n                           {isLoading ? (\n                              <>\n                                 <div className=\"flex space-x-4 md-max:px-8 pb-6 [&:not(:last-child)]:border-b [&:not(:last-child)]:border-neutral6 dark:[&:not(:last-child)]:border-neutral3\">\n                                    <Skeleton height={48} width={48} rounded=\"full\" />\n                                    <div className=\"space-y-2\">\n                                       <div className=\"md-max:flex-wrap flex\">\n                                          <div className=\"md-max:shrink-0 md-max:grow-0 md-max:basis-full md-max:mb-2 !mr-auto pr-0 md:pr-8\">\n                                             <Skeleton height={20} width={270} />\n                                          </div>\n                                          <div className=\"shrink-0 md-max:mr-auto mt-0.5 text-xs leading-custom4 text-neutral4\">\n                                             <Skeleton height={20} width={107} />\n                                          </div>\n                                       </div>\n                                       <Skeleton height={40} isWithFull />\n                                    </div>\n                                 </div>\n                                 <div className=\"flex space-x-4 md-max:px-8 pb-6 [&:not(:last-child)]:border-b [&:not(:last-child)]:border-neutral6 dark:[&:not(:last-child)]:border-neutral3\">\n                                    <Skeleton height={48} width={48} rounded=\"full\" />\n                                    <div className=\"space-y-2\">\n                                       <div className=\"md-max:flex-wrap flex\">\n                                          <div className=\"md-max:shrink-0 md-max:grow-0 md-max:basis-full md-max:mb-2 !mr-auto pr-0 md:pr-8\">\n                                             <Skeleton height={20} width={270} />\n                                          </div>\n                                          <div className=\"shrink-0 md-max:mr-auto mt-0.5 text-xs leading-custom4 text-neutral4\">\n                                             <Skeleton height={20} width={107} />\n                                          </div>\n                                       </div>\n                                       <Skeleton height={40} isWithFull />\n                                    </div>\n                                 </div>\n                                 <div className=\"flex space-x-4 md-max:px-8 pb-6 [&:not(:last-child)]:border-b [&:not(:last-child)]:border-neutral6 dark:[&:not(:last-child)]:border-neutral3\">\n                                    <Skeleton height={48} width={48} rounded=\"full\" />\n                                    <div className=\"space-y-2\">\n                                       <div className=\"md-max:flex-wrap flex\">\n                                          <div className=\"md-max:shrink-0 md-max:grow-0 md-max:basis-full md-max:mb-2 !mr-auto pr-0 md:pr-8\">\n                                             <Skeleton height={20} width={270} />\n                                          </div>\n                                          <div className=\"shrink-0 md-max:mr-auto mt-0.5 text-xs leading-custom4 text-neutral4\">\n                                             <Skeleton height={20} width={107} />\n                                          </div>\n                                       </div>\n                                       <Skeleton height={40} isWithFull />\n                                    </div>\n                                 </div>\n                              </>\n                           ) : filteredNotifications().length ? filteredNotifications().slice(0, more).map(e => (\n                              <div key={e.id_notif} className=\"flex space-x-4 md-max:px-8 pb-6 [&:not(:last-child)]:border-b [&:not(:last-child)]:border-neutral6 dark:[&:not(:last-child)]:border-neutral3\">\n                                 <div className=\"flex items-center justify-center shrink-0 w-12 h-12 rounded-full border-2 border-neutral6 dark:border-neutral3\">\n                                    <svg className=\"w-6 h-6 fill-neutral4 transition-colors duration-300\">\n                                       <use xlinkHref={`#icon-${e.type === 'news' ? 'lightning' : e.type === 'trade' ? 'candlesticks' : e.type === 'deposit' ? 'wallet' : e.type === 'alert' ? 'coin' : e.type === 'security' ? 'lock' : e.type === 'transfer' ? 'share' : 'cloud'}`} />\n                                    </svg>\n                                 </div>\n                                 <div className=\"space-y-2\">\n                                    <div className=\"md-max:flex-wrap flex\">\n                                       <div className=\"md-max:shrink-0 md-max:grow-0 md-max:basis-full md-max:mb-2 !mr-auto pr-0 md:pr-8 text-base leading-normal font-medium\">\n                                          {truncateEnd(e.detail, 30)}\n                                       </div>\n                                       <div className=\"shrink-0 md-max:mr-auto mt-0.5 text-xs leading-custom4 text-neutral4\">\n                                          {localeDate(e.date, 'shortDate')}\n                                       </div>\n                                       {e.read && markAllAsRead && (\n                                          <div className=\"block shrink-0 w-3 h-3 mt-1.25 ml-4 rounded-full bg-primary5\" />\n                                       )}\n                                    </div>\n                                    <div className=\"text-xs leading-custom4 text-neutral4\">\n                                       {e.detail}\n                                    </div>\n                                 </div>\n                              </div>\n                           )) : (\n                              <div className=\"flex items-center justify-center h-96\">\n                                 <div className=\"flex flex-col items-center justify-center space-y-3\">\n                                    <IcEmty />\n                                    <div className=\"text-xs font-semibold text-neutral4\">\n                                       No result found\n                                    </div>\n                                 </div>\n                              </div>\n                           )}\n                        </div>\n                        {more < filteredNotifications()?.length && (\n                           <div className=\"text-center mt-8 md:mt-14\">\n                              <Button\n                                 text=\"Load more\"\n                                 variant=\"outline\"\n                                 size=\"normal\"\n                                 icRight={\n                                    <svg className=\"ml-3 w-4 h-4 fill-neutral4 dark:fill-neutral8\">\n                                       <use xlinkHref=\"#icon-calendar\" />\n                                    </svg>\n                                 }\n                                 width=\"noFull\"\n                                 onClick={() => setMore(more + rows)}\n                              />\n                           </div>\n                        )}\n                     </div>\n                  </div>\n               </div>\n               <div className=\"mt-4 p-8 rounded-lg\">\n                  <TutorialAlt />\n               </div>\n            </div>\n         </section>\n      </>\n   )\n}\n","import React, { useState } from 'react';\nimport { IcArrowRight, illusContact, illusContact2, } from 'assets';\nimport { Accordion, Nav } from 'components';\n\nexport const Contact = () => {\n   const [tab, setTab] = useState(0);\n   const accordionItems = [\n      {\n         title: 'Accordion Item #1',\n         content: (\n            <div>\n               <strong>This is the first item's accordion body.</strong> It is hidden\n               by default, but shown when title is clicked. It will also be hidden if\n               the title is clicked again or when another item is clicked. You can\n               pass HTML tags in the content such as <u>underline tag</u>,{' '}\n               <i>italic</i>, or even another list like this:\n               <ul>\n                  <li>Bread</li>\n                  <li>Eggs</li>\n                  <li>Milk</li>\n               </ul>\n            </div>\n         ),\n      },\n      {\n         title: 'Accordion Item #2',\n         content: (\n            <div>\n               <strong>This is the second item's accordion body.</strong> It is\n               hidden by default, but shown when title is clicked. It will also be\n               hidden if the title is clicked again or when another item is clicked.\n               You can pass HTML tags in the content such as <u>underline tag</u>,{' '}\n               <i>italic</i>, or even another list like this:\n               <ul>\n                  <li>Bread</li>\n                  <li>Eggs</li>\n                  <li>Milk</li>\n               </ul>\n            </div>\n         ),\n      },\n      {\n         title: 'Accordion Item #3',\n         content: (\n            <div>\n               <strong>This is the third item's accordion body.</strong> It is hidden\n               by default, but shown when title is clicked. It will also be hidden if\n               the title is clicked again or when another item is clicked. You can\n               pass HTML tags in the content such as <u>underline tag</u>,{' '}\n               <i>italic</i>, or even another list like this:\n               <ul>\n                  <li>Bread</li>\n                  <li>Eggs</li>\n                  <li>Milk</li>\n               </ul>\n            </div>\n         ),\n      },\n   ];\n   return (\n      <>\n         <section className=\"relative mb-16 md:mb-28 lg2:mb-34\">\n            <div className=\"block md:flex items-center min-h-auto md:min-h-740 pt-8 pb-4 md:pt-20 lg2:py-28 w-full max-w-7xl px-8 md:px-10 lg:px-20 mx-auto\">\n               <div className=\"relative z-3 w-full md:max-w-81.75 lg:max-w-545 mb-4 md:mb-0\">\n                  <div className=\"mb-3 text-base leading-none font-bold uppercase text-neutral4\">\n                     Save your time with Stacks\n                  </div>\n                  <div className=\"mb-5 text-5xl md:text-64 leading-custom1 md:leading-none tracking-custom font-dm\">\n                     How can we help\n                  </div>\n                  <div className=\"mb-6 text-base leading-normal text-neutral4\">\n                     A creative agency that lead and inspire\n                  </div>\n                  <form className=\"relative w-full md:max-w-72.5\">\n                     <input type=\"email\" className=\"w-full h-12 pl-3.5 pr-12 rounded-3xl bg-none dark:bg-transparent border-2 border-neutral6 dark:border-neutral3 dark:focus:border-neutral4 focus:border-neutral4 outline-none leading-custom dark:text-neutral8 transition-colors duration-300\" placeholder=\"Enter your email\" />\n                     <button type=\"submit\" onClick={e => e.preventDefault()} className=\"absolute inset-y-2 right-2 w-8 h-8 bg-primary1 rounded-full hover:bg-primary2 transition-all duration-300\">\n                        <IcArrowRight className=\"translate-x-1\" />\n                     </button>\n                  </form>\n               </div>\n               <div className=\"static md:absolute top-3 right-c-1/2-670 md:right-c-1/2-700 lg2:right-c-1/2-730 pl-4 md:pl-0 w-full md:w-700 lg2:w-785 pointer-events-none\">\n                  <img srcSet={`${illusContact2} 2x`} src={illusContact} alt=\"Contac\" title=\"Contact\" />\n               </div>\n            </div>\n         </section>\n         <section className=\"mb-16 md:mb-28 lg2:mb-34\">\n            <div className=\"w-full max-w-7xl px-8 md:px-10 lg:px-20 mx-auto\">\n               <div>\n                  <div className=\"text-4.5xl md:text-5xl leading-1.2 md:leading-custom1 tracking-custom1 md:tracking-custom font-dm mb-10 md:mb-12 text-center\">\n                     Frequently asked questions\n                  </div>\n                  <div className=\"hidden md:flex justify-center space-x-3 mb-10\">\n                     <Nav\n                        title=\"General\"\n                        isActive={tab === 0}\n                        onClick={() => setTab(0)}\n                     />\n                     <Nav\n                        title=\"Support\"\n                        isActive={tab === 1}\n                        onClick={() => setTab(1)}\n                     />\n                     <Nav\n                        title=\"Hosting\"\n                        isActive={tab === 2}\n                        onClick={() => setTab(2)}\n                     />\n                     <Nav\n                        title=\"Product\"\n                        isActive={tab === 3}\n                        onClick={() => setTab(3)}\n                     />\n                  </div>\n                  <div className=\"md:hidden\">\n                     <option value=\"\">\n                        <select name=\"\" id=\"\">general</select>\n                     </option>\n                  </div>\n               </div>\n               <div className=\"max-w-545 mx-auto\">\n                  <div>\n                     <div className=\"relative flex items-center py-6 text-base leading-normal font-medium text-primary1 [&.accordion-item:not(:last-child)]:border-b [&.accordion-item:not(:last-child)]:border-neutral6 dark:[&.accordion-item:not(:last-child)]:border-neutral3 cursor-pointer transition-colors duration-300\">\n                        <div className=\"shrink-0 w-10 text-neutral4 transition-colors duration-300\">\n                           01\n                        </div>\n                        <div className=\"grow\">\n                           How does it work?\n                        </div>\n                        <div className=\"flex shrink-0 justify-center items-center w-6 ml-4\">\n                           <svg className=\"w-6 h-6 fill-neutral4 transition-transform duration-300\">\n                              <use xlinkHref=\"#icon-arrow-down\" />\n                           </svg>\n                        </div>\n                     </div>\n                     <div className=\"hidden pt-6 pl-10 text-neutral4\">\n                        The Stacks series of products: Stacks: Landing Page Kit, Stacks: Portfolio Kit, Stacks: eCommerce Kit. \"Stacks is a production-ready library of stackable content blocks built in React Native. Mix-and-match dozens of responsive elements to quickly configure your favorite landing page layouts or hit the ground running with 10 pre-built templates, all in light or dark mode.\"\n                     </div>\n                  </div>\n                  <div>\n                     <div className=\"relative flex items-center py-6 text-base leading-normal font-medium text-primary1 [&.accordion-item:not(:last-child)]:border-b [&.accordion-item:not(:last-child)]:border-neutral6 dark:[&.accordion-item:not(:last-child)]:border-neutral3 cursor-pointer transition-colors duration-300\">\n                        <div className=\"shrink-0 w-10 text-neutral4 transition-colors duration-300\">\n                           01\n                        </div>\n                        <div className=\"grow\">\n                           How does it work?\n                        </div>\n                        <div className=\"flex shrink-0 justify-center items-center w-6 ml-4\">\n                           <svg className=\"w-6 h-6 fill-neutral4 transition-transform duration-300\">\n                              <use xlinkHref=\"#icon-arrow-down\" />\n                           </svg>\n                        </div>\n                     </div>\n                     <div className=\"hidden pt-6 pl-10 text-neutral4\">\n                        The Stacks series of products: Stacks: Landing Page Kit, Stacks: Portfolio Kit, Stacks: eCommerce Kit. \"Stacks is a production-ready library of stackable content blocks built in React Native. Mix-and-match dozens of responsive elements to quickly configure your favorite landing page layouts or hit the ground running with 10 pre-built templates, all in light or dark mode.\"\n                     </div>\n                  </div>\n                  <div>\n                     <div className=\"relative flex items-center py-6 text-base leading-normal font-medium text-primary1 [&.accordion-item:not(:last-child)]:border-b [&.accordion-item:not(:last-child)]:border-neutral6 dark:[&.accordion-item:not(:last-child)]:border-neutral3 cursor-pointer transition-colors duration-300\">\n                        <div className=\"shrink-0 w-10 text-neutral4 transition-colors duration-300\">\n                           01\n                        </div>\n                        <div className=\"grow\">\n                           How does it work?\n                        </div>\n                        <div className=\"flex shrink-0 justify-center items-center w-6 ml-4\">\n                           <svg className=\"w-6 h-6 fill-neutral4 transition-transform duration-300\">\n                              <use xlinkHref=\"#icon-arrow-down\" />\n                           </svg>\n                        </div>\n                     </div>\n                     <div className=\"hidden pt-6 pl-10 text-neutral4\">\n                        The Stacks series of products: Stacks: Landing Page Kit, Stacks: Portfolio Kit, Stacks: eCommerce Kit. \"Stacks is a production-ready library of stackable content blocks built in React Native. Mix-and-match dozens of responsive elements to quickly configure your favorite landing page layouts or hit the ground running with 10 pre-built templates, all in light or dark mode.\"\n                     </div>\n                  </div>\n                  <div>\n                     <div className=\"relative flex items-center py-6 text-base leading-normal font-medium text-primary1 [&.accordion-item:not(:last-child)]:border-b [&.accordion-item:not(:last-child)]:border-neutral6 dark:[&.accordion-item:not(:last-child)]:border-neutral3 cursor-pointer transition-colors duration-300\">\n                        <div className=\"shrink-0 w-10 text-neutral4 transition-colors duration-300\">\n                           01\n                        </div>\n                        <div className=\"grow\">\n                           How does it work?\n                        </div>\n                        <div className=\"flex shrink-0 justify-center items-center w-6 ml-4\">\n                           <svg className=\"w-6 h-6 fill-neutral4 transition-transform duration-300\">\n                              <use xlinkHref=\"#icon-arrow-down\" />\n                           </svg>\n                        </div>\n                     </div>\n                     <div className=\"hidden pt-6 pl-10 text-neutral4\">\n                        The Stacks series of products: Stacks: Landing Page Kit, Stacks: Portfolio Kit, Stacks: eCommerce Kit. \"Stacks is a production-ready library of stackable content blocks built in React Native. Mix-and-match dozens of responsive elements to quickly configure your favorite landing page layouts or hit the ground running with 10 pre-built templates, all in light or dark mode.\"\n                     </div>\n                  </div>\n                  <div>\n                     <div className=\"relative flex items-center py-6 text-base leading-normal font-medium text-primary1 [&.accordion-item:not(:last-child)]:border-b [&.accordion-item:not(:last-child)]:border-neutral6 dark:[&.accordion-item:not(:last-child)]:border-neutral3 cursor-pointer transition-colors duration-300\">\n                        <div className=\"shrink-0 w-10 text-neutral4 transition-colors duration-300\">\n                           01\n                        </div>\n                        <div className=\"grow\">\n                           How does it work?\n                        </div>\n                        <div className=\"flex shrink-0 justify-center items-center w-6 ml-4\">\n                           <svg className=\"w-6 h-6 fill-neutral4 transition-transform duration-300\">\n                              <use xlinkHref=\"#icon-arrow-down\" />\n                           </svg>\n                        </div>\n                     </div>\n                     <div className=\"hidden pt-6 pl-10 text-neutral4\">\n                        The Stacks series of products: Stacks: Landing Page Kit, Stacks: Portfolio Kit, Stacks: eCommerce Kit. \"Stacks is a production-ready library of stackable content blocks built in React Native. Mix-and-match dozens of responsive elements to quickly configure your favorite landing page layouts or hit the ground running with 10 pre-built templates, all in light or dark mode.\"\n                     </div>\n                  </div>\n                  <div className=\"accordion-item\">\n                     <div className=\"relative flex items-center py-6 text-base leading-normal font-medium text-primary1 [&.accordion-item:not(:last-child)]:border-b [&.accordion-item:not(:last-child)]:border-neutral6 dark:[&.accordion-item:not(:last-child)]:border-neutral3 cursor-pointer transition-colors duration-300\">\n                        <div className=\"shrink-0 w-10 text-neutral4 transition-colors duration-300\">\n                           01\n                        </div>\n                        <div className=\"grow\">\n                           How does it work?\n                        </div>\n                        <div className=\"flex shrink-0 justify-center items-center w-6 ml-4\">\n                           <svg className=\"w-6 h-6 fill-neutral4 transition-transform duration-300\">\n                              <use xlinkHref=\"#icon-arrow-down\" />\n                           </svg>\n                        </div>\n                     </div>\n                     <div className=\"hidden pt-6 pl-10 text-neutral4\">\n                        The Stacks series of products: Stacks: Landing Page Kit, Stacks: Portfolio Kit, Stacks: eCommerce Kit. \"Stacks is a production-ready library of stackable content blocks built in React Native. Mix-and-match dozens of responsive elements to quickly configure your favorite landing page layouts or hit the ground running with 10 pre-built templates, all in light or dark mode.\"\n                     </div>\n                  </div>\n\n                  <div className=\"container\">\n                     <h1>React TypeScript Accordion</h1>\n                     <Accordion items={accordionItems} />\n                     <footer className=\"footer\">\n                        <a href=\"https://dominicarrojado.com/posts/how-to-create-your-own-accordion-in-react-and-typescript-with-tests/\">\n                           Learn how to build this accordion in React and TypeScript\n                        </a>\n                     </footer>\n                  </div>\n\n               </div>\n            </div>\n         </section>\n      </>\n   )\n}\n","import React, {\n   Fragment,\n   FunctionComponent,\n   useCallback,\n   useEffect,\n   useState\n} from 'react';\nimport {\n   RouterProps,\n   withRouter\n} from 'react-router';\nimport { compose } from 'redux';\nimport {\n   connect,\n   MapDispatchToPropsFunction\n} from 'react-redux';\nimport {\n   Combobox,\n   Transition\n} from '@headlessui/react';\nimport {\n   Button,\n   InputGroup,\n   LayoutProfile,\n   Portal,\n   ProfileSidebar,\n   TableBeneficiary,\n   Listbox,\n   Decimal,\n   Label,\n   InputOtp,\n   Skeleton,\n} from 'components';\nimport {\n   useModal,\n   useForm\n} from 'hooks';\nimport { toast } from 'react-toastify';\nimport { injectIntl } from 'react-intl';\nimport { IntlProps } from 'index';\nimport {\n   copyToClipboard,\n   renderCurrencyIcon,\n   setDocumentTitle\n} from 'helpers';\nimport {\n   alertPush,\n   beneficiariesActivate,\n   BeneficiariesCreate,\n   beneficiariesCreate,\n   beneficiariesDelete,\n   beneficiariesResendPin,\n   BeneficiaryBank,\n   MemberLevels,\n   RootState,\n   selectBeneficiariesFetchLoading,\n   selectBeneficiariesCreateLoading,\n   selectBeneficiariesCreateSuccess,\n   selectBeneficiariesDeleteLoading,\n   selectBeneficiariesDeleteSuccess,\n   selectMemberLevels,\n   selectUserInfo,\n   selectWallets,\n   User,\n   Wallet,\n   walletsFetch,\n   Beneficiary,\n   selectBeneficiariesCreate,\n   selectBeneficiariesActivateLoading,\n   selectBeneficiariesActivateSuccess,\n   selectBeneficiariesResendPinLoading\n} from 'modules';\nimport { DEFAULT_WALLET } from '../../constants';\n// import { validateBeneficiaryAddress } from 'helpers/validateBeneficiaryAddress';\n\nimport { validate, getCurrencies } from 'multicoin-address-validator'\n\ntype ModalType = 'fiat' | 'coin' | '';\n\ntype State = {\n   currency?: string;\n   accountName: string;\n   accountNumber: string;\n   bank?: string;\n   network?: string;\n   address: string;\n   label: string;\n   description?: string;\n   destinationTag?: string;\n}\n\nconst people = [\n   { id: 1, name: 'Durward Reynolds', unavailable: false },\n   { id: 2, name: 'Kenton Towne', unavailable: false },\n   { id: 3, name: 'Therese Wunsch', unavailable: false },\n   { id: 4, name: 'Benedict Kessler', unavailable: true },\n   { id: 5, name: 'Katelyn Rohan', unavailable: false },\n];\n\ntype ReduxProps = {\n   wallets: Wallet[];\n   beneficiariesLoading: boolean;\n   beneficiary: Beneficiary;\n   beneficiariesCreateLoading: boolean;\n   beneficiariesCreateSuccess: boolean;\n   beneficiariesDeleteLoading: boolean;\n   beneficiariesDeleteSuccess: boolean;\n   beneficiariesActivateLoading: boolean;\n   beneficiariesActivateSuccess: boolean;\n   beneficiariesResendLoading: boolean;\n   memberLevels?: MemberLevels;\n   user: User;\n}\n\ntype DispatchProps = {\n   fecthWallets: typeof walletsFetch;\n   createBeneficiary: typeof beneficiariesCreate;\n   activateBeneficiary: typeof beneficiariesActivate;\n   deleteBeneficiary: typeof beneficiariesDelete;\n   resendPinBeneficiary: typeof beneficiariesResendPin;\n   fetchSuccess: typeof alertPush;\n}\n\ntype BeneficiariesProps = ReduxProps & DispatchProps & RouterProps & IntlProps;\n\nconst BeneficiariesFC = ({\n   wallets,\n   beneficiariesLoading,\n   beneficiary,\n   beneficiariesCreateLoading,\n   beneficiariesCreateSuccess,\n   beneficiariesDeleteLoading,\n   beneficiariesDeleteSuccess,\n   beneficiariesActivateLoading,\n   beneficiariesActivateSuccess,\n   beneficiariesResendLoading,\n   memberLevels,\n   user,\n   fecthWallets,\n   createBeneficiary,\n   activateBeneficiary,\n   deleteBeneficiary,\n   resendPinBeneficiary,\n   fetchSuccess,\n   history,\n   intl\n}: BeneficiariesProps) => {\n   const filteredWalletCoin = wallets.filter(wallet => wallet.type === 'coin');\n   const defaultWallet: Wallet = wallets.find(wallet => wallet.currency === 'usdt') || filteredWalletCoin[0] || DEFAULT_WALLET;\n\n   const { isShow, toggle } = useModal();\n   // const [openCreate, setOpenCreate] = useState(false);\n   // const [openActivate, setOpenActivate] = useState(false);\n   const [isShow2, setIsShow2] = useState(false);\n   const [modalType] = useState<ModalType>('coin');\n\n   const [coinAddressValid, setCoinAddressValid] = useState(false);\n\n   const [asset, setAsset] = useState(filteredWalletCoin)\n   const [selectedAsset, setSelectedAsset] = useState<Wallet>(defaultWallet);\n   const [searchAsset, setSearchAsset] = useState('');\n   const [selectedNetwork, setSelectedNetwork] = useState<{ [key: string]: any }>(selectedAsset.networks[0]);\n   const [selected, setSelected] = useState(people[0]);\n   const [pin, setPin] = useState('');\n\n   const assets = asset.filter(asset => asset.networks.length);\n\n   const filteredWallets = searchAsset === ''\n      ? assets\n      : assets\n         .filter(wallet =>\n            wallet.name\n               .toLowerCase()\n               .replace(/\\s+/g, '')\n               .includes(searchAsset.toLowerCase().replace(/\\s+/g, ''))\n            ||\n            wallet.currency\n               .toLowerCase()\n               .replace(/\\s+/g, '')\n               .includes(searchAsset.toLowerCase().replace(/\\s+/g, ''))\n         );\n\n   const [{\n      accountName,\n      accountNumber,\n      address,\n      label,\n      description,\n      destinationTag\n   }, setForm, setNewForm] = useForm<State>({\n      accountName: '',\n      accountNumber: '',\n      bank: '',\n      address: '',\n      label: '',\n      description: '',\n      destinationTag: '',\n   });\n\n   // const formattedNetwork = modalType === 'coin' && wallets.find(wallet => wallet.type === modalType)?.networks.find(network => network)?.protocol;\n\n   useEffect(() => {\n      setDocumentTitle('Beneficiaries');\n      setSelectedAsset(defaultWallet);\n      setSelectedNetwork(selectedAsset.networks[0]);\n   }, []);\n\n   useEffect(() => {\n      if (!wallets.length) {\n         fecthWallets()\n      }\n   }, [wallets]);\n\n   const toggle2 = () => setIsShow2(!isShow2);\n   // const handleShowCreate = () => setOpenCreate(true);\n   // const handleShowActivate = () => setOpenActivate(true);\n   // const handleCloseCreate = () => setOpenCreate(false);\n   // const handleCloseActivate = () => setOpenActivate(false);\n\n   // const handleShowModalCreateBeneficiary = (type: ModalType) => {\n   //    setModalType(type);\n   //    toggle2();\n   // }\n\n   const handleShowModalCreateBeneficiary = () => {\n      setAsset(filteredWalletCoin);\n      setSelectedAsset(defaultWallet);\n      setSelectedNetwork(defaultWallet.networks[0]);\n      toggle();\n   }\n\n   const resetField = () => {\n      setNewForm({\n         address: '',\n         label: '',\n         description: ''\n      });\n      setCoinAddressValid(false);\n   }\n\n   const handleCopy = (url: string, type: string) => {\n      copyToClipboard(url);\n      toast.info(`${type} Copied`);\n   };\n\n   const renderIconCopied = (title: string) => (\n      <button\n         className=\"cursor-copy group\"\n         onClick={() => handleCopy(address, title)}\n         title=\"Address referral\"\n      >\n         <svg className=\"w-6 h-6 group-hover:scale-110 fill-neutral4 group-hover:fill-neutral3 dark:group-hover:fill-neutral5 transition-transform duration-200\">\n            <use xlinkHref=\"#icon-copy\" />\n         </svg>\n      </button>\n   );\n\n   const validateCoinAddressFormat = (value: string) => {\n      const networkType = selectedNetwork.blockchain_key ? selectedNetwork.blockchain_key.split('-').pop() : '';\n      if (getCurrencies().some(currency => currency.symbol === selectedAsset.currency)) {\n         const valid = validate(value, selectedAsset.currency, networkType);\n         setCoinAddressValid(valid ? false : true);\n      }\n   };\n\n   // const renderSelectTypeBeneficiaryModal = () => (\n   //    <div className=\"pt-10 space-y-8\">\n   //       <div className=\"space-y-3\">\n   //          <div className=\"font-dm text-2xl leading-9 text-center tracking-custom\">\n   //             Select asset type\n   //          </div>\n   //          <div className=\"max-w-82 mx-auto text-center text-xs text-neutral4 leading-5\">\n   //             Please select the type of asset you want to add the beneficiaries to\n   //          </div>\n   //       </div>\n   //       <div className=\"flex space-x-4\">\n   //          <Button\n   //             text=\"Coin\"\n   //             onClick={() => {\n   //                handleShowModalCreateBeneficiary('coin');\n   //                setSelectedAsset(defaultWallet);\n   //                setSelectedNetwork(selectedAsset.networks[0]);\n   //             }}\n   //          />\n   //          <Button\n   //             text=\"Fiat\"\n   //             variant=\"outline\"\n   //             onClick={() => handleShowModalCreateBeneficiary('fiat')}\n   //          />\n   //       </div>\n   //    </div>\n   // );\n\n   // const formatedWallet = wallets.length ? wallets.find(wallet => wallet.currency === selectedAsset?.currency) : DEFAULT_WALLET;\n\n   const renderSelectAsset = () => (\n      <Combobox\n         value={selectedAsset}\n         onChange={setSelectedAsset}\n      >\n         <div className=\"relative\">\n            <Label label=\"Select currency\" />\n            <div className=\"relative mt-2.5\">\n               <Combobox.Input\n                  className={({ open }) => `px-3.5 rounded-xl font-medium leading-12 outline-none border-2 ${open ? 'text-primary1 border-neutral4 dark:border-neutral4' : 'border-neutral6 dark:border-neutral3'} bg-none bg-transparent shadow-none transition ease-in-out duration-300 pr-12 h-12 w-full truncate`}\n                  displayValue={(currency: { name: string }) => `${currency && currency.name || 'Nothing found...'}`}\n                  onChange={({ target: { value } }) => setSearchAsset(value)}\n                  onFocus={(e: { target: { select: () => void; }; }) => e.target.select()}\n               />\n               <Combobox.Button className=\"group absolute inset-y-0 right-0 flex items-center pr-2\">\n                  <svg className=\"h-5 w-5 fill-neutral4 group-hover:fill-neutral2 dark:group-hover:fill-neutral6 transition-colors duration-300\">\n                     <use xlinkHref=\"#icon-search\" />\n                  </svg>\n               </Combobox.Button>\n            </div>\n            <Transition\n               as={Fragment}\n               enter=\"transition-all\"\n               enterFrom=\"opacity-0 scale-75 -translate-y-5\"\n               enterTo=\"opacity-100 scale-100 translate-y-0\"\n               leave=\"transition-transform duration-300\"\n               leaveFrom=\"opacity-100 scale-100 translate-y-0\"\n               leaveTo=\"opacity-0 scale-75 -translate-y-5\"\n               afterLeave={() => setSearchAsset('')}\n            >\n               <Combobox.Options className=\"absolute max-h-72 w-full overflow-auto z-[9] mt-0.5 rounded-xl outline-none bg-neutral8 dark:bg-neutral1 border-2 border-neutral6 dark:border-neutral3 shadow-dropdown-2 dark:shadow-dropdown-3\">\n                  {filteredWallets.length === 0 && searchAsset !== '' ? (\n                     <div className=\"px-3.5 py-2.5 leading-[1.4] transition-all duration-200\">\n                        Nothing found...\n                     </div>\n                  ) : (\n                     filteredWallets.map(wallet => (\n                        <Combobox.Option\n                           key={wallet.currency}\n                           className={({ active }) => `relative ${active ? 'bg-neutral7 dark:bg-neutral2' : ''} px-3.5 py-2.5 leading-[1.4] font-medium transition-all duration-200`}\n                           value={wallet}\n                        >\n                           {({ selected, active }) => (\n                              <div className=\"flex items-center justify-between\">\n                                 <div className=\"flex items-center space-x-3\">\n                                    <div className=\"w-8 h-8 overflow-hidden pointer-events-none\">\n                                       <img\n                                          src={renderCurrencyIcon(wallet.currency, wallet?.iconUrl)}\n                                          className={`w-full ${renderCurrencyIcon(wallet.currency, wallet?.iconUrl)?.includes('http') ? 'object-cover bg-neutral8 polygon' : ''}`}\n                                          alt={wallet.name}\n                                          title={wallet.name}\n                                       />\n                                    </div>\n                                    <div className={`block truncate ${selected ? 'text-primary1 font-medium' : ''}`}>\n                                       {wallet?.name} <span className=\"text-neutral4\">{wallet.currency.toUpperCase()}</span>\n                                    </div>\n                                 </div>\n                                 <div className=\"text-neutral4\">\n                                    {Decimal.format(wallet.balance || 0, wallet.fixed, ',')} {wallet.currency.toUpperCase()}\n                                 </div>\n                              </div>\n                           )}\n                        </Combobox.Option>\n                     ))\n                  )}\n               </Combobox.Options>\n            </Transition>\n         </div>\n      </Combobox>\n   );\n   const renderCreateBeneficiaryModal = () => (\n      <>\n         {modalType === 'coin' ? (\n            <>\n               {renderSelectAsset()}\n               {selectedAsset.networks.length ? selectedAsset.networks.filter(e => e.protocol !== '').length && (\n                  <Listbox\n                     label=\"Network\"\n                     objectKey=\"protocol\"\n                     list={selectedNetwork}\n                     lists={selectedAsset.networks}\n                     onChange={setSelectedNetwork}\n                     info={!selectedNetwork?.withdrawal_enabled || !selectedAsset.networks.length ? 'This network disabled' : ''}\n                  />\n               ) : (\n                  <div className=\"text-primary4 text-x leading-relaxed font-medium\">\n                     Network disabled\n                  </div>\n               )}\n               <InputGroup\n                  id=\"address\"\n                  label=\"Address\"\n                  placeholder=\"Enter address\"\n                  value={address}\n                  onChange={validateCoinAddressFormat}\n                  onChangeAlt={setForm}\n                  icon={renderIconCopied('Address')}\n                  className=\"truncate\"\n                  withError={coinAddressValid}\n                  info={coinAddressValid && 'Invalid Address' || ''}\n               />\n            </>\n         ) : (\n            <>\n               <InputGroup\n                  id=\"accountName\"\n                  label=\"account name\"\n                  value={accountName}\n                  onChangeAlt={setForm}\n                  placeholder=\"Enter account name\"\n               />\n               <Listbox\n                  label=\"Bank\"\n                  objectKey={'name'}\n                  list={selected}\n                  lists={people}\n                  onChange={setSelected}\n               />\n               <InputGroup\n                  id=\"accountNumber\"\n                  label=\"account number\"\n                  placeholder=\"Enter account number\"\n                  value={accountNumber}\n                  onChangeAlt={setForm}\n                  icon={renderIconCopied('Acoount number')}\n                  className=\"truncate\"\n               />\n            </>\n         )}\n         <InputGroup\n            id=\"label\"\n            label=\"Label\"\n            value={label}\n            onChangeAlt={setForm}\n            placeholder=\"Enter label\"\n         />\n         {modalType === 'coin' && (\n            <InputGroup\n               id=\"description\"\n               label=\"Description\"\n               value={description}\n               onChangeAlt={setForm}\n               placeholder=\"Enter Description (optional)\"\n            />\n         )}\n         {isRipple && (\n            <InputGroup\n               id=\"destinationTag\"\n               label=\"Description\"\n               value={destinationTag}\n               onChangeAlt={setForm}\n               placeholder=\"Enter destination tag (optional)\"\n            />\n         )}\n         <div className=\"bg-neutral7 dark:bg-neutral3 py-5 px-6 rounded text-center\">\n            <div className=\"text-base leading-normal font-medium\">\n               Attention\n            </div>\n            <div className=\"text-neutral4\">\n               Please note that transaction to wrong network and address will cause your asset to permanently lost, so fill correctly.\n            </div>\n         </div>\n         <Button\n            text=\"Add beneficiary\"\n            disabled={isDisabled()}\n            withLoading={beneficiariesCreateLoading}\n            onClick={handleCreateBeneficiary}\n         />\n      </>\n   );\n\n   const isDisabled = (): boolean => {\n      const withdrawEnabled = selectedNetwork?.withdrawal_enabled;\n      return !withdrawEnabled || !address || !label || coinAddressValid;\n   }\n\n   const isRipple = selectedAsset.currency === 'xrp';\n\n   const handleCreateBeneficiary = () => {\n      const payloadCoin: BeneficiariesCreate['payload'] = {\n         currency: selectedAsset.currency,\n         blockchain_key: selectedNetwork.blockchain_key || '',\n         name: label,\n         data: JSON.stringify({\n            address: ((isRipple && destinationTag) ? `${address}?dt=${destinationTag}` : address)\n         }),\n         ...(description && { description })\n      }\n      const dataBeneficiary: BeneficiaryBank = {\n         full_name: '',\n         account_number: '',\n         bank_name: '',\n         bank_swift_code: '',\n         intermediary_bank_name: '',\n         intermediary_bank_swift_code: '',\n      }\n      const payloadFiat: BeneficiariesCreate['payload'] = {\n         currency: selectedAsset.currency,\n         name: label,\n         data: JSON.stringify(dataBeneficiary),\n         ...(description && { description })\n      }\n\n      createBeneficiary(modalType === 'coin' ? payloadCoin : payloadFiat);\n   }\n\n   const translate = (id: string) => intl.formatMessage({ id });\n\n   const handleConfirmActivate = () => activateBeneficiary({ id: beneficiary.id, pin });\n\n   useEffect(() => {\n      if (beneficiariesCreateSuccess) {\n         if (isShow) {\n            toggle();\n            toggle2();\n            resetField();\n            console.log('Created Successfully');\n         }\n      }\n      if (beneficiariesActivateSuccess) {\n         if (isShow2) {\n            toggle2();\n            resetField();\n            setPin('');\n            console.log('Activate Successfully');\n         }\n      }\n      if (pin.length === 6) {\n         handleConfirmActivate();\n      }\n   }, [beneficiariesCreateSuccess, beneficiariesActivateSuccess, pin]);\n   useEffect(() => {\n      setSelectedNetwork(selectedAsset.networks[0]);\n      resetField();\n   }, [selectedAsset]);\n\n   const renderTableBeneficiaries = useCallback(() => (\n      <TableBeneficiary withSearch />\n   ), [])\n\n   return (\n      <>\n         <LayoutProfile\n            title=\"Beneficiaries\"\n            withBreadcrumbs={{\n               display: 'Home',\n               href: '/',\n               active: 'Beneficiaries',\n            }}\n         >\n            <ProfileSidebar />\n            <div className=\"grow p-4 md:px-8 md:py-10 lg:p-10 shadow-card2 rounded-2xl bg-neutral8 dark:bg-shade1\" style={{ animationDuration: '100ms' }}>\n               <div className=\"space-y-12\">\n                  <div className=\"flex items-center justify-between\">\n                     <div className=\"text-2xl leading-custom2 font-semibold tracking-custom1\">\n                        List of beneficiaries\n                     </div>\n                     <Button\n                        text=\"Create beneficiary\"\n                        size=\"normal\"\n                        width=\"noFull\"\n                        disabled={memberLevels?.withdraw.minimum_level !== user.level}\n                        onClick={handleShowModalCreateBeneficiary}\n                     />\n                  </div>\n                  {renderTableBeneficiaries()}\n               </div>\n            </div>\n         </LayoutProfile>\n\n         {/* Modal Select Type Asset */}\n         {/* <Portal\n            show={isShow}\n            close={toggle}\n         >\n            {renderSelectTypeBeneficiaryModal()}\n         </Portal> */}\n         {/* End Modal Select Type Asset */}\n\n         {/* Modal Create Beneficiary */}\n         <Portal\n            show={isShow}\n            close={toggle}\n            zIndexBackdrop={1045}\n            zIndexContent={1046}\n            title={`${modalType === 'coin' ? 'Coin' : 'Fiat'} Beneficiary`}\n            onClick={toggle}\n         >\n            {renderCreateBeneficiaryModal()}\n         </Portal>\n         {/* End Modal Create Beneficiary */}\n\n         {/* Modal Confirm Beneficiary */}\n         <Portal\n            show={isShow2}\n            close={toggle2}\n            onClick={toggle2}\n         >\n            <div className=\"pt-10 space-y-8\">\n               <div className=\"space-y-3\">\n                  <div className=\"font-dm text-2xl leading-9 text-center tracking-custom\">\n                     Beneficiaries Activation\n                  </div>\n                  <div className=\"max-w-82 mx-auto text-center text-xs text-neutral4 leading-5\">\n                     Save the new address, Please enter the code that we sent to your email.\n                  </div>\n               </div>\n               <InputOtp\n                  length={6}\n                  className=\"flex -mx-2\"\n                  isNumberInput\n                  onChangeOTP={setPin}\n               />\n               <div className=\"space-y-3 text-center\">\n                  <Button\n                     text={translate('page.body.profile.apiKeys.modal.btn.create')}\n                     disabled={pin.length !== 6}\n                     onClick={handleConfirmActivate}\n                     withLoading={beneficiariesActivateLoading || beneficiariesDeleteLoading}\n                  />\n                  <button\n                     className={beneficiariesResendLoading ? '' : 'text-primary1 font-medium hover:underline hover:underline-offset-4'}\n                     disabled={beneficiariesResendLoading}\n                     onClick={() => resendPinBeneficiary({ id: beneficiary.id })}\n                  >\n                     {!beneficiariesResendLoading ? 'Resend code' : (\n                        <Skeleton width={100} height={20} />\n                     )}\n                  </button>\n               </div>\n            </div>\n         </Portal>\n         {/* End Modal Create Beneficiary */}\n      </>\n   );\n};\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   wallets: selectWallets(state),\n   beneficiariesLoading: selectBeneficiariesFetchLoading(state),\n   beneficiary: selectBeneficiariesCreate(state),\n   beneficiariesCreateLoading: selectBeneficiariesCreateLoading(state),\n   beneficiariesCreateSuccess: selectBeneficiariesCreateSuccess(state),\n   beneficiariesDeleteLoading: selectBeneficiariesDeleteLoading(state),\n   beneficiariesDeleteSuccess: selectBeneficiariesDeleteSuccess(state),\n   beneficiariesActivateLoading: selectBeneficiariesActivateLoading(state),\n   beneficiariesActivateSuccess: selectBeneficiariesActivateSuccess(state),\n   beneficiariesResendLoading: selectBeneficiariesResendPinLoading(state),\n   memberLevels: selectMemberLevels(state),\n   user: selectUserInfo(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   fecthWallets: () => dispatch(walletsFetch()),\n   createBeneficiary: payload => dispatch(beneficiariesCreate(payload)),\n   activateBeneficiary: payload => dispatch(beneficiariesActivate(payload)),\n   deleteBeneficiary: ({ id }) => dispatch(beneficiariesDelete({ id })),\n   resendPinBeneficiary: ({ id }) => dispatch(beneficiariesResendPin({ id })),\n   fetchSuccess: payload => dispatch(alertPush(payload)),\n});\n\nexport const Beneficiaries = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps)\n)(BeneficiariesFC) as FunctionComponent;\n","import React, {\n   FunctionComponent,\n   memo,\n   useEffect,\n   useMemo,\n   useRef,\n   useState\n} from 'react';\nimport { compose } from 'redux';\nimport {\n   connect,\n   MapDispatchToPropsFunction\n} from 'react-redux';\nimport {\n   RouterProps,\n   withRouter\n} from 'react-router';\nimport { injectIntl } from 'react-intl';\nimport {\n   Button,\n   CellDetail,\n   Decimal,\n   Dialog,\n   InputGroup,\n   LayoutProfile,\n   ModalRequired,\n   Nav,\n   Portal,\n   Skeleton\n} from 'components';\nimport { Listbox } from '@headlessui/react'\nimport {\n   alertPush,\n   beneficiariesFetch,\n   beneficiariesCreate,\n   beneficiariesDelete,\n   beneficiariesResendPin,\n   beneficiariesActivate,\n   beneficiariesDataUpdate,\n   selectBeneficiaries,\n   selectBeneficiariesFetchLoading,\n   selectWallets,\n   walletsFetch,\n   memberLevelsFetch,\n   selectCurrentColorTheme,\n   MemberLevels,\n   selectMemberLevels,\n   BeneficiariesCreate,\n   BeneficiaryBank,\n} from 'modules';\nimport type {\n   Beneficiary,\n   RootState,\n   Wallet,\n} from 'modules';\nimport {\n   arrayFilter,\n   copyToClipboard,\n   renderCurrencyIcon,\n   setDocumentTitle,\n   truncateMiddle\n} from 'helpers';\nimport {\n   IcEmty,\n   IcShorting\n} from 'assets';\nimport { SearchIcon } from '@heroicons/react/outline';\nimport { IntlProps } from 'index';\nimport { useForm, useModal, useStep } from 'hooks';\nimport { toast } from 'react-toastify';\nimport { getCurrencies, validate } from 'multicoin-address-validator';\n\ntype State = {\n   accountName: string;\n   accountNumber: string;\n   bank?: string;\n   address: string;\n   label: string;\n   description?: string;\n   destinationTag?: string;\n}\n\ntype ReduxProps = {\n   theme: string;\n   wallets: Wallet[];\n   beneficiaries: Beneficiary[];\n   beneficiariesLoading: boolean;\n   memberLevels?: MemberLevels;\n}\n\ntype OwnProps = {\n   location: {\n      state: {\n         wallet: Wallet;\n      };\n   };\n}\n\ninterface DispatchProps {\n   fecthWallets: typeof walletsFetch;\n   fetchMemberLevel: typeof memberLevelsFetch;\n   fetchBeneficiaries: typeof beneficiariesFetch;\n   createBeneficiary: typeof beneficiariesCreate;\n   updateBeneficiary: typeof beneficiariesDataUpdate;\n   activateBeneficiary: typeof beneficiariesActivate;\n   deleteBeneficiary: typeof beneficiariesDelete;\n   resendPinBeneficiary: typeof beneficiariesResendPin;\n   fetchSuccess: typeof alertPush;\n}\n\ntype WithdrawalProps = ReduxProps & OwnProps & DispatchProps & RouterProps & IntlProps;\n\nconst WithdrawalFC = memo(({\n   theme,\n   wallets,\n   beneficiaries,\n   beneficiariesLoading,\n   memberLevels,\n   location,\n   fecthWallets,\n   fetchMemberLevel,\n   fetchBeneficiaries,\n   createBeneficiary,\n   updateBeneficiary,\n   activateBeneficiary,\n   deleteBeneficiary,\n   resendPinBeneficiary,\n   fetchSuccess,\n   history: { push },\n   intl\n}: WithdrawalProps) => {\n   let userWallets = wallets.length ? wallets : [];\n\n   const { isShow, toggle } = useModal();\n   const [stepActive, setStepActive] = useState(1);\n   const [walletActive, setWalletActive] = useState<Wallet['currency']>('');\n   const [networkActive, setNetworkActive] = useState(0);\n   const [searchMarket, setSearchMarket] = useState('');\n\n   const [selectedNetwork, setSelectedNetwork] = useState(userWallets[0]?.networks[0]);\n   const [listNetwork, setListNetwork] = useState(userWallets[0]?.networks);\n   const [coinAddressValid, setCoinAddressValid] = useState(false);\n\n   const [isOpenBeneficiary, setIsOpenBeneficiary] = useState(false);\n   const [showModalSuccessPurchased, setShowModalSuccessPurchased] = useState(false);\n\n   const [{ address, label, description, destinationTag }, setField] = useForm<State>({\n      accountName: '',\n      accountNumber: '',\n      bank: '',\n      address: '',\n      label: '',\n      description: '',\n      destinationTag: '',\n   });\n\n   const mainRef = useRef<HTMLDivElement>(null);\n\n   useEffect(() => {\n      setDocumentTitle('Withdrawal')\n      fetchMemberLevel();\n   }, []);\n\n   useEffect(() => {\n      if (location.state?.wallet) {\n         setStepActive(2);\n         setWalletActive(location.state?.wallet && location.state?.wallet?.currency);\n         window.scrollTo({\n            top: mainRef.current?.offsetTop,\n            behavior: 'smooth'\n         });\n      }\n   }, [location.state]);\n\n   useEffect(() => {\n      if (!beneficiaries.length) {\n         if (stepActive === 2) {\n            fetchBeneficiaries();\n         }\n      }\n      if (stepActive === 2) {\n         setSelectedNetwork(userWallets[0]?.networks[0]);\n         setListNetwork(userWallets[0]?.networks);\n      }\n   }, [stepActive]);\n\n   useEffect(() => {\n      if (listNetwork) {\n         if (address) {\n            validateCoinAddressFormat(address);\n         }\n      }\n   }, [listNetwork]);\n\n   useEffect(() => {\n      if (!wallets.length) {\n         fecthWallets()\n      }\n   }, [wallets]);\n\n   const translate = (id: string) => intl.formatMessage({ id });\n\n   if (searchMarket) {\n      userWallets = userWallets.length ? arrayFilter(userWallets, searchMarket) : [];\n   }\n\n   if (walletActive) {\n      userWallets = userWallets.length ? userWallets.filter(wallet => wallet.currency === walletActive) : [];\n   }\n\n   const handleStep = (currency: Wallet['currency'], i: number) => {\n      setStepActive(i);\n      setWalletActive(currency);\n      window.scrollTo({\n         top: mainRef.current?.offsetTop,\n         behavior: 'smooth'\n      });\n   }\n   const handleStepStep = (currency: Wallet['currency'], i: number) => {\n      nextStep();\n      setWalletActive(currency);\n      window.scrollTo({\n         top: mainRef.current?.offsetTop,\n         behavior: 'smooth'\n      });\n   }\n\n   const handleSetShowModalSuccessPurchased = () => setShowModalSuccessPurchased(!showModalSuccessPurchased);\n   const handleShowBeneficiary = () => setIsOpenBeneficiary(prev => !prev);\n\n   const renderAsset = useMemo(() => (\n      <>\n         <div className=\"mb-5 text-2xl leading-custom2 font-semibold tracking-custom1\">\n            Select crypto\n         </div>\n         <form className=\"relative shrink-0 mb-10\">\n            <InputGroup\n               placeholder=\"Search coin\"\n               onChange={setSearchMarket}\n               autoFocus\n               icon={\n                  <SearchIcon className=\"w-5 h-5 stroke-neutral4 transition-all duration-300\" />\n               }\n            />\n            <button\n               type=\"button\"\n               className=\"absolute top-0 right-0 h-12 w-12 bg-none flex items-center justify-center\"\n            >\n               <SearchIcon className=\"w-5 h-5 stroke-neutral4 transition-all duration-300\" />\n            </button>\n         </form>\n         <div className=\"overflow-x-auto\">\n            <table className=\"w-full table-auto\">\n               <thead>\n                  <tr>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer\">\n                           <div>#</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer\">\n                           <div>Name</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4 text-right\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer justify-end\">\n                           <div>Balance</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {userWallets.length ? userWallets.map((userWallet, index) => (\n                     <tr\n                        key={userWallet.currency}\n                        style={{ transition: 'background .2s' }}\n                        className=\"group\"\n                        onClick={() => {\n                           if ((userWallet.type === 'fiat' && Number(memberLevels?.withdraw.minimum_level) < 4)) {\n                              toggle();\n                           } else {\n                              handleStep(userWallet.currency, 2);\n                           }\n                        }}\n                     >\n                        <td className=\"rounded-l-xl text-neutral4 align-middle font-semibold text-xs p-4 leading-custom4 group-hover:bg-neutral7 dark:group-hover:bg-neutral2 transition-all duration-300\">\n                           <div className=\"flex space-x-2 items-center\">\n                              <svg className=\"w-4 h-4 fill-neutral4 hover:fill-secondary3 transition-all duration-300\">\n                                 <use xlinkHref=\"#icon-star-outline\"></use>\n                              </svg>\n                              <div>{index + 1}</div>\n                           </div>\n                        </td>\n                        <td className=\"p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 transition-all duration-300\">\n                           <div className=\"flex space-x-3 items-center\">\n                              <div className=\"shrink-0 w-8\">\n                                 <img\n                                    className={`w-full ${renderCurrencyIcon(userWallet.currency, userWallet.iconUrl)?.includes('http') ? 'polygon' : ''}`}\n                                    src={renderCurrencyIcon(userWallet.currency, userWallet.iconUrl)}\n                                    alt={userWallet.name}\n                                    title={userWallet.name}\n                                 />\n                              </div>\n                              <div className=\"flex items-center space-x-1\">\n                                 <div>{userWallet.name}</div>\n                                 <div className=\"font-normal text-neutral4 uppercase\">{userWallet.currency}</div>\n                              </div>\n                           </div>\n                        </td>\n                        <td className=\"rounded-r-xl p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 text-right transition-all duration-300\">\n                           <div>{Decimal.format(userWallet.balance, userWallet.fixed, ',')}</div>\n                        </td>\n                     </tr>\n                  )) : (\n                     <tr>\n                        <td colSpan={3}>\n                           <div className=\"min-h-96 flex flex-col items-center justify-center space-y-3 transition-transform duration-1000\">\n                              <IcEmty className={theme === 'dark' ? 'brightness-75' : ''} />\n                              <div className=\"text-xs font-semibold text-neutral4\">\n                                 {translate('noResultFound')}\n                              </div>\n                           </div>\n                        </td>\n                     </tr>\n                  )}\n               </tbody>\n            </table>\n         </div>\n      </>\n   ), [userWallets, setSearchMarket, searchMarket]);\n   const renderAssetStep = useMemo(() => (\n      <>\n         <div className=\"mb-5 text-2xl leading-custom2 font-semibold tracking-custom1\">\n            Select crypto\n         </div>\n         <form className=\"relative shrink-0 mb-10\">\n            <InputGroup\n               placeholder=\"Search coin\"\n               onChange={setSearchMarket}\n               autoFocus\n               icon={\n                  <SearchIcon className=\"w-5 h-5 stroke-neutral4 transition-all duration-300\" />\n               }\n            />\n            <button\n               type=\"button\"\n               className=\"absolute top-0 right-0 h-12 w-12 bg-none flex items-center justify-center\"\n            >\n               <SearchIcon className=\"w-5 h-5 stroke-neutral4 transition-all duration-300\" />\n            </button>\n         </form>\n         <div className=\"overflow-x-auto\">\n            <table className=\"w-full table-auto\">\n               <thead>\n                  <tr>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer\">\n                           <div>#</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer\">\n                           <div>Name</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4 text-right\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer justify-end\">\n                           <div>Balance</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {userWallets.length ? userWallets.map((userWallet, index) => (\n                     <tr\n                        key={userWallet.currency}\n                        style={{ transition: 'background .2s' }}\n                        className=\"group\"\n                        onClick={() => {\n                           if ((userWallet.type === 'fiat' && Number(memberLevels?.withdraw.minimum_level) < 4)) {\n                              toggle();\n                           } else {\n                              handleStepStep(userWallet.currency, 2);\n                           }\n                        }}\n                     >\n                        <td className=\"rounded-l-xl text-neutral4 align-middle font-semibold text-xs p-4 leading-custom4 group-hover:bg-neutral7 dark:group-hover:bg-neutral2 transition-all duration-300\">\n                           <div className=\"flex space-x-2 items-center\">\n                              <svg className=\"w-4 h-4 fill-neutral4 hover:fill-secondary3 transition-all duration-300\">\n                                 <use xlinkHref=\"#icon-star-outline\"></use>\n                              </svg>\n                              <div>{index + 1}</div>\n                           </div>\n                        </td>\n                        <td className=\"p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 transition-all duration-300\">\n                           <div className=\"flex space-x-3 items-center\">\n                              <div className=\"shrink-0 w-8\">\n                                 <img\n                                    className={`w-full ${renderCurrencyIcon(userWallet.currency, userWallet.iconUrl)?.includes('http') ? 'polygon' : ''}`}\n                                    src={renderCurrencyIcon(userWallet.currency, userWallet.iconUrl)}\n                                    alt={userWallet.name}\n                                    title={userWallet.name}\n                                 />\n                              </div>\n                              <div className=\"flex items-center space-x-1\">\n                                 <div>{userWallet.name}</div>\n                                 <div className=\"font-normal text-neutral4 uppercase\">{userWallet.currency}</div>\n                              </div>\n                           </div>\n                        </td>\n                        <td className=\"rounded-r-xl p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 text-right transition-all duration-300\">\n                           <div>{Decimal.format(userWallet.balance, userWallet.fixed, ',')}</div>\n                        </td>\n                     </tr>\n                  )) : (\n                     <tr>\n                        <td colSpan={3}>\n                           <div className=\"min-h-96 flex flex-col items-center justify-center space-y-3 transition-transform duration-1000\">\n                              <IcEmty className={theme === 'dark' ? 'brightness-75' : ''} />\n                              <div className=\"text-xs font-semibold text-neutral4\">\n                                 {translate('noResultFound')}\n                              </div>\n                           </div>\n                        </td>\n                     </tr>\n                  )}\n               </tbody>\n            </table>\n         </div>\n      </>\n   ), [userWallets, setSearchMarket, searchMarket]);\n\n   const renderBeneficiary = useMemo(() => (\n      <div className=\"space-y-8\">\n         <div className=\"flex items-center justify-between\">\n            <button\n               type=\"button\"\n               onClick={() => {\n                  setStepActive(1);\n                  setNetworkActive(0);\n                  setWalletActive('');\n               }}\n               className=\"group flex items-center text-2xl font-semibold leading-custom2 tracking-custom1\"\n            >\n               <svg className=\"w-3.5 h-3.5 mr-4 fill-neutral4 group-hover:-translate-x-1 transition-all duration-300\">\n                  <use xlinkHref=\"#icon-arrow-prev\" />\n               </svg>\n               List of beneficiaries\n            </button>\n            <div className=\"flex items-center text-base font-medium\">\n               {userWallets[0]?.name || ''}\n               <img\n                  src={renderCurrencyIcon(userWallets[0]?.currency, userWallets[0]?.iconUrl)}\n                  className={`w-6 ml-3 ${renderCurrencyIcon(userWallets[0]?.currency, userWallets[0]?.iconUrl)?.includes('http') ? 'polygon' : ''}`}\n                  alt={userWallets[0]?.name}\n                  title={userWallets[0]?.name}\n               />\n            </div>\n         </div>\n         <div className=\"space-x-4 hidden\">\n            {userWallets[0]?.networks.map((network, index) => (\n               <Button\n                  key={network.blockchain_key}\n                  text={network.protocol}\n                  size=\"small\"\n                  width=\"noFull\"\n                  rounded=\"lg\"\n                  fontDM={false}\n                  variant={networkActive === index ? \"primary\" : \"outline\"}\n                  onClick={() => setNetworkActive(index)}\n               />\n            ))}\n         </div>\n         <div className=\"\">\n            <div className=\"flex space-x-4\">\n               {userWallets[0]?.networks.map((network, index) => (\n                  <Nav\n                     key={network.blockchain_key}\n                     title={network.protocol}\n                     onClick={() => setNetworkActive(index)}\n                     theme=\"grey\"\n                     className=\"px-5\"\n                     isActive={networkActive === index ? true : false}\n                  />\n               ))}\n            </div>\n         </div>\n         <div className=\"overflow-x-auto\">\n            <table className=\"w-full table-auto\">\n               <thead>\n                  <tr>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer\">\n                           <div>#</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer\">\n                           <div>Label</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer\">\n                           <div onClick={() => setStepActive(3)}>Address</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer\">\n                           <div>Status</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                     <th className=\"px-4 pb-8 border-b border-neutral6 dark:border-neutral2 text-xs leading-custom4 font-semibold text-neutral4 text-right\">\n                        <div className=\"flex items-center space-x-1 cursor-pointer justify-end\">\n                           <div>Action</div>\n                           <IcShorting className=\"fill-neutral4\" />\n                        </div>\n                     </th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {beneficiariesLoading ? (\n                     <>\n                        <tr>\n                           <td colSpan={5} className=\"px-4 py-3 last:pb-0\">\n                              <Skeleton height={20} isWithFull rounded=\"md\" />\n                           </td>\n                        </tr>\n                        <tr>\n                           <td colSpan={5} className=\"px-4 py-3 last:pb-0\">\n                              <Skeleton height={20} isWithFull rounded=\"md\" />\n                           </td>\n                        </tr>\n                        <tr>\n                           <td colSpan={5} className=\"px-4 py-3 last:pb-0\">\n                              <Skeleton height={20} isWithFull rounded=\"md\" />\n                           </td>\n                        </tr>\n                     </>\n                  ) : beneficiaries.length ? beneficiaries.map(({ id, name, data: { address }, state, currency }, index) => (\n                     <tr\n                        key={index}\n                        style={{ transition: 'background .2s' }}\n                        className=\"group\"\n                     // onClick={() => handleStep({ name, currency, balance, iconUrl, fixed, active }, 2)}\n                     >\n                        <td className=\"rounded-l-xl text-neutral4 align-middle font-semibold text-xs p-4 leading-custom4 group-hover:bg-neutral7 dark:group-hover:bg-neutral2 transition-all duration-300\">\n                           <div>{index + 1}</div>\n                        </td>\n                        <td className=\"p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 transition-all duration-300\">\n                           <div>{name}</div>\n                        </td>\n                        <td className=\"p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 transition-all duration-300\">\n                           <div>{truncateMiddle(String(address), 20)}</div>\n                        </td>\n                        <td className=\"p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 transition-all duration-300\">\n                           <div>{state}</div>\n                        </td>\n                        <td className=\"rounded-r-xl p-4 align-middle font-medium group-hover:bg-neutral7 dark:group-hover:bg-neutral2 text-right transition-all duration-300\">\n                           <svg className=\"w-6 h-6 fill-primary4 transition-colors duration-300\">\n                              <use xlinkHref=\"#icon-close-circle\" />\n                           </svg>\n                        </td>\n                     </tr>\n                  )) : (\n                     <tr>\n                        <td colSpan={5}>\n                           <div className=\"min-h-96 flex flex-col items-center justify-center space-y-3\">\n                              <IcEmty />\n                              <div className=\"text-xs font-semibold text-neutral4\">\n                                 {translate('noResultFound')}\n                              </div>\n                           </div>\n                        </td>\n                     </tr>\n                  )}\n               </tbody>\n            </table>\n         </div>\n         <div className=\"text-center\">\n            <Button\n               text=\"Create beneficiary\"\n               width=\"noFull\"\n               onClick={handleShowBeneficiary}\n            />\n         </div>\n      </div >\n   ), [setStepActive, setNetworkActive, setWalletActive, userWallets, networkActive, beneficiaries, beneficiariesLoading, handleShowBeneficiary]);\n\n   const renderWithdrawInfo = useMemo(() => (\n      <>\n         <div className=\"flex items-center justify-between mb-16\">\n            <button onClick={() => setStepActive(2)} type=\"button\" className=\"group flex items-center text-2xl font-semibold leading-custom2 tracking-custom1\">\n               <svg className=\"w-3.5 h-3.5 mr-4 fill-neutral4 group-hover:-translate-x-1 transition-all duration-300\">\n                  <use xlinkHref=\"#icon-arrow-prev\"></use>\n               </svg>\n               Withdraw info\n            </button>\n            <div className=\"flex items-center text-base font-medium\">\n               {userWallets[0]?.name || ''}\n               <img\n                  src={renderCurrencyIcon(userWallets[0]?.currency, userWallets[0]?.iconUrl)}\n                  className={`w-6 ml-3 ${renderCurrencyIcon(userWallets[0]?.currency, userWallets[0]?.iconUrl)?.includes('http') ? 'polygon' : ''}`}\n                  alt={userWallets[0]?.name}\n               />\n            </div>\n         </div>\n         <div className=\"space-y-12\">\n            <div className=\"flex py-6 px-9 rounded-2xl bg-neutral7 dark:bg-neutral2\">\n               <div className=\"w-1/2\">\n                  <div className=\"flex space-x-2.5\">\n                     <div className=\"flex justify-center items-center shrink-0 w-10 h-10 rounded-full bg-primary3\">\n                        <svg className=\"w-5 h-5 fill-neutral8\">\n                           <use xlinkHref=\"#icon-wallet\"></use>\n                        </svg>\n                     </div>\n                     <div>\n                        <div className=\"text-xs text-neutral4 leading-custom4\">\n                           Available balance\n                        </div>\n                        <div className=\"font-medium uppercase\">\n                           {Decimal.format(userWallets[0]?.balance, userWallets[0]?.fixed, ',')} {userWallets[0]?.currency}\n                        </div>\n                     </div>\n                  </div>\n               </div>\n               <div className=\"w-1/2\">\n                  <div className=\"flex space-x-2.5\">\n                     <div className=\"flex justify-center items-center shrink-0 w-10 h-10 rounded-full bg-primary5 dark:bg-chart1\">\n                        <svg className=\"w-5 h-5 fill-neutral8\">\n                           <use xlinkHref=\"#icon-lock\"></use>\n                        </svg>\n                     </div>\n                     <div>\n                        <div className=\"text-xs text-neutral4 leading-custom4\">\n                           Locked\n                        </div>\n                        <div className=\"font-medium uppercase\">\n                           {Decimal.format(userWallets[0]?.locked, userWallets[0]?.fixed, ',')} {userWallets[0]?.currency}\n                        </div>\n                     </div>\n                  </div>\n               </div>\n            </div>\n            <div className=\"space-y-8\">\n               <InputGroup\n                  id=\"withdraw-address\"\n                  label=\"Withdraw address\"\n                  placeholder=\"xxxx xxxx xxxx xxxx\"\n                  disabled\n               />\n               <div className=\"flex space-x-4 justify-between\">\n                  <InputGroup\n                     id=\"withdraw-amount\"\n                     label=\"Withdraw amount\"\n                     placeholder=\"0.0\"\n                     parentClassName=\"w-full\"\n                     autoFocus\n                  />\n                  <InputGroup\n                     id=\"2fa-code\"\n                     label=\"2fa code\"\n                     placeholder=\"123456\"\n                     parentClassName=\"w-full\"\n                  />\n               </div>\n            </div>\n            {/* <div className=\"space-y-4 py-6 px-9 rounded-2xl bg-neutral7 dark:bg-neutral2\">\n               <div className=\"flex flex-col md:flex-row justify-between space-x-4\">\n                  <div className=\"space-y-2\">\n                     <div className=\"text-base\">\n                        Available balance\n                     </div>\n                     <div className=\"text-2xl font-semibold leading-custom2 tracking-custom1 uppercase\">\n                        {Decimal.format(userWallets[0]?.balance, userWallets[0]?.fixed, ',')} {userWallets[0]?.currency}\n                     </div>\n                  </div>\n                  <div className=\"md:text-right space-y-2\">\n                     <div className=\"text-base\">\n                        Total withdraw\n                     </div>\n                     <div className=\"text-2xl font-semibold leading-custom2 tracking-custom1 uppercase\">\n                        {Decimal.format(0, userWallets[0]?.fixed, ',')} {userWallets[0]?.currency}\n                     </div>\n                  </div>\n               </div>\n               <div className=\"h-0.5 w-full bg-dashed-b\" />\n               <div className=\"flex space-x-3 justify-between\">\n                  <div className=\"space-y-1\">\n                     <div className=\"text-neutral4\">\n                        Withdraw fee\n                     </div>\n                     <div className=\"text-base font-medium uppercase\">\n                        0,00000000 {userWallets[0]?.currency}\n                     </div>\n                  </div>\n                  <div className=\"space-y-1\">\n                     <div className=\"text-neutral4\">\n                        Minimum withdraw\n                     </div>\n                     <div className=\"text-base font-medium uppercase\">\n                        0,00000000 {userWallets[0]?.currency}\n                     </div>\n                  </div>\n                  <div className=\"space-y-1\">\n                     <div className=\"text-neutral4\">\n                        Daily limit\n                     </div>\n                     <div className=\"text-base font-medium uppercase\">\n                        0,00000000 {userWallets[0]?.currency}\n                     </div>\n                  </div>\n               </div>\n            </div> */}\n            {/* <div className=\"text-base\">You are about to withdraw 0.001499 {userWallets[0]?.currency.toUpperCase()} from Digiasset</div> */}\n            <div className=\"space-y-3\">\n               <div className=\"flex justify-between pb-3 border-b border-neutral6 text-base font-medium dark:border-neutral3\">\n                  <div>Total</div>\n                  <div className=\"uppercase\">0,00000000 {userWallets[0]?.currency}</div>\n               </div>\n               <CellDetail\n                  title=\"Fee\"\n                  value={`0.00050000 ${userWallets[0]?.currency}`}\n               />\n               <CellDetail\n                  title=\"Minimum withdraw\"\n                  value={`200,000 ${userWallets[0]?.currency}`}\n               />\n               <CellDetail\n                  title=\"Daily limit\"\n                  value={`200,000 ${userWallets[0]?.currency}`}\n               />\n            </div>\n            <div className=\"flex justify-between mt-12\">\n               <Button\n                  width=\"noFull\"\n                  text=\"Cancel\"\n                  variant=\"outline\"\n                  onClick={() => {\n                     setStepActive(1)\n                     setNetworkActive(0);\n                     setWalletActive('');\n                  }}\n               />\n               <Button\n                  width=\"noFull\"\n                  text=\"I understand, continue\"\n                  onClick={handleSetShowModalSuccessPurchased}\n               />\n            </div>\n         </div>\n      </>\n   ), [userWallets]);\n\n   const isRipple = userWallets[0]?.currency === 'xrp';\n   const handleCreateBeneficiary = () => {\n      const payloadCoin: BeneficiariesCreate['payload'] = {\n         currency: userWallets[0]?.currency,\n         blockchain_key: selectedNetwork.blockchain_key || '',\n         name: label,\n         data: JSON.stringify({\n            address: ((isRipple && destinationTag) ? `${address}?dt=${destinationTag}` : address)\n         }),\n         ...(description && { description })\n      }\n      const dataBeneficiary: BeneficiaryBank = {\n         full_name: '',\n         account_number: '',\n         bank_name: '',\n         bank_swift_code: '',\n         intermediary_bank_name: '',\n         intermediary_bank_swift_code: '',\n      }\n      const payloadFiat: BeneficiariesCreate['payload'] = {\n         currency: userWallets[0]?.currency,\n         name: label,\n         data: JSON.stringify(dataBeneficiary),\n         ...(description && { description })\n      }\n\n      createBeneficiary(userWallets[0]?.type === 'coin' ? payloadCoin : payloadFiat);\n   }\n   const handleCopy = (url: string, type: string) => {\n      copyToClipboard(url);\n      toast.info(`${type} Copied`);\n   };\n   const renderIconCopied = (title: string) => (\n      <button\n         className=\"cursor-copy group\"\n         onClick={() => handleCopy(address, title)}\n         title=\"Address referral\"\n      >\n         <svg className=\"w-6 h-6 group-hover:scale-110 fill-neutral4 group-hover:fill-neutral3 dark:group-hover:fill-neutral5 transition-transform duration-200\">\n            <use xlinkHref=\"#icon-copy\" />\n         </svg>\n      </button>\n   );\n   const validateCoinAddressFormat = (value: string) => {\n      if (getCurrencies().some(currency => currency.symbol === userWallets[0]?.currency)) {\n         const valid = validate(value, userWallets[0]?.currency, 'testnet');\n         setCoinAddressValid(valid ? false : true);\n      }\n   };\n   const renderModalBeneficiary = useMemo(() => (\n      <>\n         {userWallets[0]?.type === 'coin' && (\n            <>\n               <Listbox\n                  value={selectedNetwork}\n                  onChange={setSelectedNetwork}\n               >\n                  <div className=\"relative\">\n                     <div className=\"space-y-2.5\">\n                        <div className=\"text-xs text-neutral5 leading-none font-bold uppercase\">\n                           Currency\n                        </div>\n                        <Listbox.Button className={({ open }) => `relative w-full h-12 pl-4 pr-12 shadow-input outline-none ${open ? 'shadow-dropdown-1' : 'dark:shadow-border-dark'} bg-neutral8 dark:bg-neutral2 rounded-xl border-none font-medium leading-12 text-left transition-shadow duration-200 before:content-[''] before:absolute before:top-1/2 before:right-2 before:h-6 before:w-6 before:-translate-y-1/2 before:rounded-full before:transition-transform before:duration-200 before:icon-arrow ${open ? 'before:rotate-180' : ''}`}>\n                           <span className=\"block truncate font-medium\">\n                              {selectedNetwork?.protocol}\n                           </span>\n                        </Listbox.Button>\n                     </div>\n                     <Listbox.Options className={({ open }) => `absolute max-h-40 w-full overflow-auto z-[9] mt-0.5 rounded-xl outline-none bg-neutral8 dark:bg-neutral1 border-2 border-neutral6 dark:border-neutral1 shadow-dropdown-2 dark:shadow-dropdown-3 ${open ? 'opacity-100 visible scale-100 translate-y-0' : 'opacity-0 invisible scale-75 -translate-y-20'} transition-all duration-200`} style={{ transformOrigin: '50% 0' }}>\n                        {listNetwork?.map((wallet, index) => (\n                           <Listbox.Option\n                              key={index}\n                              className={({ active }) => `px-3.5 py-2.5 leading-[1.4] font-medium ${active ? 'bg-neutral7 dark:bg-neutral2' : ''} transition-all duration-200`}\n                              value={wallet}\n                           >\n                              {({ selected }) => (\n                                 <span className={`block truncate ${selected ? 'text-primary1' : ''}`}>\n                                    {wallet.protocol}\n                                 </span>\n                              )}\n                           </Listbox.Option>\n                        ))}\n                     </Listbox.Options>\n                  </div>\n               </Listbox>\n               <InputGroup\n                  id=\"address\"\n                  label=\"Address\"\n                  placeholder=\"1AF44SoxqtS5o4dLCzzwwJ9Js6AfknFvHb\"\n                  value={address}\n                  onChange={validateCoinAddressFormat}\n                  onChangeAlt={setField}\n                  icon={renderIconCopied('Address')}\n                  className=\"truncate\"\n                  withError={coinAddressValid}\n                  info={coinAddressValid && 'Invalid Address' || ''}\n               />\n            </>\n         )}\n         <InputGroup\n            id=\"label\"\n            label=\"Label\"\n            placeholder=\"Beneficiary name\"\n            value={label}\n            onChangeAlt={setField}\n         />\n         {userWallets[0]?.type === 'coin' && (\n            <InputGroup\n               id=\"description\"\n               label=\"Description\"\n               placeholder=\"Description\"\n               value={description}\n               onChangeAlt={setField}\n            />\n         )}\n         {isRipple && (\n            <InputGroup\n               id=\"destinationTag\"\n               label=\"Description\"\n               value={destinationTag}\n               onChangeAlt={setField}\n               placeholder=\"Enter destination tag (optional)\"\n            />\n         )}\n         <div className=\"bg-neutral7 dark:bg-neutral3 py-5 px-6 rounded text-center\">\n            <div className=\"text-base leading-normal font-medium\">\n               Attention\n            </div>\n            <div className=\"text-neutral4\">\n               Please note that transaction to wrong network and address will cause your asset to permanently lost, so fill correctly.\n            </div>\n         </div>\n         <Button\n            text=\"Create\"\n            onClick={handleCreateBeneficiary}\n         />\n      </>\n   ), [selectedNetwork, setSelectedNetwork, userWallets, listNetwork, address, label, description, destinationTag, setField, handleCreateBeneficiary])\n\n   const render = () => {\n      switch (stepActive) {\n         case 2:\n            return renderBeneficiary;\n         case 3:\n            return renderWithdrawInfo;\n         default:\n            return renderAsset;\n      }\n   }\n\n   const {\n      currentStep,\n      step,\n      nextStep,\n      prevStep,\n      goToStep,\n   } = useStep([\n      renderAssetStep,\n      <div>Step Kalih</div>,\n      <div>Step Tigo</div>,\n   ])\n\n   return (\n      <>\n         <LayoutProfile\n            title=\"Withdraw\"\n            withBreadcrumbs={{\n               display: 'Wallets',\n               href: '/wallets',\n               active: 'Withdraw',\n            }}\n         >\n            <div className=\"shrink-0 md-max:mb-6 lg-max:mb-8 mr-8 lg2:mr-12 1xl:mr-20 w-full lg:w-56 lg2:w-72 space-y-6 lg-max:hidden\">\n               <div className={`relative flex items-center space-x-4 h-12 px-2 rounded-3xl font-dm font-bold leading-custom3 transition-all duration-300 after:absolute after:content-[''] after:top-full after:left-5.75 after:h-6 after:border-l-2 after:border-dashed after:border-neutral5 ${(stepActive === 2 || stepActive === 3) && 'bg-neutral8 dark:bg-neutral2 dark:after:border-neutral4 shadow-step'}`}>\n                  <div className={`relative flex items-center justify-center w-8 h-8 rounded-full border-2 border-primary5 dark:border-chart1 ${(stepActive === 2 || stepActive === 3) && 'bidding__number bidding__number_dark'} after:absolute after:content-[''] after:top-0 after:left-0 after:w-full after:h-full after:rounded-full after:transition-opacity after:duration-200 transition-all duration-300`}>1</div>\n                  <div>Select asset</div>\n               </div>\n               <div className={`relative flex items-center space-x-4 h-12 px-2 rounded-3xl font-dm font-bold leading-custom3 transition-all duration-300 after:absolute after:content-[''] after:top-full after:left-5.75 after:h-6 after:border-l-2 after:border-dashed after:border-neutral5 ${(stepActive === 1) && 'text-neutral4'} ${(stepActive === 3) && 'bg-neutral8 dark:bg-neutral2 dark:after:border-neutral4 shadow-step'}`}>\n                  <div className={`relative flex items-center justify-center w-8 h-8 rounded-full border-2 ${(stepActive === 2 || stepActive === 3) ? 'border-primary5 dark:border-chart1' : 'border-neutral6 dark:border-neutral4'} ${(stepActive === 3) && 'bidding__number bidding__number_dark'} after:absolute after:content-[''] after:top-0 after:left-0 after:w-full after:h-full after:rounded-full after:transition-opacity after:duration-200 transition-all duration-300`}>2</div>\n                  <div>Select beneficiary</div>\n               </div>\n               <div className={`relative flex items-center space-x-4 h-12 px-2 rounded-3xl font-dm font-bold ${stepActive !== 3 && 'text-neutral4'} leading-custom3 transition-all duration-300`}>\n                  <div className={`relative flex items-center justify-center w-8 h-8 rounded-full border-2 ${stepActive === 3 ? 'border-primary5 dark:border-chart1' : 'border-neutral6 dark:border-neutral4'} transition-all duration-300`}>4</div>\n                  <div>Withdraw info</div>\n               </div>\n            </div>\n            <div\n               ref={mainRef}\n               className=\"grow p-4 md:px-8 md:py-10 lg:p-10 shadow-card2 rounded-2xl bg-neutral8 dark:bg-shade1\"\n               style={{ animationDuration: '100ms' }}\n            >\n               <div className=\"step\">\n                  <div className=\"\">Ini {currentStep}</div>\n                  {step}\n                  <div className=\"flex space-x-4\">\n                     <Button text=\"Prev\" onClick={prevStep} />\n                     <InputGroup onChange={e => goToStep(Number(e))} />\n                     <Button text=\"Next\" onClick={nextStep} />\n                  </div>\n               </div>\n               {render()}\n            </div>\n         </LayoutProfile>\n         <ModalRequired\n            show={isShow}\n            close={toggle}\n            push={push}\n         />\n         <Portal\n            show={showModalSuccessPurchased}\n            close={handleSetShowModalSuccessPurchased}\n         >\n            <div className=\"mt-10 space-y-8\">\n               <div className=\"text-5xl text-center font-dm font-bold leading-custom1 tracking-custom\">Yay! 🎉</div>\n               <div className=\"max-w-71.25 mx-auto text-center text-base font-medium leading-normal\">\n                  You successfully purchased <span className=\"text-primary5\">0.020202 BTC</span>  from Digiasset\n               </div>\n               <div className=\"flex flex-wrap p-6 rounded-xl border border-neutral6\">\n                  <div className=\"mr-auto space-y-2.5\">\n                     <div className=\"text-neutral4\">Status</div>\n                     <div className=\"font-medium text-primary5\">Completed</div>\n                  </div>\n                  <div className=\"space-y-2.5\">\n                     <div className=\"text-neutral4\">Transaction ID</div>\n                     <div className=\"font-medium\">0msx836930...87r398</div>\n                  </div>\n               </div>\n               <div className=\"flex space-x-4\">\n                  <Button\n                     text=\"Trade\"\n                     onClick={() => push(`trading/${userWallets[0]?.currency || 'btcidr'}`)}\n                     variant=\"outline\"\n                  />\n                  <Button\n                     text=\"Wallets\"\n                     onClick={() => push('/wallets')}\n                  />\n               </div>\n            </div>\n         </Portal>\n         <Dialog\n            isOpen={isOpenBeneficiary}\n            setIsOpen={handleShowBeneficiary}\n            title=\"Create Beneficiary\"\n         >\n            {renderModalBeneficiary}\n         </Dialog>\n      </>\n   );\n});\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   theme: selectCurrentColorTheme(state),\n   wallets: selectWallets(state),\n   beneficiaries: selectBeneficiaries(state),\n   beneficiariesLoading: selectBeneficiariesFetchLoading(state),\n   memberLevels: selectMemberLevels(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   fecthWallets: () => dispatch(walletsFetch()),\n   fetchMemberLevel: () => dispatch(memberLevelsFetch()),\n   fetchBeneficiaries: params => dispatch(beneficiariesFetch(params)),\n   createBeneficiary: payload => dispatch(beneficiariesCreate(payload)),\n   updateBeneficiary: payload => dispatch(beneficiariesDataUpdate(payload)),\n   activateBeneficiary: payload => dispatch(beneficiariesActivate(payload)),\n   deleteBeneficiary: id => dispatch(beneficiariesDelete(id)),\n   resendPinBeneficiary: id => dispatch(beneficiariesResendPin(id)),\n   fetchSuccess: payload => dispatch(alertPush(payload)),\n});\n\nexport const WithdrawalStep = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps)\n)(WithdrawalFC) as FunctionComponent;\n","import React from 'react';\nimport {\n   LayoutWallet,\n   TableFinance\n} from 'components';\n\nexport const WalletFinance = () => (\n   <LayoutWallet>\n      <div className=\"h-full bg-neutral8 dark:bg-shade2 p-8 rounded\">\n         <TableFinance\n            title=\"Finances\"\n            hiddenCategory={[0, 4]}\n         />\n      </div>\n   </LayoutWallet>\n)\n","import React, { FunctionComponent, useState } from 'react';\nimport { Button, Export, InputGroup, LayoutWallet, Nav, Portal, TableOrderHistory } from 'components';\nimport { OrderCommon, RootState, marketsFetch, ordersCancelAllFetch, resetOrdersHistory, selectOrdersHistory } from 'modules';\nimport { IntlProps } from 'index';\nimport { MapDispatchToPropsFunction, connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { injectIntl } from 'react-intl';\n\ntype ReduxProps = {\n   list: OrderCommon[]\n}\n\ntype DispatchProps = {\n   marketsFetch: typeof marketsFetch;\n   ordersCancelAll: typeof ordersCancelAllFetch;\n   resetOrdersHistory: typeof resetOrdersHistory;\n}\n\ntype Props = ReduxProps & DispatchProps & IntlProps;\n\nconst Orders = ({\n   list,\n   marketsFetch,\n   ordersCancelAll,\n   resetOrdersHistory,\n   intl\n}: Props) => {\n   const [currentTab, setCurrentTab] = useState<'open' | 'close'>('close');\n   const [q, setQ] = useState('');\n   const [showExport, setShowExport] = useState(false);\n\n   const handleShowExport = () => setShowExport(!showExport);\n\n   const type = currentTab === 'open' ? 'Open' : 'Cancel';\n\n   // const translate = (id: string) => intl.formatMessage({ id });\n\n   const renderTable = () => {\n      if (currentTab === 'close') {\n         return <TableOrderHistory type=\"all\" q={q} />\n      } else {\n         return <TableOrderHistory type=\"open\" q={q} />\n      }\n   }\n\n   return (\n      <LayoutWallet>\n         <div className=\"h-full p-8 rounded bg-neutral8 dark:bg-shade2\">\n            <div className=\"block md:flex items-center justify-between mb-8 p-0 md:pb-8 border-b-0 md:border-b border-neutral6 dark:border-neutral3\">\n               <div className=\"flex space-x-4\">\n                  <Nav\n                     title=\"All\"\n                     isActive={currentTab === 'close'}\n                     onClick={() => setCurrentTab('close')}\n                  />\n                  <Nav\n                     title=\"Open\"\n                     isActive={currentTab === 'open'}\n                     onClick={() => setCurrentTab('open')}\n                  />\n               </div>\n               <div className=\"flex space-x-4\">\n                  <div className=\"w-64\">\n                     <InputGroup\n                        autoFocus\n                        placeholder=\"Search\"\n                        size=\"normal\"\n                        value={q}\n                        onChange={setQ}\n                        icon={\n                           <svg className=\"h-5 w-5 fill-neutral4\">\n                              <use xlinkHref=\"#icon-search\"></use>\n                           </svg>\n                        }\n                     />\n                  </div>\n                  <Button\n                     text='All time'\n                     variant=\"outline\"\n                     size=\"normal\"\n                     width=\"noFull\"\n                     icRight={\n                        <svg className=\"ml-3 w-4 h-4 fill-neutral4 group-hover:fill-neutral8 transition-all\">\n                           <use xlinkHref=\"#icon-calendar\"></use>\n                        </svg>\n                     }\n                  />\n               </div>\n            </div>\n            <div className=\"flex items-center justify-between mb-10.5\">\n               <div className=\"text-3.5xl leading-tight tracking-custom1 font-dm font-bold\">\n                  Order History\n               </div>\n               <Button\n                  text=\"Export\"\n                  size=\"normal\"\n                  onClick={handleShowExport}\n                  icLeft={\n                     <svg className=\"mr-3 w-4 h-4 fill-neutral8 transition-all duration-200\">\n                        <use xlinkHref=\"#icon-arrow-bottom\" />\n                     </svg>\n                  }\n                  disabled={list.length <= 0}\n                  width=\"noFull\"\n               />\n            </div>\n            <div className=\"overflow-x-auto\">\n               <div className=\"space-y-8\">\n                  {renderTable()}\n               </div>\n            </div>\n         </div>\n         <Portal\n            title=\"Confirm download\"\n            show={showExport}\n            close={handleShowExport}\n         >\n            <div>\n               <div className=\"mt-16.5 space-y-8\">\n                  <div className=\"flex items-center justify-center w-20 h-20 mx-auto rounded-full bg-primary3\">\n                     <svg className=\"w-10 h-10 fill-neutral8 transition-colors duration-300\">\n                        <use xlinkHref=\"#icon-arrow-bottom\"></use>\n                     </svg>\n                  </div>\n                  <div className=\"text-center text-base leading-normal font-medium\">\n                     Are you sure you want to download the filename <strong className=\"font-bold capitalize text-primary4 tracking-wider\">{type}</strong> ?\n                  </div>\n                  <Export\n                     title=\"Continue\"\n                     csvData={list}\n                     fileName={type}\n                     onClick={handleShowExport}\n                  />\n               </div>\n            </div>\n         </Portal>\n      </LayoutWallet>\n   );\n};\n\nconst mapStateToProps = (state: RootState): ReduxProps => ({\n   list: selectOrdersHistory(state),\n});\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, {}> = dispatch => ({\n   marketsFetch: () => dispatch(marketsFetch()),\n   ordersCancelAll: () => dispatch(ordersCancelAllFetch()),\n   resetOrdersHistory: () => dispatch(resetOrdersHistory()),\n});\n\nexport const WalletOrder = compose(\n   injectIntl,\n   connect(mapStateToProps, mapDispatchToProps),\n)(Orders) as FunctionComponent;\n","import { Button } from 'components';\nimport { useBeneficiaries } from 'hooks'\nimport React from 'react'\n\nexport const Exchange = () => {\n   const { beneficiaries, fetchLoading, activateBeneficiary } = useBeneficiaries('usdt');\n   return (\n      <div className=\"block lg2:flex mt-1\">\n         <div className=\"shrink-0 w-full lg:w-64 lg-max:!float-none lg2-max:float-left hidden lg:block lg-max:!mb-0 lg2-max:mb-1\">\n            {/* <div className=\"rounded dark:bg-shade2\"> */}\n            <div className=\"rounded bg-neutral8 bg-primary3/30 h-908\">\n               {fetchLoading ? (\n                  <div className=\"\">\n                     Loading\n                  </div>\n               ) : beneficiaries.map(e => (\n                  <div className=\"\" key={e.blockchain_key}>\n                     <div className=\"\">\n                        {e.blockchain_name}\n                     </div>\n                  </div>\n               ))}\n            </div>\n         </div>\n         <div className=\"lg:block grow-0 shrink-0 basis-c-full-101 w-full lg:w-c-full-65 lg2:w-c-full-101 lg-max:!float-none lg2-max:float-right m-0 lg2:mr-1 lg:ml-1\">\n            <Button text=\"Click me\" onClick={() => activateBeneficiary({ id: 312, pin: '197127' })} />\n         </div>\n      </div>\n   )\n}\n","import { Button, GeetestCaptchaV3 } from 'components';\nimport { useInitGT4 } from 'hooks/useInitGT4';\nimport { GeetestCaptchaResponse, setGeetestCaptchaSuccess } from 'modules';\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nexport const Geetest = () => {\n   const dispatch = useDispatch();\n\n   const handleGeetestResponse = (captcha_response: GeetestCaptchaResponse) => {\n      dispatch(setGeetestCaptchaSuccess({ captcha_response }))\n   }\n\n   const buttonRef = useRef<HTMLButtonElement>(null);\n   const gt3Ref = useRef<HTMLButtonElement>(null);\n   const { response } = useInitGT4(buttonRef);\n\n   useEffect(() => {\n      console.log('response :>> ', response);\n   }, [response]);\n   return (\n      <>\n         <div className=\"flex items-center justify-between h-screen\">\n            {/* <div className=\"overflow-x-auto w-1/3 space-y-5\">\n               <div className=\"text-2xl font-bold\">Geetest V4 Response</div>\n               <table className=\"table-auto w-full lg2:w-69 divide-y divide-primary5 dark:divide-chart1\">\n                  <tr className=\"align-top\">\n                     <th className=\"p-4 whitespace-nowrap text-left\">Captcha id </th>\n                     <td className=\"p-4\"> : {response?.captcha_id}</td>\n                  </tr>\n                  <tr className=\"align-top\">\n                     <th className=\"p-4 whitespace-nowrap text-left\">Captcha output </th>\n                     <td className=\"p-4\"> : {response?.captcha_output}</td>\n                  </tr>\n                  <tr className=\"align-top\">\n                     <th className=\"p-4 whitespace-nowrap text-left\">Get time </th>\n                     <td className=\"p-4\"> : {response?.gen_time}</td>\n                  </tr>\n                  <tr className=\"align-top\">\n                     <th className=\"p-4 whitespace-nowrap text-left\">Lot number </th>\n                     <td className=\"p-4\"> : {response?.lot_number}</td>\n                  </tr>\n                  <tr className=\"align-top\">\n                     <th className=\"p-4 whitespace-nowrap text-left\">Pass token </th>\n                     <td className=\"p-4\"> : {response?.pass_token}</td>\n                  </tr>\n                  <tr className=\"align-top\">\n                     <th className=\"p-4 whitespace-nowrap text-left\">Sign token </th>\n                     <td className=\"p-4\"> : {response?.sign_token}</td>\n                  </tr>\n               </table>\n               <Button ref={buttonRef} text=\"Show geetest v4\" />\n            </div> */}\n            <GeetestCaptchaV3\n               buttonRef={gt3Ref}\n               onSuccess={handleGeetestResponse}\n            />\n            <Button text=\"GT 3\" ref={gt3Ref} />\n         </div>\n      </>\n   )\n}\n","import { RefObject, useEffect, useState } from 'react';\nimport { GT4Init, removeElement } from 'helpers';\nimport { toast } from 'react-toastify';\nimport { GeetestCaptchaV4Response } from 'modules';\n\nexport const useInitGT4 = (buttonRef: RefObject<HTMLButtonElement>) => {\n   const [response, setResponse] = useState<GeetestCaptchaV4Response>();\n\n   useEffect(() => {\n      GT4Init();\n\n      //  @ts-ignore\n      initGeetest4({\n         captchaId: 'c0034922a8c6cc91b2cf3afb30aeee40',\n         product: 'bind',\n         language: 'eng',\n         protocol: 'https://',\n         onError: (err: any) => toast.error(err.msg),\n      }, handlerForBind);\n\n   }, []);\n\n   const removeElements = () => {\n      removeElement('geetest_footer_right');\n      removeElement('geetest_feedback');\n      removeElement('geetest_close');\n   }\n\n   const handlerForBind = async (captchaObj) => {\n      const button = buttonRef.current;\n      let isReady = false;\n\n      captchaObj.onReady(() => {\n         console.log('Ready to display');\n         isReady = true;\n         removeElements();\n      })\n\n      button?.addEventListener('click', () => {\n         console.log('before ready: btn clicked');\n\n         if (isReady) {\n            captchaObj.showCaptcha();\n         }\n      });\n\n      captchaObj.onSuccess(async () => {\n         setResponse(captchaObj.getValidate());\n      });\n\n      captchaObj.onError(e => {\n         toast.error(e.msg)\n         captchaObj.reset();\n      });\n\n      captchaObj.onClose(() => {\n         toast.error(\"Captcha Closed!\");\n         captchaObj.reset();\n      });\n\n      captchaObj.onFail(() => {\n         toast.error(\"Captcha Failed!\");\n         captchaObj.reset();\n      });\n\n   }\n\n   return {\n      response\n   }\n\n}\n","import * as React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { Loader } from 'components';\nimport { RouteProps } from './types';\n\nconst PrivateRoute: React.FC<RouteProps> = ({ component: Component, loading, isLogged, ...rest }) => {\n   if (loading) {\n      return <Loader />;\n   }\n\n   if (!isLogged) {\n      return (\n         <Route {...rest}>\n            <Redirect to={'/login'} />\n         </Route>\n      );\n   }\n\n   return (\n      <Route\n         {...rest}\n         render={props => <Component {...props} />}\n      />\n   );\n};\n\nexport default PrivateRoute;\n","import * as React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { Loader } from 'components';\nimport { RouteProps } from './types';\n\nconst PublicRoute: React.FC<RouteProps> = ({ component: Component, loading, isLogged, ...rest }) => {\n   if (loading) {\n      return <Loader />;\n   }\n\n   if (!isLogged) {\n      return (\n         <Route\n            {...rest}\n            render={props => <Component {...props} />}\n         />\n      );\n   }\n\n\n   return (\n      <Route {...rest}>\n         <Redirect to={'/wallets'} />\n      </Route>\n   );\n\n};\n\nexport default PublicRoute;\n","import React, { FC } from 'react';\nimport {\n   DocumentationEndpoints,\n   DocumentationModels,\n   LayoutProfile,\n   ProfileSidebar\n} from 'components';\nimport { useDocumentationFetch } from 'hooks';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { selectDocumentationData } from 'modules';\n\nexport const ApiDocs: FC = () => {\n   useDocumentationFetch();\n   const intl = useIntl();\n   const documentation = useSelector(selectDocumentationData);\n   return (\n      <LayoutProfile\n         title=\"API docs\"\n         withBreadcrumbs={{\n            display: 'Home',\n            href: '/',\n            active: 'API docs',\n         }}\n      >\n         <ProfileSidebar />\n         <div className=\"grow p-4 md:px-8 lg:px-10 lg:py-10 shadow-card2 rounded-2xl bg-neutral8 dark:bg-shade1\">\n            <div className=\"space-y-4\">\n               <div>\n                  <div className=\"text-2xl leading-custom2 font-semibold tracking-custom1\">\n                     {documentation?.info?.title} <small className=\"text-x text-neutral4\">{intl.formatMessage({ id: 'page.documentation.header.version.title' })}&nbsp;{documentation?.info?.version}</small>\n                  </div>\n                  <div className=\"text-neutral4\">{documentation?.info?.description}</div>\n               </div>\n               <div className=\"flex flex-col\">\n                  <div className=\"font-medium\">{intl.formatMessage({ id: 'page.documentation.header.contactInfo.title' })}</div>\n                  <a\n                     href={documentation?.info?.contact?.url}\n                     target=\"_blank\"\n                     rel=\"noopener noreferrer\"\n                     className=\"text-neutral4 hover:text-primary1 transition-colors duration-500 hover:underline\"\n                  >\n                     {documentation?.info?.contact?.name}\n                  </a>\n                  <a\n                     href={`mailto: ${documentation?.info?.contact?.email}`}\n                     className=\"text-neutral4 hover:text-primary1 transition-colors duration-500 hover:underline\"\n                  >\n                     {documentation?.info?.contact?.email}\n                  </a>\n               </div>\n               <div className=\"flex flex-col\">\n                  <div className=\"font-medium\">{intl.formatMessage({ id: 'page.documentation.header.license.title' })}</div>\n                  <a\n                     href={documentation?.info?.license?.url}\n                     target=\"_blank\"\n                     rel=\"noopener noreferrer\"\n                     className=\"text-neutral4 hover:text-primary1 transition-colors duration-500 hover:underline\"\n                  >\n                     {documentation?.info?.license?.url}\n                  </a>\n               </div>\n            </div>\n            <div>\n               <DocumentationEndpoints />\n               <DocumentationModels />\n            </div>\n         </div>\n      </LayoutProfile>\n   );\n};\n","import * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect, MapDispatchToProps, MapStateToProps } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { minutesUntilAutoLogout, sessionCheckInterval, showLanding } from 'api';\nimport { ModalExpiredSession, Loader, ScreenMobile } from 'components';\nimport { WalletsFetch } from 'containers';\nimport { toggleColorTheme } from 'helpers';\nimport {\n   ChangeForgottenPasswordMobileScreen,\n   ConfirmMobileScreen,\n   EmailVerificationMobileScreen,\n   ForgotPasswordMobileScreen,\n   // LandingScreenMobile,\n   OrdersMobileScreen,\n   ProfileAccountActivityMobileScreen,\n   ProfileApiKeysMobileScreen,\n   ProfileAuthMobileScreen,\n   ProfileChangePasswordMobileScreen,\n   ProfileLanguageMobileScreen,\n   ProfileMobileScreen,\n   ProfileThemeMobileScreen,\n   ProfileVerificationMobileScreen,\n   SelectedWalletMobileScreen,\n   SignInMobileScreen,\n   SignUpMobileScreen,\n   TradingScreenMobile,\n   WalletDeposit,\n   WalletsMobileScreen,\n   WalletWithdraw,\n} from 'mobile/screens';\nimport {\n   configsFetch,\n   sonicFetch,\n   logoutFetch,\n   RootState,\n   selectConfigsLoading,\n   selectConfigsSuccess,\n   selectCurrentColorTheme,\n   selectCurrentMarket,\n   selectMobileDeviceState,\n   selectPlatformAccessStatus,\n   selectUserFetching,\n   selectUserInfo,\n   selectUserLoggedIn,\n   toggleChartRebuild,\n   userFetch,\n   walletsReset,\n} from 'modules';\nimport { CustomizationDataInterface, customizationFetch, selectCustomizationData } from 'modules/public/customization';\nimport { rangerConnectFetch, selectRanger } from 'modules/public/ranger';\nimport {\n   //  ChangeForgottenPasswordScreen,\n   ConfirmScreen,\n   // DocumentationScreen,\n   //  EmailVerificationScreen,\n   //  ForgotPasswordScreen,\n   HistoryScreen,\n   LandingScreen,\n   Login,\n   Register,\n   ForgotPassword,\n   MagicLink,\n   MaintenanceScreen,\n   OrdersTabScreen,\n   // ProfileScreen,\n   ProfileTwoFactorAuthScreen,\n   RestrictedScreen,\n   SignInScreen,\n   SignUpScreen,\n   VerificationScreen,\n   // WalletsScreen,\n   ChangeForgotPassword,\n   EmailVerification,\n   WalletOverview,\n   WalletMargin,\n   WalletFIatAndSpot,\n   BuyCrypto,\n   Profile,\n   Activity,\n   Referrals,\n   ApiKeys,\n   SessionsHistory,\n   TwoFA,\n   ChangePassword,\n   Market,\n   LearnCrypto,\n   WalletDetails,\n   SellCrypto,\n   Trading,\n   TradingChart,\n   Transfer,\n   WalletTrade,\n   Withdrawal,\n   Deposit,\n   Contact,\n   Beneficiaries,\n   WithdrawalStep,\n   WalletFinance,\n   Exchange,\n   WalletOrder,\n   RegisterKu,\n   Geetest,\n   Notifications,\n} from 'screens';\nimport PrivateRoute from '../PrivateRoute';\nimport PublicRoute from '../PublicRoute';\nimport { DispatchProps, LayoutProps, LayoutState, ReduxProps } from '../types';\nimport { ApiDocs } from 'screens/ApiDocs';\n\nconst STORE_KEY = 'lastAction';\n\nclass LayoutComponent extends React.Component<LayoutProps, LayoutState> {\n   public static eventsListen = [\n      'click',\n      'keydown',\n      'scroll',\n      'resize',\n      'mousemove',\n      'TabSelect',\n      'TabHide',\n   ];\n\n   public timer;\n   public walletsFetchInterval;\n\n   constructor(props: LayoutProps) {\n      super(props);\n      this.initListener();\n\n      this.state = {\n         isShownExpSessionModal: false,\n      };\n   }\n\n   public componentDidMount() {\n      const {\n         history,\n         isLoggedIn,\n         location,\n         platformAccessStatus,\n         rangerState,\n      } = this.props;\n\n      this.props.fetchConfigs();\n      this.props.fetchSonic();\n      if (\n         !(location.pathname.includes('/magic-link')\n            || location.pathname.includes('/404')\n            || location.pathname.includes('/500'))\n      ) {\n         switch (platformAccessStatus) {\n            case 'restricted':\n               history.replace('/404');\n               break;\n            case 'maintenance':\n               history.replace('/500');\n               break;\n            default:\n               const token = localStorage.getItem('csrfToken');\n\n               if (token) {\n                  this.props.userFetch();\n                  this.initInterval();\n                  this.checkSession();\n               }\n         }\n      }\n\n      if (!rangerState.connected) {\n         this.props.rangerConnect({ withAuth: isLoggedIn });\n      }\n   }\n\n   public componentWillReceiveProps(nextProps: LayoutProps) {\n      if (\n         !(nextProps.location.pathname.includes('/magic-link')\n            || nextProps.location.pathname.includes('/404')\n            || nextProps.location.pathname.includes('/500'))\n         || this.props.platformAccessStatus !== nextProps.platformAccessStatus\n      ) {\n         switch (nextProps.platformAccessStatus) {\n            case 'restricted':\n               this.props.history.replace('/404');\n               break;\n            case 'maintenance':\n               this.props.history.replace('/500');\n               break;\n            default:\n               break;\n         }\n      }\n\n      if (!this.props.user.email && nextProps.user.email) {\n         this.props.userFetch();\n      }\n   }\n\n   public componentDidUpdate(prevProps: LayoutProps) {\n      const {\n         customization,\n         isLoggedIn,\n         rangerState,\n         userLoading,\n      } = this.props;\n\n      if (!isLoggedIn && prevProps.isLoggedIn && !userLoading) {\n         this.props.walletsReset();\n\n         if (!this.props.location.pathname.includes('/trading')) {\n            this.props.history.push('/trading/');\n         }\n      }\n\n      if (customization && customization !== prevProps.customization) {\n         this.handleApplyCustomization(customization);\n      }\n\n      if (\n         (isLoggedIn !== prevProps.isLoggedIn) ||\n         (!rangerState.connected && prevProps.rangerState.connected)\n      ) {\n         this.props.rangerConnect({ withAuth: isLoggedIn });\n      }\n   }\n\n   public componentWillUnmount() {\n      for (const type of LayoutComponent.eventsListen) {\n         document.body.removeEventListener(type, this.reset);\n      }\n\n      clearInterval(this.timer);\n      clearInterval(this.walletsFetchInterval);\n   }\n\n   public translate = (key: string) => this.props.intl.formatMessage({ id: key });\n\n   public render() {\n      const {\n         colorTheme,\n         isLoggedIn,\n         isMobileDevice,\n         userLoading,\n         // location,\n         configsLoading,\n         platformAccessStatus,\n      } = this.props;\n      const { isShownExpSessionModal } = this.state;\n      //   const tradingCls = location.pathname.includes('/trading') ? 'trading-layout' : '';\n      toggleColorTheme(colorTheme);\n\n      if (configsLoading && !platformAccessStatus.length) {\n         return <Loader />;\n      }\n\n      if (isMobileDevice) {\n         return (\n            <main className={'flex flex-col grow'}>\n               <Switch>\n                  <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/signin\" component={SignInMobileScreen} />\n                  <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/signup\" component={SignUpMobileScreen} />\n                  <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/forgot_password\" component={ForgotPasswordMobileScreen} />\n                  <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/accounts/password_reset\" component={ChangeForgottenPasswordMobileScreen} />\n                  <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/accounts/confirmation\" component={VerificationScreen} />\n                  <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/email-verification\" component={EmailVerificationMobileScreen} />\n                  <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/:currency/history\" component={SelectedWalletMobileScreen} />\n                  <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/:currency/deposit\" component={WalletDeposit} />\n                  <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/:currency/withdraw\" component={WalletWithdraw} />\n                  <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/confirm\" component={ConfirmMobileScreen} />\n                  <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets\" component={WalletsMobileScreen} />\n                  <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/orders\" component={OrdersMobileScreen} />\n                  <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/account-activity\" component={ProfileAccountActivityMobileScreen} />\n                  <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/api-keys\" component={ProfileApiKeysMobileScreen} />\n                  <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/language\" component={ProfileLanguageMobileScreen} />\n                  <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/2fa\" component={ProfileAuthMobileScreen} />\n                  <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/change-password\" component={ProfileChangePasswordMobileScreen} />\n                  <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/verification\" component={ProfileVerificationMobileScreen} />\n                  <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile/theme\" component={ProfileThemeMobileScreen} />\n                  <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile\" component={ProfileMobileScreen} />\n                  <Route exact={true} path=\"/trading/:market?\" component={TradingScreenMobile} />\n                  {showLanding() && <Route exact={true} path=\"/\" component={ScreenMobile} />}\n                  {/* {showLanding() && <Route exact={true} path=\"/\" component={LandingScreenMobile} />} */}\n                  <Route path=\"**\"><Redirect to=\"/trading/\" /></Route>\n               </Switch>\n               {isLoggedIn && <WalletsFetch />}\n               {isShownExpSessionModal && this.handleRenderExpiredSessionModal()}\n            </main>\n         );\n      }\n\n      return (\n         <>\n            <Switch>\n               <Route exact={true} path=\"/magic-link\" component={MagicLink} />\n               <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/signin\" component={SignInScreen} />\n               <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/login\" component={Login} />\n               <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/register\" component={Register} />\n               <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/registerku\" component={RegisterKu} />\n               <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/accounts/confirmation\" component={VerificationScreen} />\n               <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/signup\" component={SignUpScreen} />\n               <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/forgot_password\" component={ForgotPassword} />\n               <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/accounts/password_reset\" component={ChangeForgotPassword} />\n               <PublicRoute loading={userLoading} isLogged={isLoggedIn} path=\"/email-verification\" component={EmailVerification} />\n               <Route path=\"/contact\" component={Contact} />\n               <Route path=\"/404\" component={RestrictedScreen} />\n               <Route path=\"/500\" component={MaintenanceScreen} />\n               <Route exact={true} path=\"/trading/:market?\" component={Trading} />\n               <Route path=\"/chart/:market?\" component={TradingChart} />\n               <Route path=\"/markets\" component={Market} />\n               <Route path=\"/learn-crypto\" component={LearnCrypto} />\n               <Route path=\"/deposit\" component={Deposit} />\n               <Route path=\"/exchange\" component={Exchange} />\n               <Route path=\"/geetest\" component={Geetest} />\n               {showLanding() && <Route exact path=\"/\" component={LandingScreen} />}\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/docs\" component={ApiDocs} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/orders\" component={WalletOrder} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/orderss\" component={OrdersTabScreen} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/history\" component={HistoryScreen} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/trades\" component={WalletTrade} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/confirm\" component={ConfirmScreen} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/profile\" component={Profile} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/referrals\" component={Referrals} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/api-keys\" component={ApiKeys} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/beneficiaries\" component={Beneficiaries} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/sessions-history\" component={SessionsHistory} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/2fa\" component={TwoFA} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/change-password\" component={ChangePassword} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets\" component={WalletOverview}>\n                  <Switch>\n                     <PrivateRoute loading={userLoading} isLogged={isLoggedIn} exact={true} path=\"/wallets\" component={WalletOverview} />\n                     <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/deposit\" component={Deposit} />\n                     <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/withdraw\" component={Withdrawal} />\n                     <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/withdrawal\" component={WithdrawalStep} />\n                     <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/transfer\" component={Transfer} />\n                     <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/finances\" component={WalletFinance} />\n                     <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallets/:id\" component={WalletDetails} />\n                  </Switch>\n               </PrivateRoute>\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/notifications\" component={Notifications} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/withdraw\" component={Withdrawal} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/wallet-margin\" component={WalletMargin} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/fiat-and-spot\" component={WalletFIatAndSpot} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/buy-crypto\" component={BuyCrypto} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/sell-crypto\" component={SellCrypto} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/activity\" component={Activity} />\n               <PrivateRoute loading={userLoading} isLogged={isLoggedIn} path=\"/security/2fa\" component={ProfileTwoFactorAuthScreen} />\n               <Route path=\"**\"><Redirect to=\"/trading/\" /></Route>\n            </Switch>\n            {isLoggedIn && <WalletsFetch />}\n            {isShownExpSessionModal && this.handleRenderExpiredSessionModal()}\n         </>\n      );\n   }\n\n   private getLastAction = () => {\n      if (localStorage.getItem(STORE_KEY) !== null) {\n         return parseInt(localStorage.getItem(STORE_KEY) || '0', 10);\n      }\n\n      return 0;\n   };\n\n   private setLastAction = (lastAction: number) => localStorage.setItem(STORE_KEY, lastAction.toString());\n\n   private initListener = () => {\n      this.reset();\n      for (const type of LayoutComponent.eventsListen) {\n         document.body.addEventListener(type, this.reset);\n      }\n   };\n\n   private reset = () => this.setLastAction(Date.now());\n\n   private initInterval = () => {\n      this.timer = setInterval(() => {\n         this.checkSession();\n      }, parseFloat(sessionCheckInterval()));\n   };\n\n   private checkSession = () => {\n      const { user } = this.props;\n      const now = Date.now();\n      const timeleft = this.getLastAction() + parseFloat(minutesUntilAutoLogout()) * 60 * 1000;\n      const diff = timeleft - now;\n      const isTimeout = diff < 0;\n      if (isTimeout && user.email) {\n         if (user.state === 'active') {\n            this.handleChangeExpSessionModalState();\n         }\n\n         this.props.logout();\n      }\n   };\n\n   private handleSubmitExpSessionModal = () => {\n      this.handleChangeExpSessionModalState();\n      this.props.history.push('/login');\n   };\n\n   private handleRenderExpiredSessionModal = () => (\n      <ModalExpiredSession\n         title={this.translate('page.modal.expired.title')}\n         buttonLabel={this.translate('page.modal.expired.submit')}\n         show={this.state.isShownExpSessionModal}\n         close={this.handleChangeExpSessionModalState}\n         onClick={this.handleSubmitExpSessionModal}\n      />\n   );\n\n   private handleChangeExpSessionModalState = () => {\n      this.setState({\n         isShownExpSessionModal: !this.state.isShownExpSessionModal,\n      });\n   };\n\n   private handleApplyCustomization = (customization: CustomizationDataInterface) => {\n      const rootElement = document.documentElement;\n      const parsedSettings = customization && customization.settings ? JSON.parse(customization.settings) : null;\n\n      if (rootElement && parsedSettings && parsedSettings.theme_colors) {\n         parsedSettings.theme_colors.reduce((result, item) => {\n            const newItemColor = item.value;\n\n            if (newItemColor) {\n               rootElement.style.setProperty(item.key, item.value);\n            }\n\n            return result;\n         }, {});\n\n         this.props.toggleChartRebuild();\n      }\n   };\n}\n\nconst mapStateToProps: MapStateToProps<ReduxProps, {}, RootState> = state => ({\n   colorTheme: selectCurrentColorTheme(state),\n   configsLoading: selectConfigsLoading(state),\n   configsSuccess: selectConfigsSuccess(state),\n   currentMarket: selectCurrentMarket(state),\n   customization: selectCustomizationData(state),\n   isLoggedIn: selectUserLoggedIn(state),\n   isMobileDevice: selectMobileDeviceState(state),\n   platformAccessStatus: selectPlatformAccessStatus(state),\n   rangerState: selectRanger(state),\n   user: selectUserInfo(state),\n   userLoading: selectUserFetching(state),\n});\n\nconst mapDispatchToProps: MapDispatchToProps<DispatchProps, {}> = dispatch => ({\n   fetchConfigs: () => dispatch(configsFetch()),\n   fetchSonic: () => dispatch(sonicFetch()),\n   fetchCustomization: () => dispatch(customizationFetch()),\n   logout: () => dispatch(logoutFetch()),\n   toggleChartRebuild: () => dispatch(toggleChartRebuild()),\n   rangerConnect: payload => dispatch(rangerConnectFetch(payload)),\n   userFetch: () => dispatch(userFetch()),\n   walletsReset: () => dispatch(walletsReset()),\n});\n\nexport const Layout = compose(\n   injectIntl,\n   withRouter,\n   connect(mapStateToProps, mapDispatchToProps),\n)(LayoutComponent) as React.FunctionComponent;\n"],"sourceRoot":""}